{"ast":null,"code":"/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __decorate, __extends, __rest } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { polyfill } from \"react-lifecycles-compat\";\nimport { AbstractPureComponent2, Classes } from \"../../common\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\";\n\nvar Text =\n/** @class */\nfunction (_super) {\n  __extends(Text, _super);\n\n  function Text() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.state = {\n      isContentOverflowing: false,\n      textContent: \"\"\n    };\n    _this.textRef = null;\n    return _this;\n  }\n\n  Text.prototype.componentDidMount = function () {\n    this.update();\n  };\n\n  Text.prototype.componentDidUpdate = function () {\n    this.update();\n  };\n\n  Text.prototype.render = function () {\n    var _a;\n\n    var _this = this;\n\n    var _b = this.props,\n        children = _b.children,\n        className = _b.className,\n        ellipsize = _b.ellipsize,\n        _c = _b.tagName,\n        tagName = _c === void 0 ? \"div\" : _c,\n        title = _b.title,\n        htmlProps = __rest(_b, [\"children\", \"className\", \"ellipsize\", \"tagName\", \"title\"]);\n\n    var classes = classNames(className, (_a = {}, _a[Classes.TEXT_OVERFLOW_ELLIPSIS] = ellipsize, _a));\n    return React.createElement(tagName, __assign(__assign({}, htmlProps), {\n      className: classes,\n      ref: function (ref) {\n        return _this.textRef = ref;\n      },\n      title: title !== null && title !== void 0 ? title : this.state.isContentOverflowing ? this.state.textContent : undefined\n    }), children);\n  };\n\n  Text.prototype.update = function () {\n    var _a;\n\n    if (((_a = this.textRef) === null || _a === void 0 ? void 0 : _a.textContent) == null) {\n      return;\n    }\n\n    var newState = {\n      isContentOverflowing: this.props.ellipsize && this.textRef.scrollWidth > this.textRef.clientWidth,\n      textContent: this.textRef.textContent\n    };\n    this.setState(newState);\n  };\n\n  Text.displayName = DISPLAYNAME_PREFIX + \".Text\";\n  Text.defaultProps = {\n    ellipsize: false\n  };\n  Text = __decorate([polyfill], Text);\n  return Text;\n}(AbstractPureComponent2);\n\nexport { Text };","map":null,"metadata":{},"sourceType":"module"}