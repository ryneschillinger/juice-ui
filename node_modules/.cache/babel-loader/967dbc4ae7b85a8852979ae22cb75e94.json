{"ast":null,"code":"var _jsxFileName = \"/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/src/@candy-ui/demo/patterns/Radio/demo.jsx\";\nimport React from \"react\"; //import cx from \"classnames\";\n\nimport Typo from \"../../../core/Typography\";\nimport { SidebarContainer } from \"../../components/SidebarContainer\";\nimport styles from \"./style.module.css\";\nimport DemoAppStyle from \"../../styles/style.module.css\";\n\nconst DemoStart = props => {\n  React.useEffect(() => {\n    document.title = \"React Design System 2.0 | Getting Started\";\n    document.getElementsByTagName(\"META\")[\"description\"].content = \"Ready-to-use React JS componentsfor save your time. Installation guide.\";\n  });\n  return React.createElement(\"div\", {\n    className: DemoAppStyle[\"content-container\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: DemoAppStyle[\"content-component\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Typo, {\n    type: \"h3\",\n    className: styles.h4_title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Radio Button\"), React.createElement(Typo, {\n    type: \"h6\",\n    className: styles.h6_title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Starting a new project\"), React.createElement(Typo, {\n    large: true,\n    className: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"After installing the dependencies with the npm install command, you can start developing a new project. You will discover design system components in the folder:\", \" \", React.createElement(\"span\", {\n    className: styles.text_warning,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"src\\\\@candy-ui\\\\core\"), \". For the documentation stored locally refer to a folder:\", \" \", React.createElement(\"span\", {\n    className: styles.text_warning,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"src\\\\@candy-ui\\\\demo\"), \". Style files are available here:\", \" \", React.createElement(\"span\", {\n    className: styles.text_warning,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"src\\\\@candy-ui\\\\styles\"), \". Before you get started with development, you need to include styles in your main application file, for example,\", \" \", React.createElement(\"span\", {\n    className: styles.text_warning,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"App.js\"), \". To perform this, insert the import code:\"), React.createElement(\"div\", {\n    className: styles.text_command__code,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"import \\\"normalize.css/normalize.css\\\"; \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), \"import \\\"@blueprintjs/core/lib/css/blueprint.css\\\"; \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), \"import \\\"./@candy-ui/styles/setproduct.css\\\";\"), React.createElement(Typo, {\n    large: true,\n    className: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"For the proper usage of components in your project, apply the sample code and component's API from the component documentation page. The\", \" \", React.createElement(\"span\", {\n    className: styles.text_warning,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Button\"), \" import example:\"), React.createElement(\"div\", {\n    className: styles.text_command__code,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"import Button from \\\"./@candy-ui/core/Button\\\";\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), \"const App = () => { return <Button color=\\\"primary\\\" text=\\\"BUTTON\\\"/>; };\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), \"export default App;\"), React.createElement(Typo, {\n    type: \"h6\",\n    className: styles.h6_title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Existing project integration\"), React.createElement(Typo, {\n    large: true,\n    className: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Copy the \", React.createElement(\"span\", {\n    className: styles.text_warning,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"@candy-ui\"), \" \", \"folder from the archive into the\", \" \", React.createElement(\"span\", {\n    className: styles.text_warning,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"src\"), \" folder of your project. Include styles in your primary application file, for example,\", \" \", React.createElement(\"span\", {\n    className: styles.text_warning,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"App.js\"), \". To perform this, insert the import code:\"), React.createElement(\"div\", {\n    className: styles.text_command__code,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"import \\\"normalize.css/normalize.css\\\"; \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), \"import \\\"@blueprintjs/core/lib/css/blueprint.css\\\"; \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), \"import \\\"./@candy-ui/styles/setproduct.css\\\";\"), React.createElement(Typo, {\n    large: true,\n    className: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"For the proper usage of components in your project, apply the sample code and component's API from the component documentation page. The\", \" \", React.createElement(\"span\", {\n    className: styles.text_warning,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Button\"), \" import example:\"), React.createElement(\"div\", {\n    className: styles.text_command__code,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"import Button from \\\"./@candy-ui/core/Button\\\";\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), \"const App = () => { return <Button color=\\\"primary\\\" text=\\\"BUTTON\\\"/>; };\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }), \"export default App;\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  })), React.createElement(SidebarContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: DemoAppStyle[\"right_sidebar\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Holla\")));\n};\n\nexport default DemoStart;","map":{"version":3,"sources":["/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/src/@candy-ui/demo/patterns/Radio/demo.jsx"],"names":["React","Typo","SidebarContainer","styles","DemoAppStyle","DemoStart","props","useEffect","document","title","getElementsByTagName","content","h4_title","h6_title","text","text_warning","text_command__code"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n//import cx from \"classnames\";\r\nimport Typo from \"../../../core/Typography\";\r\nimport { SidebarContainer } from \"../../components/SidebarContainer\";\r\nimport styles from \"./style.module.css\";\r\nimport DemoAppStyle from \"../../styles/style.module.css\";\r\n\r\nconst DemoStart = props => {\r\n  React.useEffect(() => {\r\n    document.title = `React Design System 2.0 | Getting Started`;\r\n    document.getElementsByTagName(\"META\")[\r\n      \"description\"\r\n    ].content = `Ready-to-use React JS componentsfor save your time. Installation guide.`;\r\n  });\r\n\r\n  return (\r\n    <div className={DemoAppStyle[\"content-container\"]}>\r\n      <div className={DemoAppStyle[\"content-component\"]}>\r\n        <Typo type=\"h3\" className={styles.h4_title}>\r\n          Radio Button\r\n        </Typo>\r\n        <Typo type=\"h6\" className={styles.h6_title}>\r\n          Starting a new project\r\n        </Typo>\r\n        <Typo large className={styles.text}>\r\n          After installing the dependencies with the npm install command, you can\r\n          start developing a new project. You will discover design system\r\n          components in the folder:{\" \"}\r\n          <span className={styles.text_warning}>src\\@candy-ui\\core</span>.\r\n          For the documentation stored locally refer to a folder:{\" \"}\r\n          <span className={styles.text_warning}>src\\@candy-ui\\demo</span>.\r\n          Style files are available here:{\" \"}\r\n          <span className={styles.text_warning}>src\\@candy-ui\\styles</span>.\r\n          Before you get started with development, you need to include styles in\r\n          your main application file, for example,{\" \"}\r\n          <span className={styles.text_warning}>App.js</span>. To perform this,\r\n          insert the import code:\r\n        </Typo>\r\n        <div className={styles.text_command__code}>\r\n          import \"normalize.css/normalize.css\"; <br />\r\n          import \"@blueprintjs/core/lib/css/blueprint.css\"; <br />\r\n          import \"./@candy-ui/styles/setproduct.css\";\r\n        </div>\r\n        <Typo large className={styles.text}>\r\n          For the proper usage of components in your project, apply the sample\r\n          code and component's API from the component documentation page. The{\" \"}\r\n          <span className={styles.text_warning}>Button</span> import example:\r\n        </Typo>\r\n        <div className={styles.text_command__code}>\r\n          {`import Button from \"./@candy-ui/core/Button\";`}\r\n          <br />\r\n          {`const App = () => { return <Button color=\"primary\" text=\"BUTTON\"/>; };`}\r\n          <br />\r\n          {`export default App;`}\r\n        </div>\r\n\r\n        <Typo type=\"h6\" className={styles.h6_title}>\r\n          Existing project integration\r\n        </Typo>\r\n        <Typo large className={styles.text}>\r\n          Copy the <span className={styles.text_warning}>@candy-ui</span>{\" \"}\r\n          folder from the archive into the{\" \"}\r\n          <span className={styles.text_warning}>src</span> folder of your project.\r\n          Include styles in your primary application file, for example,{\" \"}\r\n          <span className={styles.text_warning}>App.js</span>. To perform this,\r\n          insert the import code:\r\n        </Typo>\r\n        <div className={styles.text_command__code}>\r\n          import \"normalize.css/normalize.css\"; <br />\r\n          import \"@blueprintjs/core/lib/css/blueprint.css\"; <br />\r\n          import \"./@candy-ui/styles/setproduct.css\";\r\n        </div>\r\n        <Typo large className={styles.text}>\r\n          For the proper usage of components in your project, apply the sample\r\n          code and component's API from the component documentation page. The{\" \"}\r\n          <span className={styles.text_warning}>Button</span> import example:\r\n        </Typo>\r\n        <div className={styles.text_command__code}>\r\n          {`import Button from \"./@candy-ui/core/Button\";`}\r\n          <br />\r\n          {`const App = () => { return <Button color=\"primary\" text=\"BUTTON\"/>; };`}\r\n          <br />\r\n          {`export default App;`}\r\n        </div>\r\n        <br />\r\n      </div>\r\n\r\n      {/* Props*/}\r\n      <SidebarContainer>\r\n        <div className={DemoAppStyle[\"right_sidebar\"]}>\r\n          Holla\r\n        </div>\r\n      </SidebarContainer>\r\n      {/***** */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DemoStart;\r\n"]},"metadata":{},"sourceType":"module"}