{"ast":null,"code":"import _slicedToArray from \"/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/src/@candy-ui/demo/Navbar/DemoComponent.jsx\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n/**Import core component (variable)*/\n\n/**Import NAVBAR components parts */\n\nimport NavbarGroup from \"../../core/Navbar/Group.jsx\";\nimport NavbarHeading from \"../../core/Navbar/Heading.jsx\";\nimport Navbar from \"../../core/Navbar\";\nimport Hamburger from \"../../core/Hamburger\";\nimport { CustomButton } from \"../components/CustomButton\";\n/** */\n\n/*SetProduct components*/\n\nimport Button from \"../../core/Button\";\n/** */\n\nexport const DEMO = props => {\n  const type = props.type,\n        view = props.view,\n        color = props.color,\n        setShape = props.setShape,\n        location = props.location,\n        _props$active = props.active,\n        active = _props$active === void 0 ? false : _props$active;\n\n  const _React$useState = React.useState(active),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        isOpen = _React$useState2[0],\n        setOpen = _React$useState2[1];\n  /**Get and store window width */\n\n\n  const _React$useState3 = React.useState(window.innerWidth),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        sizeW = _React$useState4[0],\n        setW = _React$useState4[1];\n\n  React.useEffect(() => {\n    window.addEventListener(\"resize\", () => setW(window.innerWidth));\n    sizeW <= 920 ? setShape(\"mobile\") : sizeW <= 1440 ? setShape(\"dense\") : setShape(\"desktop\");\n  }, [setShape, sizeW]);\n  const maxWidth = type === \"mobile\" ? \"360px\" : type === \"tablet\" ? \"1024px\" : \"100%\";\n  return React.createElement(\"div\", {\n    style: {\n      maxWidth: maxWidth\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Navbar, {\n    type: type,\n    view: view,\n    color: color,\n    style: {\n      zIndex: \"0\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(NavbarGroup, {\n    align: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(NavbarHeading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Hamburger, {\n    type: \"circle\",\n    view: view === \"filled\" ? \"smooth\" : \"outlined\",\n    color: color,\n    size: type === \"desktop\" ? 20 : 16,\n    variant: \"slider\",\n    isOpen: isOpen,\n    setOpen: setOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }))), React.createElement(NavbarGroup, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/components/navbar/dashboard\",\n    style: {\n      textDecoration: \"none\",\n      marginLeft: \"12px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, view === \"filled\" ? React.createElement(CustomButton, {\n    view: \"flat\",\n    color: color,\n    text: \"Dashboard\",\n    device: type,\n    active: location.pathname.match(\"dashboard\") && true,\n    dense: type === \"desktop\" ? false : true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }) : React.createElement(Button, {\n    type: \"default\",\n    view: view === \"smooth\" ? view : \"flat\",\n    color: color,\n    text: \"Dashboard\",\n    active: location.pathname.match(\"dashboard\") && true,\n    dense: type === \"desktop\" ? false : true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  })), React.createElement(Link, {\n    to: \"/components/navbar/messages\",\n    style: {\n      textDecoration: \"none\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, view === \"filled\" ? React.createElement(CustomButton, {\n    view: \"flat\",\n    color: color,\n    text: \"Messages\",\n    device: type,\n    active: location.pathname.match(\"messages\") && true,\n    dense: type === \"desktop\" ? false : true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }) : React.createElement(Button, {\n    type: \"default\",\n    view: view === \"smooth\" ? view : \"flat\",\n    color: color,\n    text: \"Messages\",\n    active: location.pathname.match(\"messages\") && true,\n    dense: type === \"desktop\" ? false : true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  })), React.createElement(Link, {\n    to: \"/components/navbar/notifications\",\n    style: {\n      textDecoration: \"none\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, view === \"filled\" ? React.createElement(CustomButton, {\n    view: \"flat\",\n    color: color,\n    text: \"Notifications\",\n    device: type,\n    active: location.pathname.match(\"notifications\") && true,\n    dense: type === \"desktop\" ? false : true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }) : React.createElement(Button, {\n    type: \"default\",\n    view: view === \"smooth\" ? view : \"flat\",\n    color: color,\n    text: \"Notifications\",\n    active: location.pathname.match(\"notifications\") && true,\n    dense: type === \"desktop\" ? false : true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }))), React.createElement(NavbarGroup, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/components/navbar/sign-in\",\n    style: {\n      textDecoration: \"none\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"default\",\n    view: view === \"filled\" ? \"smooth\" : \"outlined\",\n    color: color,\n    text: \"Sign In\",\n    style: {\n      marginLeft: \"15px\"\n    },\n    active: location.pathname.match(\"sign-in\") && true,\n    dense: type === \"desktop\" ? false : true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  })), React.createElement(Link, {\n    to: \"/components/navbar/register\",\n    style: {\n      textDecoration: \"none\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"default\",\n    view: \"filled\",\n    color: color,\n    text: \"Register\",\n    style: {\n      marginLeft: \"1rem\"\n    },\n    active: location.pathname.match(\"register\") && true,\n    dense: type === \"desktop\" ? false : true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  })))));\n};","map":{"version":3,"sources":["/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/src/@candy-ui/demo/Navbar/DemoComponent.jsx"],"names":["React","Link","NavbarGroup","NavbarHeading","Navbar","Hamburger","CustomButton","Button","DEMO","props","type","view","color","setShape","location","active","useState","isOpen","setOpen","window","innerWidth","sizeW","setW","useEffect","addEventListener","maxWidth","zIndex","textDecoration","marginLeft","pathname","match"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/**Import core component (variable)*/\r\n/**Import NAVBAR components parts */\r\nimport NavbarGroup from \"../../core/Navbar/Group.jsx\";\r\nimport NavbarHeading from \"../../core/Navbar/Heading.jsx\";\r\nimport Navbar from \"../../core/Navbar\";\r\nimport Hamburger from \"../../core/Hamburger\";\r\nimport { CustomButton } from \"../components/CustomButton\";\r\n/** */\r\n\r\n/*SetProduct components*/\r\nimport Button from \"../../core/Button\";\r\n/** */\r\n\r\nexport const DEMO = props => {\r\n  const { type, view, color, setShape, location, active = false } = props;\r\n  const [isOpen, setOpen] = React.useState(active);\r\n\r\n  /**Get and store window width */\r\n  const [sizeW, setW] = React.useState(window.innerWidth);\r\n\r\n  React.useEffect(() => {\r\n    window.addEventListener(\"resize\", () => setW(window.innerWidth));\r\n    sizeW <= 920\r\n      ? setShape(\"mobile\")\r\n      : sizeW <= 1440\r\n      ? setShape(\"dense\")\r\n      : setShape(\"desktop\");\r\n  }, [setShape, sizeW]);\r\n\r\n  const maxWidth =\r\n    type === \"mobile\" ? \"360px\" : type === \"tablet\" ? \"1024px\" : \"100%\";\r\n\r\n  return (\r\n    <div style={{ maxWidth: maxWidth }}>\r\n      {/*APPBAR*/}\r\n      <Navbar type={type} view={view} color={color} style={{ zIndex: \"0\" }}>\r\n        {/**LOGO */}\r\n        <NavbarGroup align=\"left\">\r\n          <NavbarHeading>\r\n            <Hamburger\r\n              type=\"circle\"\r\n              view={view === \"filled\" ? \"smooth\" : \"outlined\"}\r\n              color={color}\r\n              size={type === \"desktop\" ? 20 : 16}\r\n              variant=\"slider\"\r\n              isOpen={isOpen}\r\n              setOpen={setOpen}\r\n            />\r\n          </NavbarHeading>\r\n        </NavbarGroup>\r\n\r\n        {/**BOTTONS GROUP */}\r\n        <NavbarGroup align=\"center\">\r\n          {/**BUTTON HOME*/}\r\n          <Link\r\n            to=\"/components/navbar/dashboard\"\r\n            style={{ textDecoration: \"none\", marginLeft: \"12px\" }}\r\n          >\r\n            {view === \"filled\" ? (\r\n              <CustomButton\r\n                view=\"flat\"\r\n                color={color}\r\n                text=\"Dashboard\"\r\n                device={type}\r\n                active={location.pathname.match(\"dashboard\") && true}\r\n                dense={type === \"desktop\" ? false : true}\r\n              />\r\n            ) : (\r\n              <Button\r\n                type=\"default\"\r\n                view={view === \"smooth\" ? view : \"flat\"}\r\n                color={color}\r\n                text=\"Dashboard\"\r\n                active={location.pathname.match(\"dashboard\") && true}\r\n                dense={type === \"desktop\" ? false : true}\r\n              />\r\n            )}\r\n          </Link>\r\n          {/**BUTTON MESSAGES*/}\r\n          <Link\r\n            to=\"/components/navbar/messages\"\r\n            style={{ textDecoration: \"none\" }}\r\n          >\r\n            {view === \"filled\" ? (\r\n              <CustomButton\r\n                view=\"flat\"\r\n                color={color}\r\n                text=\"Messages\"\r\n                device={type}\r\n                active={location.pathname.match(\"messages\") && true}\r\n                dense={type === \"desktop\" ? false : true}\r\n              />\r\n            ) : (\r\n              <Button\r\n                type=\"default\"\r\n                view={view === \"smooth\" ? view : \"flat\"}\r\n                color={color}\r\n                text=\"Messages\"\r\n                active={location.pathname.match(\"messages\") && true}\r\n                dense={type === \"desktop\" ? false : true}\r\n              />\r\n            )}\r\n          </Link>\r\n\r\n          {/**NOTIFICATIONS BUTTON*/}\r\n          <Link\r\n            to=\"/components/navbar/notifications\"\r\n            style={{ textDecoration: \"none\" }}\r\n          >\r\n            {view === \"filled\" ? (\r\n              <CustomButton\r\n                view=\"flat\"\r\n                color={color}\r\n                text=\"Notifications\"\r\n                device={type}\r\n                active={location.pathname.match(\"notifications\") && true}\r\n                dense={type === \"desktop\" ? false : true}\r\n              />\r\n            ) : (\r\n              <Button\r\n                type=\"default\"\r\n                view={view === \"smooth\" ? view : \"flat\"}\r\n                color={color}\r\n                text=\"Notifications\"\r\n                active={location.pathname.match(\"notifications\") && true}\r\n                dense={type === \"desktop\" ? false : true}\r\n              />\r\n            )}\r\n          </Link>\r\n          {/** */}\r\n        </NavbarGroup>\r\n        {/**ICON-BUTTONS GROUP */}\r\n        <NavbarGroup align=\"right\">\r\n          <Link\r\n            to=\"/components/navbar/sign-in\"\r\n            style={{\r\n              textDecoration: \"none\"\r\n            }}\r\n          >\r\n            <Button\r\n              type=\"default\"\r\n              view={view === \"filled\" ? \"smooth\" : \"outlined\"}\r\n              color={color}\r\n              text=\"Sign In\"\r\n              style={{ marginLeft: \"15px\" }}\r\n              active={location.pathname.match(\"sign-in\") && true}\r\n              dense={type === \"desktop\" ? false : true}\r\n            />\r\n          </Link>\r\n          <Link\r\n            to=\"/components/navbar/register\"\r\n            style={{\r\n              textDecoration: \"none\"\r\n            }}\r\n          >\r\n            <Button\r\n              type=\"default\"\r\n              view=\"filled\"\r\n              color={color}\r\n              text=\"Register\"\r\n              style={{ marginLeft: \"1rem\" }}\r\n              active={location.pathname.match(\"register\") && true}\r\n              dense={type === \"desktop\" ? false : true}\r\n            />\r\n          </Link>\r\n        </NavbarGroup>\r\n        {/** */}\r\n      </Navbar>\r\n      {/*** END OF DEMO *************** */}\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}