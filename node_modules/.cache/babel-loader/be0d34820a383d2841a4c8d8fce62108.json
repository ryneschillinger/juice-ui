{"ast":null,"code":"import _slicedToArray from \"/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/src/@candy-ui/core/Select/SelectMulti/SelectMulti.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport cx from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { MultiSelect as MultiSelectSource } from \"@blueprintjs/select\";\nimport { Icon } from \"@blueprintjs/core\";\nimport Button from \"../../../core/Button\";\nimport Menu from \"../../../core/Menu\";\nimport MenuItem from \"../../../core/Menu/MenuItem\";\nimport Type from \"./_type.module.css\";\nimport View from \"./_view.module.css\";\nimport Color from \"../../../styles/color.module.css\";\nimport MenuType from \"../../../core/Menu/_type.module.css\";\nimport MenuView from \"../../../core/Menu/_view.module.css\";\nimport { ThemeContext } from \"../../ThemeContext\";\nexport default function Select(props) {\n  const _props$type = props.type,\n        type = _props$type === void 0 ? \"def\" : _props$type,\n        _props$view = props.view,\n        view = _props$view === void 0 ? \"filled\" : _props$view,\n        _props$color = props.color,\n        color = _props$color === void 0 ? \"default\" : _props$color,\n        _props$disabled = props.disabled,\n        disabled = _props$disabled === void 0 ? \"false\" : _props$disabled,\n        icon = props.icon,\n        fill = props.fill,\n        centerAlign = props.centerAlign,\n        customWidth = props.customWidth,\n        matchTargetWidth = props.matchTargetWidth,\n        items = props.items,\n        placeholder = props.placeholder,\n        selectedItem = props.selectedItem,\n        onItemSelect = props.onItemSelect,\n        onActiveItemChange = props.onActiveItemChange,\n        allowCreate = props.allowCreate,\n        newItemMap = props.newItemMap,\n        restProps = _objectWithoutProperties(props, [\"type\", \"view\", \"color\", \"disabled\", \"icon\", \"fill\", \"centerAlign\", \"customWidth\", \"matchTargetWidth\", \"items\", \"placeholder\", \"selectedItem\", \"onItemSelect\", \"onActiveItemChange\", \"allowCreate\", \"newItemMap\"]);\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        createdItems = _useState2[0],\n        setCreatedItems = _useState2[1];\n\n  const _useState3 = useState(items),\n        _useState4 = _slicedToArray(_useState3, 2),\n        stateItems = _useState4[0],\n        setStateItems = _useState4[1];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        selections = _useState6[0],\n        setSelections = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        currentQuery = _useState8[0],\n        setCurrentQuery = _useState8[1];\n\n  let targetWidth;\n  let inputRef = React.useRef();\n  console.log(targetWidth);\n  useEffect(() => {\n    targetWidth = inputRef.clientWidth;\n  }, matchTargetWidth);\n\n  const renderItem = (item, {\n    handleClick,\n    modifiers\n  }) => {\n    if (currentQuery.length > 0 && !modifiers.matchesPredicate) {\n      return null;\n    }\n\n    const text = \"\".concat(item.id, \". \").concat(item.title);\n    return React.createElement(MenuItem, {\n      type: type,\n      view: view,\n      color: color,\n      icon: isItemSelected(item) ? \"tick\" : \"blank\",\n      active: isItemSelected(item),\n      disabled: modifiers.disabled,\n      label: item.label ? item.label.toString() : null,\n      key: item.id,\n      onClick: handleClick,\n      text: highlightText(text, currentQuery),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    });\n  };\n\n  const resetForm = () => {\n    setCurrentQuery('');\n    inputRef.focus();\n  };\n\n  const renderMenuList = ({\n    itemsParentRef,\n    renderItem\n  }) => {\n    const doesQueryExist = currentQuery.length > 0;\n    const renderedItems = doesQueryExist ? stateItems.map(renderItem).filter(item => item != null) : stateItems.map(renderItem);\n\n    const renderNoItems = () => {\n      if (allowCreate) {\n        return React.createElement(MenuItem, {\n          type: type,\n          color: color,\n          icon: React.createElement(Icon, {\n            icon: \"add\",\n            iconSize: type === \"dense\" ? 16 : 20,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90\n            },\n            __self: this\n          }),\n          text: \"Create \\\"\".concat(currentQuery, \"\\\"\"),\n          onClick: () => {\n            createNewItem(currentQuery);\n            resetForm();\n          },\n          shouldDismissPopover: false,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(MenuItem, {\n        type: type,\n        view: view,\n        color: color,\n        disabled: true,\n        text: \"No results matching \\\"\".concat(currentQuery, \"\\\"\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      });\n    };\n\n    return React.createElement(Menu, {\n      type: type,\n      view: view === \"outlined\" ? \"raised\" : view,\n      color: color,\n      ulRef: itemsParentRef,\n      disabled: disabled,\n      style: {\n        maxHeight: \"390px\",\n        overflow: \"auto\",\n        width: \"190px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, renderedItems.length === 0 && renderNoItems(), renderedItems);\n  };\n\n  const filterItem = (query, item) => {\n    return \"\".concat(item.id, \". \").concat(item.title.toLowerCase(), \" \").concat(item.label).indexOf(query.toLowerCase()) >= 0;\n  };\n\n  const highlightText = (text, query) => {\n    let lastIndex = 0;\n    const words = query.split(/\\s+/).filter(word => word.length > 0).map(escapeRegExpChars);\n\n    if (words.length === 0) {\n      return [text];\n    }\n\n    const regexp = new RegExp(words.join(\"|\"), \"gi\");\n    const tokens = [];\n\n    while (true) {\n      const match = regexp.exec(text);\n\n      if (!match) {\n        break;\n      }\n\n      const length = match[0].length;\n      const before = text.slice(lastIndex, regexp.lastIndex - length);\n\n      if (before.length > 0) {\n        tokens.push(before);\n      }\n\n      lastIndex = regexp.lastIndex;\n      tokens.push(React.createElement(\"strong\", {\n        key: lastIndex,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, match[0]));\n    }\n\n    const rest = text.slice(lastIndex);\n\n    if (rest.length > 0) {\n      tokens.push(rest);\n    }\n\n    return tokens;\n  };\n\n  const escapeRegExpChars = text => {\n    return text.replace(/([.*+?^=!:${}()|\\[\\]\\/\\\\])/g, \"\\\\$1\");\n  };\n\n  const handleTagRemove = itemTitle => {\n    deselectItem(selections.find(item => item.title === itemTitle));\n  };\n\n  const selectItem = item => {\n    selectItems([item]);\n  };\n\n  const selectItems = itemsToSelect => {\n    let nextCreatedItems = createdItems.slice();\n    let nextItems = stateItems.slice();\n    let nextSelections = selections.slice();\n    itemsToSelect.forEach(item => {\n      const results = maybeAddCreatedItemToArrays(nextItems, nextCreatedItems, item);\n      nextSelections = results.selections;\n      nextCreatedItems = results.createdItems; // Avoid re-creating an item that is already selected (the \"Create\n      // Item\" option will be shown even if it matches an already selected\n      // item).\n\n      nextItems = !arrayContainsItem(nextItems, item) ? [...nextItems, item] : nextItems;\n    });\n    setCreatedItems(nextCreatedItems);\n    setStateItems(nextItems);\n    setSelections(nextSelections);\n  };\n\n  const deselectItem = item => {\n    const _maybeDeleteCreatedIt = maybeDeleteCreatedItemFromArrays(stateItems, createdItems, item),\n          nextCreatedItems = _maybeDeleteCreatedIt.nextCreatedItems,\n          nextStateItems = _maybeDeleteCreatedIt.nextStateItems; // Delete the item if the user manually created it.\n\n\n    setCreatedItems(nextCreatedItems);\n    setStateItems(nextStateItems);\n    setSelections(selections.filter(i => i.title !== item.title));\n  };\n\n  const maybeAddCreatedItemToArrays = (stateItems, createdItems, item) => {\n    const isNewlyCreatedItem = !arrayContainsItem(stateItems, item);\n    return {\n      createdItems: isNewlyCreatedItem ? addItemToArray(createdItems, item) : createdItems,\n      selections: addItemToArray(selections, item),\n      // Add a created item to `stateItems` so that the item can be deselected.\n      stateItems: isNewlyCreatedItem ? addItemToArray(stateItems, item) : stateItems\n    };\n  };\n\n  const maybeDeleteCreatedItemFromArrays = (stateItems, createdItems, item) => {\n    const wasItemCreatedByUser = arrayContainsItem(createdItems, item);\n    const nextCreatedItems = wasItemCreatedByUser ? deleteItemFromArray(createdItems, item) : createdItems;\n    const nextStateItems = wasItemCreatedByUser ? deleteItemFromArray(stateItems, item) : stateItems; // Delete the item if the user manually created it.\n\n    return {\n      nextCreatedItems,\n      nextStateItems\n    };\n  };\n\n  const isItemSelected = itemToFind => {\n    return selections.some(item => item.title === itemToFind.title);\n  };\n\n  const handleItemSelect = item => {\n    if (!isItemSelected(item)) {\n      selectItem(item);\n    } else {\n      deselectItem(item);\n    }\n  };\n\n  const arrayContainsItem = (array, itemToFind) => {\n    return array.some(item => item.title === itemToFind.title);\n  };\n\n  const addItemToArray = (array, itemToAdd) => {\n    return [...array, itemToAdd];\n  };\n\n  const deleteItemFromArray = (array, itemToDelete) => {\n    return array.filter(item => item !== itemToDelete);\n  };\n\n  const handleItemsPaste = items => {\n    // On paste, don't bother with deselecting already selected values, just\n    // add the new ones.\n    selectItems([items]);\n  };\n\n  const handleClear = () => {\n    setStateItems(items);\n    setSelections([]);\n  };\n\n  const clearButtonMargin = () => type === \"dense\" ? \"0.4rem 0.2rem 0.4rem 0.4rem\" : \"0.7rem 0.3rem 0.7rem 0.7rem\";\n\n  const clearButton = selections.length > 0 ? React.createElement(Button, {\n    type: \"default\",\n    dense: type === \"dense\",\n    color: color,\n    view: \"flat\",\n    style: {\n      margin: clearButtonMargin()\n    },\n    icon: React.createElement(Icon, {\n      icon: \"cross\",\n      iconSize: type === \"dense\" ? 16 : 20,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }),\n    onClick: handleClear,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267\n    },\n    __self: this\n  }) : undefined;\n\n  const renderTag = item => item.title;\n\n  const createNewItem = title => {\n    const newItem = {\n      id: stateItems.length + 1,\n      title: newItemMap.title ? newItemMap.title(title) : title,\n      label: newItemMap.label\n    };\n    selectItems([newItem]);\n  };\n\n  return React.createElement(ThemeContext.Consumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295\n    },\n    __self: this\n  }, ({\n    isDark\n  }) => React.createElement(MultiSelectSource, Object.assign({\n    filterable: true,\n    matchTargetWidth: matchTargetWidth,\n    itemPredicate: filterItem,\n    itemRenderer: renderItem,\n    itemListRenderer: renderMenuList,\n    tagRenderer: renderTag,\n    items: stateItems,\n    selectedItems: selections,\n    fill: false,\n    onItemSelect: handleItemSelect,\n    onItemsPaste: handleItemsPaste,\n    tagInputProps: {\n      fill: true,\n      placeholder: placeholder,\n      onRemove: handleTagRemove,\n      rightElement: clearButton,\n      inputRef: el => inputRef = el,\n      inputProps: {\n        value: currentQuery,\n        onChange: e => setCurrentQuery(e.target.value)\n      },\n      className: cx(Type[type], View[view], Color[color])\n    },\n    popoverProps: {\n      minimal: true,\n      fill: fill,\n      popoverClassName: cx(View[\"select-popover\"], MenuView[view], MenuType[type], Color[color])\n    }\n  }, restProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297\n    },\n    __self: this\n  })));\n}\nSelect.propTypes = {\n  /**\r\n   `The type of the component.\r\n   * Variants: `card` `action` `circle` `icon`\r\n   * Default value (if undefined): `default` `\r\n   */\n  type: PropTypes.oneOf([\"default\", \"card\", \"action\", \"circle\", \"icon\"]),\n\n  /**\r\n   ` The view of the component.\r\n   * Variants: `flat` `smooth` `outlined` `raised`\r\n   * Default value (if undefined): `filled` `\r\n   */\n  view: PropTypes.oneOf([\"filled\", \"flat\", \"smooth\", \"outlined\", \"raised\"]),\n\n  /**\r\n  ` The color of the component.\r\n   * Variants: `primary` `warning` `danger` `success` `primaryAlt` `warningAlt` `dangerAlt` `successAlt`\r\n   * Default value (if undefined): `default` `\r\n   */\n  color: PropTypes.oneOf([\"default\", \"primary\", \"warning\", \"danger\", \"success\", \"primary_alt\", \"warning_alt\", \"danger_alt\", \"success_alt\"]),\n\n  /**\r\n   * Item select event listener.\r\n   */\n  onItemSelect: PropTypes.func,\n\n  /**\r\n   * Whether this component should expand to fill its container.\r\n   */\n  fill: PropTypes.bool,\n\n  /**\r\n   * Name of a Blueprint UI icon (or an icon element) to render before the text.\r\n   */\n  icon: PropTypes.any,\n\n  /**\r\n   * If set to `true`, the button will display a centered loading spinner instead of its contents.\r\n   * The width of the button is not affected by the value of this prop.\r\n   */\n  loading: PropTypes.bool,\n\n  /**\r\n   * If `true`, the button will be disabled.\r\n   */\n  disabled: PropTypes.bool,\n\n  /**\r\n   * Whether target button text should be centered\r\n   */\n  centerAlign: PropTypes.bool,\n\n  /**\r\n   * If provided, allows new items to be created using the current query string.\r\n   */\n  allowCreate: PropTypes.bool\n  /**\r\n  * If provided, allows new items to be created using the current query string.\r\n  */\n  // newItemMap: React.PropTypes.shape({\n  //   title: React.PropTypes.any,\n  //   label: React.PropTypes.any \n  // })\n\n};","map":{"version":3,"sources":["/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/src/@candy-ui/core/Select/SelectMulti/SelectMulti.jsx"],"names":["React","useEffect","useState","cx","PropTypes","MultiSelect","MultiSelectSource","Icon","Button","Menu","MenuItem","Type","View","Color","MenuType","MenuView","ThemeContext","Select","props","type","view","color","disabled","icon","fill","centerAlign","customWidth","matchTargetWidth","items","placeholder","selectedItem","onItemSelect","onActiveItemChange","allowCreate","newItemMap","restProps","createdItems","setCreatedItems","stateItems","setStateItems","selections","setSelections","currentQuery","setCurrentQuery","targetWidth","inputRef","useRef","console","log","clientWidth","renderItem","item","handleClick","modifiers","length","matchesPredicate","text","id","title","isItemSelected","label","toString","highlightText","resetForm","focus","renderMenuList","itemsParentRef","doesQueryExist","renderedItems","map","filter","renderNoItems","createNewItem","maxHeight","overflow","width","filterItem","query","toLowerCase","indexOf","lastIndex","words","split","word","escapeRegExpChars","regexp","RegExp","join","tokens","match","exec","before","slice","push","rest","replace","handleTagRemove","itemTitle","deselectItem","find","selectItem","selectItems","itemsToSelect","nextCreatedItems","nextItems","nextSelections","forEach","results","maybeAddCreatedItemToArrays","arrayContainsItem","maybeDeleteCreatedItemFromArrays","nextStateItems","i","isNewlyCreatedItem","addItemToArray","wasItemCreatedByUser","deleteItemFromArray","itemToFind","some","handleItemSelect","array","itemToAdd","itemToDelete","handleItemsPaste","handleClear","clearButtonMargin","clearButton","margin","undefined","renderTag","newItem","isDark","onRemove","rightElement","el","inputProps","value","onChange","e","target","className","minimal","popoverClassName","propTypes","oneOf","func","bool","any","loading"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport cx from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport { MultiSelect as MultiSelectSource } from \"@blueprintjs/select\";\r\nimport { Icon } from \"@blueprintjs/core\";\r\nimport Button from \"../../../core/Button\";\r\nimport Menu from \"../../../core/Menu\";\r\nimport MenuItem from \"../../../core/Menu/MenuItem\";\r\nimport Type from \"./_type.module.css\";\r\nimport View from \"./_view.module.css\";\r\nimport Color from \"../../../styles/color.module.css\";\r\nimport MenuType from \"../../../core/Menu/_type.module.css\";\r\nimport MenuView from \"../../../core/Menu/_view.module.css\";\r\nimport { ThemeContext } from \"../../ThemeContext\";\r\n\r\nexport default function Select(props) {\r\n  const {\r\n    type = \"def\",\r\n    view = \"filled\",\r\n    color = \"default\",\r\n    disabled = \"false\",\r\n    icon,\r\n    fill,\r\n    centerAlign,\r\n    customWidth,\r\n    matchTargetWidth,\r\n    items,\r\n    placeholder,\r\n    selectedItem,\r\n    onItemSelect,\r\n    onActiveItemChange,\r\n    allowCreate,\r\n    newItemMap,\r\n    ...restProps\r\n  } = props;\r\n\r\n  const [createdItems, setCreatedItems] = useState([]);\r\n  const [stateItems, setStateItems] = useState(items);\r\n  const [selections, setSelections] = useState([]);\r\n  const [currentQuery, setCurrentQuery] = useState('');\r\n  let targetWidth;\r\n  let inputRef = React.useRef();\r\n  console.log(targetWidth)\r\n\r\n  useEffect(() => {\r\n    targetWidth = inputRef.clientWidth;\r\n  }, matchTargetWidth);\r\n\r\n  const renderItem  = (\r\n    item,\r\n    { handleClick, modifiers}\r\n  ) => {\r\n    if (currentQuery.length > 0 && !modifiers.matchesPredicate) {\r\n      return null;\r\n    }\r\n    const text = `${item.id}. ${item.title}`;\r\n    return (\r\n      <MenuItem\r\n        type={type}\r\n        view={view}\r\n        color={color}\r\n        icon={isItemSelected(item) ? \"tick\" : \"blank\"}\r\n        active={isItemSelected(item)}\r\n        disabled={modifiers.disabled}\r\n        label={item.label ? item.label.toString() : null}\r\n        key={item.id}\r\n        onClick={handleClick}\r\n        text={highlightText(text, currentQuery)}\r\n      />\r\n    );\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setCurrentQuery('');\r\n    inputRef.focus();\r\n  }\r\n  \r\n  const renderMenuList = ({ itemsParentRef, renderItem }) => {\r\n    const doesQueryExist = currentQuery.length > 0;\r\n    const renderedItems = doesQueryExist\r\n      ? stateItems.map(renderItem).filter(item => item != null)\r\n      : stateItems.map(renderItem);\r\n\r\n    const renderNoItems = () => {\r\n      if (allowCreate) {\r\n        return (\r\n          <MenuItem\r\n            type={type}\r\n            color={color}\r\n            icon={<Icon icon=\"add\" iconSize={ type === \"dense\" ? 16 : 20} />}\r\n            text={`Create \"${currentQuery}\"`}\r\n            onClick={() => { createNewItem(currentQuery); resetForm(); }}\r\n            shouldDismissPopover={false}\r\n          />\r\n        )\r\n      }\r\n      return (\r\n        <MenuItem\r\n          type={type}\r\n          view={view}\r\n          color={color}\r\n          disabled={true}\r\n          text={`No results matching \"${currentQuery}\"`}\r\n        />\r\n      )\r\n    };\r\n\r\n    return (\r\n      <Menu\r\n        type={type}\r\n        view={view === \"outlined\" ? \"raised\" : view}\r\n        color={color}\r\n        ulRef={itemsParentRef}\r\n        disabled={disabled}\r\n        style={{\r\n          maxHeight: \"390px\",\r\n          overflow: \"auto\",\r\n          width: `190px`\r\n        }}\r\n      >\r\n        {renderedItems.length === 0 && renderNoItems()}\r\n        {renderedItems}\r\n      </Menu>\r\n    );\r\n  };\r\n\r\n  const filterItem = (query, item) => {\r\n    return (\r\n      `${item.id}. ${item.title.toLowerCase()} ${item.label}`.indexOf(\r\n        query.toLowerCase()\r\n      ) >= 0\r\n    );\r\n  };\r\n  \r\n  const highlightText = (text, query) => {\r\n    let lastIndex = 0;\r\n    const words = query\r\n      .split(/\\s+/)\r\n      .filter((word) => word.length > 0)\r\n      .map(escapeRegExpChars);\r\n    if (words.length === 0) {\r\n      return [text];\r\n    }\r\n    const regexp = new RegExp(words.join(\"|\"), \"gi\");\r\n    const tokens = [];\r\n    while (true) {\r\n      const match = regexp.exec(text);\r\n      if (!match) {\r\n        break;\r\n      }\r\n      const length = match[0].length;\r\n      const before = text.slice(lastIndex, regexp.lastIndex - length);\r\n      if (before.length > 0) {\r\n        tokens.push(before);\r\n      }\r\n      lastIndex = regexp.lastIndex;\r\n      tokens.push(<strong key={lastIndex}>{match[0]}</strong>);\r\n    }\r\n    const rest = text.slice(lastIndex);\r\n    if (rest.length > 0) {\r\n      tokens.push(rest);\r\n    }\r\n    return tokens;\r\n  }\r\n  \r\n  const escapeRegExpChars = text => {\r\n    return text.replace(/([.*+?^=!:${}()|\\[\\]\\/\\\\])/g, \"\\\\$1\");\r\n  }\r\n\r\n  const handleTagRemove = (itemTitle) => {\r\n    deselectItem(selections.find(item => item.title === itemTitle));\r\n  };\r\n\r\n  const selectItem = item => {\r\n    selectItems([item]);\r\n  }\r\n\r\n  const selectItems = itemsToSelect => {\r\n    let nextCreatedItems = createdItems.slice();\r\n    let nextItems = stateItems.slice();\r\n    let nextSelections = selections.slice();\r\n\r\n    itemsToSelect.forEach(item => {\r\n        const results = maybeAddCreatedItemToArrays(nextItems, nextCreatedItems, item);\r\n        nextSelections = results.selections;\r\n        nextCreatedItems = results.createdItems;\r\n        // Avoid re-creating an item that is already selected (the \"Create\r\n        // Item\" option will be shown even if it matches an already selected\r\n        // item).\r\n        nextItems = !arrayContainsItem(nextItems, item) ? [...nextItems, item] : nextItems;\r\n    });\r\n    setCreatedItems(nextCreatedItems);\r\n    setStateItems(nextItems);\r\n    setSelections(nextSelections);\r\n  }\r\n\r\n  const deselectItem = item => {\r\n    const { nextCreatedItems, nextStateItems } = maybeDeleteCreatedItemFromArrays(\r\n        stateItems,\r\n        createdItems,\r\n        item\r\n    );\r\n    // Delete the item if the user manually created it.\r\n    setCreatedItems(nextCreatedItems);\r\n    setStateItems(nextStateItems);\r\n    setSelections(selections.filter((i) => i.title !== item.title));\r\n  }\r\n\r\n  const maybeAddCreatedItemToArrays = (stateItems, createdItems, item) => {\r\n    const isNewlyCreatedItem = !arrayContainsItem(stateItems, item);\r\n    return {\r\n        createdItems: isNewlyCreatedItem ? addItemToArray(createdItems, item) : createdItems,\r\n        selections: addItemToArray(selections, item),\r\n        // Add a created item to `stateItems` so that the item can be deselected.\r\n        stateItems: isNewlyCreatedItem ? addItemToArray(stateItems, item) : stateItems,\r\n    };\r\n  }\r\n\r\n  const maybeDeleteCreatedItemFromArrays = (stateItems, createdItems, item) => {\r\n    const wasItemCreatedByUser = arrayContainsItem(createdItems, item);\r\n    const nextCreatedItems = wasItemCreatedByUser ? deleteItemFromArray(createdItems, item) : createdItems;\r\n    const nextStateItems = wasItemCreatedByUser ? deleteItemFromArray(stateItems, item) : stateItems;\r\n    // Delete the item if the user manually created it.\r\n    return { nextCreatedItems, nextStateItems };\r\n  }\r\n\r\n  const isItemSelected = itemToFind => {\r\n    return selections.some((item) => item.title === itemToFind.title);\r\n  }\r\n\r\n  const handleItemSelect = item => {\r\n    if (!isItemSelected(item)) {\r\n        selectItem(item);\r\n    } else {\r\n        deselectItem(item);\r\n    }\r\n  };\r\n\r\n  const arrayContainsItem = (array, itemToFind) => {\r\n    return array.some((item) => item.title === itemToFind.title);\r\n  }\r\n\r\n  const addItemToArray = (array, itemToAdd) => {\r\n    return [...array, itemToAdd];\r\n  }\r\n\r\n  const deleteItemFromArray = (array, itemToDelete) => {\r\n    return array.filter(item => item !== itemToDelete);\r\n  }\r\n\r\n  const handleItemsPaste = (items) => {\r\n    // On paste, don't bother with deselecting already selected values, just\r\n    // add the new ones.\r\n    selectItems([items]);\r\n  };\r\n\r\n  const handleClear = () => {\r\n    setStateItems(items);\r\n    setSelections([]);\r\n  }\r\n\r\n  const clearButtonMargin = () => type === \"dense\" ? \"0.4rem 0.2rem 0.4rem 0.4rem\" : \"0.7rem 0.3rem 0.7rem 0.7rem\";\r\n\r\n  const clearButton =\r\n    selections.length > 0\r\n      ? (\r\n        <Button\r\n          type=\"default\"\r\n          dense={type === \"dense\"}\r\n          color={color}\r\n          view=\"flat\"\r\n          style={{ margin: clearButtonMargin() }}\r\n          icon={\r\n            <Icon\r\n              icon=\"cross\"\r\n              iconSize={ type === \"dense\" ? 16 : 20}\r\n            />\r\n          }\r\n          onClick={handleClear}\r\n        />\r\n      ) : undefined;\r\n\r\n  const renderTag = item => item.title;\r\n\r\n  const createNewItem = title => {\r\n    const newItem = {\r\n      id: stateItems.length + 1,\r\n      title: newItemMap.title ? newItemMap.title(title) : title,\r\n      label: newItemMap.label\r\n    };\r\n    selectItems([newItem]);\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Consumer>\r\n      {({ isDark }) => (\r\n        <MultiSelectSource\r\n          filterable={true}\r\n          matchTargetWidth={matchTargetWidth}\r\n          itemPredicate={filterItem}\r\n          itemRenderer={renderItem}\r\n          itemListRenderer={renderMenuList}\r\n          tagRenderer={renderTag}\r\n          items={stateItems}\r\n          selectedItems={selections}\r\n          fill={false}\r\n          onItemSelect={handleItemSelect}\r\n          onItemsPaste={handleItemsPaste}\r\n          tagInputProps={{\r\n            fill: true,\r\n            placeholder: placeholder,\r\n            onRemove: handleTagRemove,\r\n            rightElement: clearButton,\r\n            inputRef: el => inputRef = el,\r\n            inputProps: {\r\n              value: currentQuery,\r\n              onChange: e => setCurrentQuery(e.target.value)\r\n            },\r\n            className: cx(\r\n              Type[type],\r\n              View[view],\r\n              Color[color]\r\n            )\r\n          }}\r\n          popoverProps={{\r\n            minimal: true,\r\n            fill: fill,\r\n            popoverClassName: cx(\r\n              View[\"select-popover\"],\r\n              MenuView[view],\r\n              MenuType[type],\r\n              Color[color]\r\n            )\r\n          }}\r\n          {...restProps}\r\n        >\r\n        </MultiSelectSource>\r\n      )}\r\n    </ThemeContext.Consumer>\r\n  );\r\n}\r\n\r\nSelect.propTypes = {\r\n  /**\r\n   `The type of the component.\r\n   * Variants: `card` `action` `circle` `icon`\r\n   * Default value (if undefined): `default` `\r\n   */\r\n  type: PropTypes.oneOf([\"default\", \"card\", \"action\", \"circle\", \"icon\"]),\r\n  /**\r\n   ` The view of the component.\r\n   * Variants: `flat` `smooth` `outlined` `raised`\r\n   * Default value (if undefined): `filled` `\r\n   */\r\n  view: PropTypes.oneOf([\"filled\", \"flat\", \"smooth\", \"outlined\", \"raised\"]),\r\n  /**\r\n  ` The color of the component.\r\n   * Variants: `primary` `warning` `danger` `success` `primaryAlt` `warningAlt` `dangerAlt` `successAlt`\r\n   * Default value (if undefined): `default` `\r\n   */\r\n  color: PropTypes.oneOf([\r\n    \"default\",\r\n    \"primary\",\r\n    \"warning\",\r\n    \"danger\",\r\n    \"success\",\r\n    \"primary_alt\",\r\n    \"warning_alt\",\r\n    \"danger_alt\",\r\n    \"success_alt\"\r\n  ]),\r\n  /**\r\n   * Item select event listener.\r\n   */\r\n  onItemSelect: PropTypes.func,\r\n  /**\r\n   * Whether this component should expand to fill its container.\r\n   */\r\n  fill: PropTypes.bool,\r\n  /**\r\n   * Name of a Blueprint UI icon (or an icon element) to render before the text.\r\n   */\r\n  icon: PropTypes.any,\r\n  /**\r\n   * If set to `true`, the button will display a centered loading spinner instead of its contents.\r\n   * The width of the button is not affected by the value of this prop.\r\n   */\r\n  loading: PropTypes.bool,\r\n  /**\r\n   * If `true`, the button will be disabled.\r\n   */\r\n  disabled: PropTypes.bool,\r\n  /**\r\n   * Whether target button text should be centered\r\n   */\r\n  centerAlign: PropTypes.bool,\r\n  /**\r\n   * If provided, allows new items to be created using the current query string.\r\n   */\r\n  allowCreate: PropTypes.bool,\r\n    /**\r\n   * If provided, allows new items to be created using the current query string.\r\n   */\r\n  // newItemMap: React.PropTypes.shape({\r\n  //   title: React.PropTypes.any,\r\n  //   label: React.PropTypes.any \r\n  // })\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}