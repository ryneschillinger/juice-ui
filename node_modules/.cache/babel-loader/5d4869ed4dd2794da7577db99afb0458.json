{"ast":null,"code":"import _slicedToArray from \"/Users/ryneschillinger1/dev_projects/ui-kitchen/ui-kitchen-ingredients/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState, useEffect } from \"react\";\nexport const useWindowWidth = () => {\n  const _useState = useState(window.innerWidth),\n        _useState2 = _slicedToArray(_useState, 2),\n        width = _useState2[0],\n        setWidth = _useState2[1];\n\n  useEffect(() => {\n    const handleResize = () => setWidth(window.innerWidth);\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  });\n  return width;\n};\nexport const useDevice = () => {\n  let width = useWindowWidth();\n  let device = setDevice(width);\n\n  function setDevice(width) {\n    switch (true) {\n      case width < 640:\n        return \"mobile\";\n\n      case width <= 1024:\n        return \"tablet\";\n\n      case width > 1024:\n        return \"desktop\";\n\n      case width > 1440:\n        return \"widescreen\";\n\n      default:\n        return \"desktop\";\n    }\n  }\n\n  return device;\n};\nexport const useDocumentTitle = title => {\n  useEffect(() => {\n    document.title = title;\n  });\n};","map":{"version":3,"sources":["/Users/ryneschillinger1/dev_projects/ui-kitchen/ui-kitchen-ingredients/src/@setproduct-ui/core/hooks/customHooks.jsx"],"names":["useState","useEffect","useWindowWidth","window","innerWidth","width","setWidth","handleResize","addEventListener","removeEventListener","useDevice","device","setDevice","useDocumentTitle","title","document"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAO,MAAMC,cAAc,GAAG,MAAM;AAAA,oBACRF,QAAQ,CAACG,MAAM,CAACC,UAAR,CADA;AAAA;AAAA,QAC3BC,KAD2B;AAAA,QACpBC,QADoB;;AAGlCL,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMM,YAAY,GAAG,MAAMD,QAAQ,CAACH,MAAM,CAACC,UAAR,CAAnC;;AACAD,IAAAA,MAAM,CAACK,gBAAP,CAAwB,QAAxB,EAAkCD,YAAlC;AACA,WAAO,MAAM;AACXJ,MAAAA,MAAM,CAACM,mBAAP,CAA2B,QAA3B,EAAqCF,YAArC;AACD,KAFD;AAGD,GANQ,CAAT;AAQA,SAAOF,KAAP;AACD,CAZM;AAcP,OAAO,MAAMK,SAAS,GAAG,MAAM;AAC7B,MAAIL,KAAK,GAAGH,cAAc,EAA1B;AACA,MAAIS,MAAM,GAAGC,SAAS,CAACP,KAAD,CAAtB;;AAEA,WAASO,SAAT,CAAmBP,KAAnB,EAA0B;AACxB,YAAQ,IAAR;AACE,WAAKA,KAAK,GAAG,GAAb;AACE,eAAO,QAAP;;AAEF,WAAKA,KAAK,IAAI,IAAd;AACE,eAAO,QAAP;;AAEF,WAAKA,KAAK,GAAG,IAAb;AACE,eAAO,SAAP;;AAEF,WAAKA,KAAK,GAAG,IAAb;AACE,eAAO,YAAP;;AAEF;AACE,eAAO,SAAP;AAdJ;AAgBD;;AACD,SAAOM,MAAP;AACD,CAvBM;AAyBP,OAAO,MAAME,gBAAgB,GAAGC,KAAK,IAAI;AACvCb,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,QAAQ,CAACD,KAAT,GAAiBA,KAAjB;AACD,GAFQ,CAAT;AAGD,CAJM","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nexport const useWindowWidth = () => {\r\n  const [width, setWidth] = useState(window.innerWidth);\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => setWidth(window.innerWidth);\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  });\r\n\r\n  return width;\r\n};\r\n\r\nexport const useDevice = () => {\r\n  let width = useWindowWidth();\r\n  let device = setDevice(width);\r\n\r\n  function setDevice(width) {\r\n    switch (true) {\r\n      case width < 640:\r\n        return \"mobile\";\r\n\r\n      case width <= 1024:\r\n        return \"tablet\";\r\n\r\n      case width > 1024:\r\n        return \"desktop\";\r\n\r\n      case width > 1440:\r\n        return \"widescreen\";\r\n\r\n      default:\r\n        return \"desktop\";\r\n    }\r\n  }\r\n  return device;\r\n};\r\n\r\nexport const useDocumentTitle = title => {\r\n  useEffect(() => {\r\n    document.title = title;\r\n  });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}