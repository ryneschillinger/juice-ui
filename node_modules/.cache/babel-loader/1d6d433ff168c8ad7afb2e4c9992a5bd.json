{"ast":null,"code":"import _objectWithoutProperties from \"/Users/ryneschillinger1/dev_projects/ui-kitchen/ui-kitchen-ingredients/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/ryneschillinger1/dev_projects/ui-kitchen/ui-kitchen-ingredients/src/@setproduct-ui/core/Callout/Callout.jsx\";\nimport React from \"react\";\nimport cx from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { Callout as CalloutSource } from \"@blueprintjs/core\";\nimport { Icon } from \"@blueprintjs/core\";\nimport Type from \"./_type.module.css\";\nimport View from \"./_view.module.css\";\nimport Color from \"../../styles/color.module.css\";\nimport { ThemeContext } from \"../ThemeContext\";\n/** \r\n  __Component 'Callout'__\r\n**/\n\nexport default function Callout(props) {\n  const _props$type = props.type,\n        type = _props$type === void 0 ? \"def\" : _props$type,\n        _props$view = props.view,\n        view = _props$view === void 0 ? \"filled\" : _props$view,\n        _props$color = props.color,\n        color = _props$color === void 0 ? \"default\" : _props$color,\n        children = props.children,\n        className = props.className,\n        icon = props.icon,\n        _props$dense = props.dense,\n        dense = _props$dense === void 0 ? false : _props$dense,\n        restProps = _objectWithoutProperties(props, [\"type\", \"view\", \"color\", \"children\", \"className\", \"icon\", \"dense\"]);\n\n  return React.createElement(ThemeContext.Consumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, ({\n    dark\n  }) => React.createElement(CalloutSource, Object.assign({}, restProps, {\n    className: cx(dense ? Type[\"dense\"] : Type[type], dark ? View[view + \"-dark\"] : View[view], Color[color], className),\n    icon: icon && React.createElement(Icon, {\n      icon: icon,\n      iconSize: dense ? 16 : 24,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), children));\n}\nCallout.propTypes = {\n  /**\r\n   ` The view of the component.\r\n   * Variants: `flat` `smooth` `outlined` `raised`\r\n   * Default value (if undefined): `filled` `\r\n   */\n  view: PropTypes.oneOf([\"filled\", \"flat\", \"smooth\", \"outlined\", \"raised\"]),\n\n  /**\r\n  ` The color of the component.\r\n   * Variants: `primary` `warning` `danger` `success` `primaryAlt` `warningAlt` `dangerAlt` `successAlt`\r\n   * Default value (if undefined): `default` `\r\n   */\n  color: PropTypes.oneOf([\"default\", \"primary\", \"warning\", \"danger\", \"success\", \"primary_alt\", \"warning_alt\", \"danger_alt\", \"success_alt\"]),\n\n  /**\r\n   * String content of optional title element.\r\n   */\n  title: PropTypes.string,\n\n  /**\r\n   * Name of a Blueprint UI icon (or an icon element) to render on the left side.\r\n   */\n  icon: PropTypes.any,\n  dense: PropTypes.bool,\n  children: PropTypes.any.isRequired\n};","map":{"version":3,"sources":["/Users/ryneschillinger1/dev_projects/ui-kitchen/ui-kitchen-ingredients/src/@setproduct-ui/core/Callout/Callout.jsx"],"names":["React","cx","PropTypes","Callout","CalloutSource","Icon","Type","View","Color","ThemeContext","props","type","view","color","children","className","icon","dense","restProps","dark","propTypes","oneOf","title","string","any","bool","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,OAAO,IAAIC,aAApB,QAAyC,mBAAzC;AACA,SAASC,IAAT,QAAqB,mBAArB;AAEA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,KAAP,MAAkB,+BAAlB;AAEA,SAASC,YAAT,QAA6B,iBAA7B;AAEA;;;;AAIA,eAAe,SAASN,OAAT,CAAiBO,KAAjB,EAAwB;AAAA,sBAUjCA,KAViC,CAEnCC,IAFmC;AAAA,QAEnCA,IAFmC,4BAE5B,KAF4B;AAAA,sBAUjCD,KAViC,CAGnCE,IAHmC;AAAA,QAGnCA,IAHmC,4BAG5B,QAH4B;AAAA,uBAUjCF,KAViC,CAInCG,KAJmC;AAAA,QAInCA,KAJmC,6BAI3B,SAJ2B;AAAA,QAKnCC,QALmC,GAUjCJ,KAViC,CAKnCI,QALmC;AAAA,QAMnCC,SANmC,GAUjCL,KAViC,CAMnCK,SANmC;AAAA,QAOnCC,IAPmC,GAUjCN,KAViC,CAOnCM,IAPmC;AAAA,uBAUjCN,KAViC,CAQnCO,KARmC;AAAA,QAQnCA,KARmC,6BAQ3B,KAR2B;AAAA,QAShCC,SATgC,4BAUjCR,KAViC;;AAYrC,SACE,oBAAC,YAAD,CAAc,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC;AAAES,IAAAA;AAAF,GAAD,KACC,oBAAC,aAAD,oBACMD,SADN;AAEE,IAAA,SAAS,EAAEjB,EAAE,CACXgB,KAAK,GAAGX,IAAI,CAAC,OAAD,CAAP,GAAmBA,IAAI,CAACK,IAAD,CADjB,EAEXQ,IAAI,GAAGZ,IAAI,CAACK,IAAI,GAAG,OAAR,CAAP,GAA0BL,IAAI,CAACK,IAAD,CAFvB,EAGXJ,KAAK,CAACK,KAAD,CAHM,EAIXE,SAJW,CAFf;AAQE,IAAA,IAAI,EAAEC,IAAI,IAAI,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAEA,IAAZ;AAAkB,MAAA,QAAQ,EAAEC,KAAK,GAAG,EAAH,GAAQ,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAUGH,QAVH,CAFJ,CADF;AAkBD;AAEDX,OAAO,CAACiB,SAAR,GAAoB;AAClB;;;;;AAKAR,EAAAA,IAAI,EAAEV,SAAS,CAACmB,KAAV,CAAgB,CAAC,QAAD,EAAW,MAAX,EAAmB,QAAnB,EAA6B,UAA7B,EAAyC,QAAzC,CAAhB,CANY;;AAOlB;;;;;AAKAR,EAAAA,KAAK,EAAEX,SAAS,CAACmB,KAAV,CAAgB,CACrB,SADqB,EAErB,SAFqB,EAGrB,SAHqB,EAIrB,QAJqB,EAKrB,SALqB,EAMrB,aANqB,EAOrB,aAPqB,EAQrB,YARqB,EASrB,aATqB,CAAhB,CAZW;;AAuBlB;;;AAGAC,EAAAA,KAAK,EAAEpB,SAAS,CAACqB,MA1BC;;AA2BlB;;;AAGAP,EAAAA,IAAI,EAAEd,SAAS,CAACsB,GA9BE;AA+BlBP,EAAAA,KAAK,EAAEf,SAAS,CAACuB,IA/BC;AAgClBX,EAAAA,QAAQ,EAAEZ,SAAS,CAACsB,GAAV,CAAcE;AAhCN,CAApB","sourcesContent":["import React from \"react\";\r\nimport cx from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { Callout as CalloutSource } from \"@blueprintjs/core\";\r\nimport { Icon } from \"@blueprintjs/core\";\r\n\r\nimport Type from \"./_type.module.css\";\r\nimport View from \"./_view.module.css\";\r\nimport Color from \"../../styles/color.module.css\";\r\n\r\nimport { ThemeContext } from \"../ThemeContext\";\r\n\r\n/** \r\n  __Component 'Callout'__\r\n**/\r\n\r\nexport default function Callout(props) {\r\n  const {\r\n    type = \"def\",\r\n    view = \"filled\",\r\n    color = \"default\",\r\n    children,\r\n    className,\r\n    icon,\r\n    dense = false,\r\n    ...restProps\r\n  } = props;\r\n\r\n  return (\r\n    <ThemeContext.Consumer>\r\n      {({ dark }) => (\r\n        <CalloutSource\r\n          {...restProps}\r\n          className={cx(\r\n            dense ? Type[\"dense\"] : Type[type],\r\n            dark ? View[view + \"-dark\"] : View[view],\r\n            Color[color],\r\n            className\r\n          )}\r\n          icon={icon && <Icon icon={icon} iconSize={dense ? 16 : 24} />}\r\n        >\r\n          {children}\r\n        </CalloutSource>\r\n      )}\r\n    </ThemeContext.Consumer>\r\n  );\r\n}\r\n\r\nCallout.propTypes = {\r\n  /**\r\n   ` The view of the component.\r\n   * Variants: `flat` `smooth` `outlined` `raised`\r\n   * Default value (if undefined): `filled` `\r\n   */\r\n  view: PropTypes.oneOf([\"filled\", \"flat\", \"smooth\", \"outlined\", \"raised\"]),\r\n  /**\r\n  ` The color of the component.\r\n   * Variants: `primary` `warning` `danger` `success` `primaryAlt` `warningAlt` `dangerAlt` `successAlt`\r\n   * Default value (if undefined): `default` `\r\n   */\r\n  color: PropTypes.oneOf([\r\n    \"default\",\r\n    \"primary\",\r\n    \"warning\",\r\n    \"danger\",\r\n    \"success\",\r\n    \"primary_alt\",\r\n    \"warning_alt\",\r\n    \"danger_alt\",\r\n    \"success_alt\"\r\n  ]),\r\n  /**\r\n   * String content of optional title element.\r\n   */\r\n  title: PropTypes.string,\r\n  /**\r\n   * Name of a Blueprint UI icon (or an icon element) to render on the left side.\r\n   */\r\n  icon: PropTypes.any,\r\n  dense: PropTypes.bool,\r\n  children: PropTypes.any.isRequired\r\n};\r\n"]},"metadata":{},"sourceType":"module"}