{"ast":null,"code":"var _jsxFileName = \"/Users/ryneschillinger1/dev_projects/ux-kitchen/ui-kitchen-ingredients/src/@setproduct-ui/demo/Breadcrumbs/PropsGroup.jsx\";\nimport React from \"react\";\nimport { Label } from \"@blueprintjs/core\";\nimport Checkbox from \"../../core/CheckBox\";\nimport Slider from \"../../core/Slider\";\nimport StyleGrid from \"../styles/style.module.css\";\n\nconst PropsGroup = props => {\n  const width = props.width,\n        setWidth = props.setWidth,\n        from = props.from,\n        setFrom = props.setFrom,\n        margin = props.margin;\n  return React.createElement(\"div\", {\n    className: StyleGrid[\"demo-props\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"Props:\"), React.createElement(\"div\", {\n    className: \"demo-props\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(Checkbox, {\n    type: \"dense\",\n    color: from === \"end\" ? \"primary\" : \"default\",\n    checked: from === \"end\",\n    label: \"From End\",\n    onChange: () => setFrom(from === \"start\" ? \"end\" : \"start\"),\n    fill: true,\n    margin: margin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }), React.createElement(Slider, {\n    view: \"filled\",\n    color: \"default\",\n    labelStepSize: 40,\n    min: 20,\n    max: 100,\n    onChange: value => setWidth(value),\n    stepSize: 20,\n    showTrackFill: true,\n    value: width,\n    labelRenderer: value => value + \"%\",\n    className: \"demo-slider\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  })));\n};\n\nexport default PropsGroup;","map":{"version":3,"sources":["/Users/ryneschillinger1/dev_projects/ux-kitchen/ui-kitchen-ingredients/src/@setproduct-ui/demo/Breadcrumbs/PropsGroup.jsx"],"names":["React","Label","Checkbox","Slider","StyleGrid","PropsGroup","props","width","setWidth","from","setFrom","margin","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,KAAT,QAAsB,mBAAtB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,SAAP,MAAsB,4BAAtB;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AAAA,QAClBC,KADkB,GACyBD,KADzB,CAClBC,KADkB;AAAA,QACXC,QADW,GACyBF,KADzB,CACXE,QADW;AAAA,QACDC,IADC,GACyBH,KADzB,CACDG,IADC;AAAA,QACKC,OADL,GACyBJ,KADzB,CACKI,OADL;AAAA,QACcC,MADd,GACyBL,KADzB,CACcK,MADd;AAE1B,SACE;AAAK,IAAA,SAAS,EAAEP,SAAS,CAAC,YAAD,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,KAAK,EAAEK,IAAI,KAAK,KAAT,GAAiB,SAAjB,GAA6B,SAFtC;AAGE,IAAA,OAAO,EAAEA,IAAI,KAAK,KAHpB;AAIE,IAAA,KAAK,EAAC,UAJR;AAKE,IAAA,QAAQ,EAAE,MAAMC,OAAO,CAACD,IAAI,KAAK,OAAT,GAAmB,KAAnB,GAA2B,OAA5B,CALzB;AAME,IAAA,IAAI,MANN;AAOE,IAAA,MAAM,EAAEE,MAPV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAUE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,KAAK,EAAC,SAFR;AAGE,IAAA,aAAa,EAAE,EAHjB;AAIE,IAAA,GAAG,EAAE,EAJP;AAKE,IAAA,GAAG,EAAE,GALP;AAME,IAAA,QAAQ,EAAEC,KAAK,IAAIJ,QAAQ,CAACI,KAAD,CAN7B;AAOE,IAAA,QAAQ,EAAE,EAPZ;AAQE,IAAA,aAAa,EAAE,IARjB;AASE,IAAA,KAAK,EAAEL,KATT;AAUE,IAAA,aAAa,EAAEK,KAAK,IAAIA,KAAK,GAAG,GAVlC;AAWE,IAAA,SAAS,EAAC,aAXZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CAFF,CADF;AA6BD,CA/BD;;AAiCA,eAAeP,UAAf","sourcesContent":["import React from \"react\";\r\n\r\nimport { Label } from \"@blueprintjs/core\";\r\nimport Checkbox from \"../../core/CheckBox\";\r\nimport Slider from \"../../core/Slider\";\r\n\r\nimport StyleGrid from \"../styles/style.module.css\";\r\n\r\nconst PropsGroup = props => {\r\n  const { width, setWidth, from, setFrom, margin } = props;\r\n  return (\r\n    <div className={StyleGrid[\"demo-props\"]}>\r\n      <Label>Props:</Label>\r\n      <div className=\"demo-props\">\r\n        <Checkbox\r\n          type=\"dense\"\r\n          color={from === \"end\" ? \"primary\" : \"default\"}\r\n          checked={from === \"end\"}\r\n          label=\"From End\"\r\n          onChange={() => setFrom(from === \"start\" ? \"end\" : \"start\")}\r\n          fill\r\n          margin={margin}\r\n        />\r\n        <Slider\r\n          view=\"filled\"\r\n          color=\"default\"\r\n          labelStepSize={40}\r\n          min={20}\r\n          max={100}\r\n          onChange={value => setWidth(value)}\r\n          stepSize={20}\r\n          showTrackFill={true}\r\n          value={width}\r\n          labelRenderer={value => value + \"%\"}\r\n          className=\"demo-slider\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PropsGroup;\r\n"]},"metadata":{},"sourceType":"module"}