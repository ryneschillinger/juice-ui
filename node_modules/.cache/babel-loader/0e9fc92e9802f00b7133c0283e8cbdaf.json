{"ast":null,"code":"var _jsxFileName = \"/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/src/@setproduct-ui/demo/SearchInput/DemoComponent.jsx\";\nimport React from \"react\";\nimport { Icon } from \"@blueprintjs/core\";\nimport Toaster from \"../../core/Toast/Toaster.jsx\";\n/**Import core component (variable)*/\n\nimport InputGroup from \"../../core/Inputs/SearchInput\";\nexport const DEMO = props => {\n  const type = props.type,\n        view = props.view,\n        color = props.color,\n        isFill = props.isFill;\n  var isRef;\n\n  function setRef(ref) {\n    isRef = ref;\n  }\n\n  const onSearch = val => {\n    const DemoToast = {\n      message: \"Sorry, we can't found anything about \\\"\".concat(val, \"\\\". Maybe better ask Google?\"),\n      icon: React.createElement(Icon, {\n        icon: \"error\",\n        iconSize: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      })\n    };\n    isRef.show(DemoToast);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(InputGroup, {\n    type: type,\n    view: view,\n    color: color,\n    placeholder: \"Placeholder\",\n    value: \"Enter search query\",\n    fill: isFill,\n    onSearch: onSearch\n    /**API */\n    //clearIcon=\"cross\" //variable\n    // onSearch={onSearch} //search function\n\n    /**Possible variables*/\n    //successIcon={\"tick\"}\n    //errorIcon={\"tick\"}\n    //rightElement={<Icon icon=\"cross\" />}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), React.createElement(Toaster, {\n    type: \"def\",\n    view: \"smooth\",\n    color: \"danger\",\n    usePortal: false,\n    position: \"top\",\n    setRef: setRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }));\n};","map":{"version":3,"sources":["/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/src/@setproduct-ui/demo/SearchInput/DemoComponent.jsx"],"names":["React","Icon","Toaster","InputGroup","DEMO","props","type","view","color","isFill","isRef","setRef","ref","onSearch","val","DemoToast","message","icon","show"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AAEA;;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AAEA,OAAO,MAAMC,IAAI,GAAGC,KAAK,IAAI;AAAA,QACnBC,IADmB,GACWD,KADX,CACnBC,IADmB;AAAA,QACbC,IADa,GACWF,KADX,CACbE,IADa;AAAA,QACPC,KADO,GACWH,KADX,CACPG,KADO;AAAA,QACAC,MADA,GACWJ,KADX,CACAI,MADA;AAG3B,MAAIC,KAAJ;;AACA,WAASC,MAAT,CAAgBC,GAAhB,EAAqB;AACnBF,IAAAA,KAAK,GAAGE,GAAR;AACD;;AAED,QAAMC,QAAQ,GAAGC,GAAG,IAAI;AACtB,UAAMC,SAAS,GAAG;AAChBC,MAAAA,OAAO,mDAA2CF,GAA3C,iCADS;AAEhBG,MAAAA,IAAI,EAAE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,OAAX;AAAmB,QAAA,QAAQ,EAAE,EAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFU,KAAlB;AAIAP,IAAAA,KAAK,CAACQ,IAAN,CAAWH,SAAX;AACD,GAND;;AAQA,SACE,0CACE,oBAAC,UAAD;AACE,IAAA,IAAI,EAAET,IADR;AAEE,IAAA,IAAI,EAAEC,IAFR;AAGE,IAAA,KAAK,EAAEC,KAHT;AAIE,IAAA,WAAW,EAAC,aAJd;AAKE,IAAA,KAAK,EAAC,oBALR;AAME,IAAA,IAAI,EAAEC,MANR;AAOE,IAAA,QAAQ,EAAEI;AACV;AACA;AACA;;AACA;AACA;AACA;AACA;AAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAiBE,oBAAC,OAAD;AACE,IAAA,IAAI,EAAC,KADP;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,KAAK,EAAC,QAHR;AAIE,IAAA,SAAS,EAAE,KAJb;AAKE,IAAA,QAAQ,EAAC,KALX;AAME,IAAA,MAAM,EAAEF,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBF,CADF;AA4BD,CA5CM","sourcesContent":["import React from \"react\";\r\nimport { Icon } from \"@blueprintjs/core\";\r\nimport Toaster from \"../../core/Toast/Toaster.jsx\";\r\n\r\n/**Import core component (variable)*/\r\nimport InputGroup from \"../../core/Inputs/SearchInput\";\r\n\r\nexport const DEMO = props => {\r\n  const { type, view, color, isFill } = props;\r\n\r\n  var isRef;\r\n  function setRef(ref) {\r\n    isRef = ref;\r\n  }\r\n\r\n  const onSearch = val => {\r\n    const DemoToast = {\r\n      message: `Sorry, we can't found anything about \"${val}\". Maybe better ask Google?`,\r\n      icon: <Icon icon=\"error\" iconSize={24} />\r\n    };\r\n    isRef.show(DemoToast);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <InputGroup\r\n        type={type}\r\n        view={view}\r\n        color={color}\r\n        placeholder=\"Placeholder\"\r\n        value=\"Enter search query\"\r\n        fill={isFill}\r\n        onSearch={onSearch}\r\n        /**API */\r\n        //clearIcon=\"cross\" //variable\r\n        // onSearch={onSearch} //search function\r\n        /**Possible variables*/\r\n        //successIcon={\"tick\"}\r\n        //errorIcon={\"tick\"}\r\n        //rightElement={<Icon icon=\"cross\" />}\r\n      />\r\n      <Toaster\r\n        type=\"def\"\r\n        view=\"smooth\"\r\n        color=\"danger\"\r\n        usePortal={false}\r\n        position=\"top\"\r\n        setRef={setRef}\r\n      />\r\n    </>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}