{"ast":null,"code":"import _defineProperty from \"/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/src/@setproduct-ui/core/Divider/Divider.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport cx from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport Type from \"./_type.module.css\";\nimport View from \"./_view.module.css\";\nimport Color from \"../../styles/color.module.css\";\nimport { ThemeContext } from \"../ThemeContext\";\n/** \r\n  __Component 'Divider'__\r\n**/\n\nexport default function Divider({\n  color = \"default\",\n  size = 2,\n  colorStep = 20,\n  className,\n  vertical = false,\n  style\n}) {\n  return React.createElement(ThemeContext.Consumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, ({\n    dark\n  }) => React.createElement(\"div\", {\n    className: cx(Type[\"default\"], vertical && Type[\"vertical\"], dark ? View[\"color\" + colorStep + \"-dark\"] : View[\"color\" + colorStep], Color[color], className && className),\n    style: !vertical ? _objectSpread({\n      height: size + \"px\"\n    }, style) : _objectSpread({\n      width: size + \"px\"\n    }, style),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }));\n}\nDivider.propTypes = {\n  /**\r\n    ` The color of the component.\r\n     * Variants: `primary` `warning` `danger` `success` `primaryAlt` `warningAlt` `dangerAlt` `successAlt`\r\n     * Default value (if undefined): `default` `\r\n     */\n  color: PropTypes.oneOf([\"default\", \"primary\", \"warning\", \"danger\", \"success\", \"primary_alt\", \"warning_alt\", \"danger_alt\", \"success_alt\"]),\n\n  /**\r\n   ` The step of the component color from \"0\" to \"100\".\r\n   * Default value (if undefined): `100` `\r\n   */\n  colorStep: PropTypes.oneOf([0, 5, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100]),\n\n  /**\r\n   * Height of divider in px.\r\n   */\n  size: PropTypes.number,\n\n  /**\r\n   * Inline CSS style\r\n   */\n  style: PropTypes.object\n};","map":{"version":3,"sources":["/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/src/@setproduct-ui/core/Divider/Divider.jsx"],"names":["React","cx","PropTypes","Type","View","Color","ThemeContext","Divider","color","size","colorStep","className","vertical","style","dark","height","width","propTypes","oneOf","number","object"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,KAAP,MAAkB,+BAAlB;AAEA,SAASC,YAAT,QAA6B,iBAA7B;AAEA;;;;AAIA,eAAe,SAASC,OAAT,CAAiB;AAC9BC,EAAAA,KAAK,GAAG,SADsB;AAE9BC,EAAAA,IAAI,GAAG,CAFuB;AAG9BC,EAAAA,SAAS,GAAG,EAHkB;AAI9BC,EAAAA,SAJ8B;AAK9BC,EAAAA,QAAQ,GAAG,KALmB;AAM9BC,EAAAA;AAN8B,CAAjB,EAOZ;AACD,SACE,oBAAC,YAAD,CAAc,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KACC;AACE,IAAA,SAAS,EAAEb,EAAE,CACXE,IAAI,CAAC,SAAD,CADO,EAEXS,QAAQ,IAAIT,IAAI,CAAC,UAAD,CAFL,EAGXW,IAAI,GACAV,IAAI,CAAC,UAAUM,SAAV,GAAsB,OAAvB,CADJ,GAEAN,IAAI,CAAC,UAAUM,SAAX,CALG,EAMXL,KAAK,CAACG,KAAD,CANM,EAOXG,SAAS,IAAIA,SAPF,CADf;AAUE,IAAA,KAAK,EACH,CAACC,QAAD;AACMG,MAAAA,MAAM,EAAEN,IAAI,GAAG;AADrB,OAC8BI,KAD9B;AAEMG,MAAAA,KAAK,EAAEP,IAAI,GAAG;AAFpB,OAE6BI,KAF7B,CAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADF;AAsBD;AAEDN,OAAO,CAACU,SAAR,GAAoB;AAClB;;;;;AAKAT,EAAAA,KAAK,EAAEN,SAAS,CAACgB,KAAV,CAAgB,CACrB,SADqB,EAErB,SAFqB,EAGrB,SAHqB,EAIrB,QAJqB,EAKrB,SALqB,EAMrB,aANqB,EAOrB,aAPqB,EAQrB,YARqB,EASrB,aATqB,CAAhB,CANW;;AAiBlB;;;;AAIAR,EAAAA,SAAS,EAAER,SAAS,CAACgB,KAAV,CAAgB,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,EAAW,EAAX,EAAe,EAAf,EAAmB,EAAnB,EAAuB,EAAvB,EAA2B,EAA3B,EAA+B,EAA/B,EAAmC,EAAnC,EAAuC,EAAvC,EAA2C,GAA3C,CAAhB,CArBO;;AAsBlB;;;AAGAT,EAAAA,IAAI,EAAEP,SAAS,CAACiB,MAzBE;;AA0BlB;;;AAGAN,EAAAA,KAAK,EAAEX,SAAS,CAACkB;AA7BC,CAApB","sourcesContent":["import React from \"react\";\r\nimport cx from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Type from \"./_type.module.css\";\r\nimport View from \"./_view.module.css\";\r\nimport Color from \"../../styles/color.module.css\";\r\n\r\nimport { ThemeContext } from \"../ThemeContext\";\r\n\r\n/** \r\n  __Component 'Divider'__\r\n**/\r\n\r\nexport default function Divider({\r\n  color = \"default\",\r\n  size = 2,\r\n  colorStep = 20,\r\n  className,\r\n  vertical = false,\r\n  style\r\n}) {\r\n  return (\r\n    <ThemeContext.Consumer>\r\n      {({ dark }) => (\r\n        <div\r\n          className={cx(\r\n            Type[\"default\"],\r\n            vertical && Type[\"vertical\"],\r\n            dark\r\n              ? View[\"color\" + colorStep + \"-dark\"]\r\n              : View[\"color\" + colorStep],\r\n            Color[color],\r\n            className && className\r\n          )}\r\n          style={\r\n            !vertical\r\n              ? { height: size + \"px\", ...style }\r\n              : { width: size + \"px\", ...style }\r\n          }\r\n        />\r\n      )}\r\n    </ThemeContext.Consumer>\r\n  );\r\n}\r\n\r\nDivider.propTypes = {\r\n  /**\r\n    ` The color of the component.\r\n     * Variants: `primary` `warning` `danger` `success` `primaryAlt` `warningAlt` `dangerAlt` `successAlt`\r\n     * Default value (if undefined): `default` `\r\n     */\r\n  color: PropTypes.oneOf([\r\n    \"default\",\r\n    \"primary\",\r\n    \"warning\",\r\n    \"danger\",\r\n    \"success\",\r\n    \"primary_alt\",\r\n    \"warning_alt\",\r\n    \"danger_alt\",\r\n    \"success_alt\"\r\n  ]),\r\n  /**\r\n   ` The step of the component color from \"0\" to \"100\".\r\n   * Default value (if undefined): `100` `\r\n   */\r\n  colorStep: PropTypes.oneOf([0, 5, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100]),\r\n  /**\r\n   * Height of divider in px.\r\n   */\r\n  size: PropTypes.number,\r\n  /**\r\n   * Inline CSS style\r\n   */\r\n  style: PropTypes.object\r\n};\r\n"]},"metadata":{},"sourceType":"module"}