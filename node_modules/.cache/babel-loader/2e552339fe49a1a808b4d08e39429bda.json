{"ast":null,"code":"import _defineProperty from \"/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/src/@candy-ui/core/Hamburger/Hamburger.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Slider from \"./types/Slider\";\nimport Squeeze from \"./types/Squeeze\";\nimport Elastic from \"./types/Elastic\";\nimport Emphatic from \"./types/Emphatic\";\nimport Spin from \"./types/Spin\";\n\nconst Hamburger = props => {\n  const variant = props.variant,\n        _props$size = props.size,\n        size = _props$size === void 0 ? 48 : _props$size,\n        rest = _objectWithoutProperties(props, [\"variant\", \"size\"]);\n\n  const barHeight = Math.round(size / 12);\n  const offset = barHeight * 1.5; //top and bottom bars offset\n\n  const newProps = _objectSpread({\n    size: size,\n    offset: offset,\n    barHeight: barHeight\n  }, rest);\n\n  const Burger = variant === \"squeeze\" ? React.createElement(Squeeze, Object.assign({}, newProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  })) : variant === \"elastic\" ? React.createElement(Elastic, Object.assign({}, newProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  })) : variant === \"emphatic\" ? React.createElement(Emphatic, Object.assign({}, newProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  })) : variant === \"spin\" ? React.createElement(Spin, Object.assign({}, newProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  })) : React.createElement(Slider, Object.assign({}, newProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }));\n  return Burger;\n};\n\nHamburger.propTypes = {\n  /**\r\n   `The type of the component.\r\n   * Variants:  `circle` \r\n   * Default value (if undefined): `default` `\r\n   */\n  type: PropTypes.oneOf([\"default\", \"circle\"]),\n\n  /**\r\n   ` The view of the component.\r\n   * Variants: `flat` `smooth` `outlined` \r\n   * Default value (if undefined): `flat` `\r\n   */\n  view: PropTypes.oneOf([\"filled\", \"flat\", \"smooth\", \"outlined\"]),\n\n  /**\r\n  ` The color of the component.\r\n   * Variants: `primary` `warning` `danger` `success` `primaryAlt` `warningAlt` `dangerAlt` `successAlt`\r\n   * Default value (if undefined): `default` `\r\n   */\n  color: PropTypes.oneOf([\"default\", \"primary\", \"warning\", \"danger\", \"success\", \"primary_alt\", \"warning_alt\", \"danger_alt\", \"success_alt\"]),\n\n  /**\r\n   * Open state\r\n   */\n  isOpen: PropTypes.bool,\n\n  /**\r\n   * Click event handler.\r\n   */\n  setOpen: PropTypes.func,\n\n  /**\r\n   * Size of the component in px.\r\n   */\n  size: PropTypes.number,\n  rounded: PropTypes.bool,\n\n  /**\r\n   * This prop set animation variant of the component. Possible states:\r\n   * squeeze | elastic | emphatic | spin | slider . Default state is `slider`.\r\n   */\n  variant: PropTypes.string,\n\n  /**\r\n   * If `true`, the button will be disabled.\r\n   */\n  disabled: PropTypes.bool,\n\n  /**\r\n   * Dense size\r\n   */\n  dense: PropTypes.bool\n};\nexport default Hamburger;","map":{"version":3,"sources":["/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/src/@candy-ui/core/Hamburger/Hamburger.jsx"],"names":["React","PropTypes","Slider","Squeeze","Elastic","Emphatic","Spin","Hamburger","props","variant","size","rest","barHeight","Math","round","offset","newProps","Burger","propTypes","type","oneOf","view","color","isOpen","bool","setOpen","func","number","rounded","string","disabled","dense"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,IAAP,MAAiB,cAAjB;;AAEA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AAAA,QACjBC,OADiB,GACeD,KADf,CACjBC,OADiB;AAAA,sBACeD,KADf,CACRE,IADQ;AAAA,QACRA,IADQ,4BACD,EADC;AAAA,QACMC,IADN,4BACeH,KADf;;AAGzB,QAAMI,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWJ,IAAI,GAAG,EAAlB,CAAlB;AACA,QAAMK,MAAM,GAAGH,SAAS,GAAG,GAA3B,CAJyB,CAIO;;AAEhC,QAAMI,QAAQ;AACZN,IAAAA,IAAI,EAAEA,IADM;AAEZK,IAAAA,MAAM,EAAEA,MAFI;AAGZH,IAAAA,SAAS,EAAEA;AAHC,KAITD,IAJS,CAAd;;AAOA,QAAMM,MAAM,GACVR,OAAO,KAAK,SAAZ,GACE,oBAAC,OAAD,oBAAaO,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,GAEIP,OAAO,KAAK,SAAZ,GACF,oBAAC,OAAD,oBAAaO,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADE,GAEAP,OAAO,KAAK,UAAZ,GACF,oBAAC,QAAD,oBAAcO,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADE,GAEAP,OAAO,KAAK,MAAZ,GACF,oBAAC,IAAD,oBAAUO,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADE,GAGF,oBAAC,MAAD,oBAAYA,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAVJ;AAaA,SAAOC,MAAP;AACD,CA3BD;;AA6BAV,SAAS,CAACW,SAAV,GAAsB;AACpB;;;;;AAKAC,EAAAA,IAAI,EAAElB,SAAS,CAACmB,KAAV,CAAgB,CAAC,SAAD,EAAY,QAAZ,CAAhB,CANc;;AAOpB;;;;;AAKAC,EAAAA,IAAI,EAAEpB,SAAS,CAACmB,KAAV,CAAgB,CAAC,QAAD,EAAW,MAAX,EAAmB,QAAnB,EAA6B,UAA7B,CAAhB,CAZc;;AAapB;;;;;AAKAE,EAAAA,KAAK,EAAErB,SAAS,CAACmB,KAAV,CAAgB,CACrB,SADqB,EAErB,SAFqB,EAGrB,SAHqB,EAIrB,QAJqB,EAKrB,SALqB,EAMrB,aANqB,EAOrB,aAPqB,EAQrB,YARqB,EASrB,aATqB,CAAhB,CAlBa;;AA6BpB;;;AAGAG,EAAAA,MAAM,EAAEtB,SAAS,CAACuB,IAhCE;;AAiCpB;;;AAGAC,EAAAA,OAAO,EAAExB,SAAS,CAACyB,IApCC;;AAqCpB;;;AAGAhB,EAAAA,IAAI,EAAET,SAAS,CAAC0B,MAxCI;AAyCpBC,EAAAA,OAAO,EAAE3B,SAAS,CAACuB,IAzCC;;AA0CpB;;;;AAIAf,EAAAA,OAAO,EAAER,SAAS,CAAC4B,MA9CC;;AA+CpB;;;AAGAC,EAAAA,QAAQ,EAAE7B,SAAS,CAACuB,IAlDA;;AAmDpB;;;AAGAO,EAAAA,KAAK,EAAE9B,SAAS,CAACuB;AAtDG,CAAtB;AAyDA,eAAejB,SAAf","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Slider from \"./types/Slider\";\r\nimport Squeeze from \"./types/Squeeze\";\r\nimport Elastic from \"./types/Elastic\";\r\nimport Emphatic from \"./types/Emphatic\";\r\nimport Spin from \"./types/Spin\";\r\n\r\nconst Hamburger = props => {\r\n  const { variant, size = 48, ...rest } = props;\r\n\r\n  const barHeight = Math.round(size / 12);\r\n  const offset = barHeight * 1.5; //top and bottom bars offset\r\n\r\n  const newProps = {\r\n    size: size,\r\n    offset: offset,\r\n    barHeight: barHeight,\r\n    ...rest\r\n  };\r\n\r\n  const Burger =\r\n    variant === \"squeeze\" ? (\r\n      <Squeeze {...newProps} />\r\n    ) : variant === \"elastic\" ? (\r\n      <Elastic {...newProps} />\r\n    ) : variant === \"emphatic\" ? (\r\n      <Emphatic {...newProps} />\r\n    ) : variant === \"spin\" ? (\r\n      <Spin {...newProps} />\r\n    ) : (\r\n      <Slider {...newProps} />\r\n    );\r\n\r\n  return Burger;\r\n};\r\n\r\nHamburger.propTypes = {\r\n  /**\r\n   `The type of the component.\r\n   * Variants:  `circle` \r\n   * Default value (if undefined): `default` `\r\n   */\r\n  type: PropTypes.oneOf([\"default\", \"circle\"]),\r\n  /**\r\n   ` The view of the component.\r\n   * Variants: `flat` `smooth` `outlined` \r\n   * Default value (if undefined): `flat` `\r\n   */\r\n  view: PropTypes.oneOf([\"filled\", \"flat\", \"smooth\", \"outlined\"]),\r\n  /**\r\n  ` The color of the component.\r\n   * Variants: `primary` `warning` `danger` `success` `primaryAlt` `warningAlt` `dangerAlt` `successAlt`\r\n   * Default value (if undefined): `default` `\r\n   */\r\n  color: PropTypes.oneOf([\r\n    \"default\",\r\n    \"primary\",\r\n    \"warning\",\r\n    \"danger\",\r\n    \"success\",\r\n    \"primary_alt\",\r\n    \"warning_alt\",\r\n    \"danger_alt\",\r\n    \"success_alt\"\r\n  ]),\r\n  /**\r\n   * Open state\r\n   */\r\n  isOpen: PropTypes.bool,\r\n  /**\r\n   * Click event handler.\r\n   */\r\n  setOpen: PropTypes.func,\r\n  /**\r\n   * Size of the component in px.\r\n   */\r\n  size: PropTypes.number,\r\n  rounded: PropTypes.bool,\r\n  /**\r\n   * This prop set animation variant of the component. Possible states:\r\n   * squeeze | elastic | emphatic | spin | slider . Default state is `slider`.\r\n   */\r\n  variant: PropTypes.string,\r\n  /**\r\n   * If `true`, the button will be disabled.\r\n   */\r\n  disabled: PropTypes.bool,\r\n  /**\r\n   * Dense size\r\n   */\r\n  dense: PropTypes.bool\r\n};\r\n\r\nexport default Hamburger;\r\n"]},"metadata":{},"sourceType":"module"}