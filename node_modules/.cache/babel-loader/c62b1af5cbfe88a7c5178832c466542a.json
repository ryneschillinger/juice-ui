{"ast":null,"code":"import _slicedToArray from \"/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/src/@setproduct-ui/demo/Breadcrumbs/ComponentTemplate.jsx\";\nimport React from \"react\";\n/* Import component props */\n\nimport PropsGroup from \"./PropsGroup.jsx\";\nimport SelectColorGroup from \"../SelectColorGroup.jsx\";\nimport DemoAppStyle from \"../styles/style.module.css\";\nimport Typography from \"../../core/Typography\";\nimport { SidebarContainer } from \"../components/SidebarContainer\";\nimport { CustomScrollbar } from \"../components/CustomScrollbar\";\n/**Import demo component body*/\n\nimport { DEMO } from \"./DemoComponent.jsx\";\n/**Import usage & API  of component*/\n\nimport { API } from \"./api.jsx\";\n/**SETTINGS OF THIS DEMO*/\n\n/*Set component data (variables)*/\n\nconst Props = {\n  name: \"Breadcrumbs\",\n  desc: \"Breadcrumbs identify the path to the current resource in an application.\",\n\n  /**default value*/\n  type: \"default\",\n  view: \"smooth\",\n  color: \"primary\"\n};\n/**Available variants of TYPES & VIEWS (variables)*/\n\n/**END OF SETTINGS*/\n\n/**Demo template*/\n\nconst Content = props => {\n  /*Set states of props*/\n  const _React$useState = React.useState(80),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        width = _React$useState2[0],\n        setWidth = _React$useState2[1];\n\n  const _React$useState3 = React.useState(\"start\"),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        from = _React$useState4[0],\n        setFrom = _React$useState4[1];\n\n  const _React$useState5 = React.useState(Props.color),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        color = _React$useState6[0],\n        setColor = _React$useState6[1];\n\n  React.useEffect(() => {\n    document.title = \"React Design System: component \".concat(Props.name);\n    document.getElementsByTagName(\"META\")[\"description\"].content = \"Demo \".concat(Props.name, \" component for React Setproduct Design System with possible props. \").concat(Props.desc);\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: DemoAppStyle[\"content-component\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    type: \"h3\",\n    className: \"demo-name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, Props.name), React.createElement(Typography, {\n    type: \"h6\",\n    colorStep: 60,\n    className: \"demo-desc\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, Props.desc), React.createElement(\"div\", {\n    className: \"demo-content-component\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(DEMO, {\n    color: color,\n    width: width,\n    from: from,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"BodyBig demo-api\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(API, {\n    name: Props.name,\n    width: width,\n    from: from,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }))), React.createElement(SidebarContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: DemoAppStyle[\"right_sidebar\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(CustomScrollbar, {\n    autoHide: true,\n    autoHideTimeout: 2000,\n    hideTracksWhenNotNeeded: true,\n    renderThumbHorizontal: () => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      });\n    },\n    renderTrackHorizontal: () => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(PropsGroup // shape={shape}\n  , {\n    width: width,\n    setWidth: setWidth,\n    from: from,\n    setFrom: setFrom,\n    margin: \"2px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }), React.createElement(SelectColorGroup, {\n    color: color,\n    setColor: setColor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  })))));\n};\n\nexport default Content;","map":{"version":3,"sources":["/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/src/@setproduct-ui/demo/Breadcrumbs/ComponentTemplate.jsx"],"names":["React","PropsGroup","SelectColorGroup","DemoAppStyle","Typography","SidebarContainer","CustomScrollbar","DEMO","API","Props","name","desc","type","view","color","Content","props","useState","width","setWidth","from","setFrom","setColor","useEffect","document","title","getElementsByTagName","content"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\n/* Import component props */\r\nimport PropsGroup from \"./PropsGroup.jsx\";\r\n\r\nimport SelectColorGroup from \"../SelectColorGroup.jsx\";\r\nimport DemoAppStyle from \"../styles/style.module.css\";\r\n\r\nimport Typography from \"../../core/Typography\";\r\nimport { SidebarContainer } from \"../components/SidebarContainer\";\r\nimport { CustomScrollbar } from \"../components/CustomScrollbar\";\r\n\r\n/**Import demo component body*/\r\nimport { DEMO } from \"./DemoComponent.jsx\";\r\n/**Import usage & API  of component*/\r\nimport { API } from \"./api.jsx\";\r\n\r\n/**SETTINGS OF THIS DEMO*/\r\n/*Set component data (variables)*/\r\nconst Props = {\r\n  name: \"Breadcrumbs\",\r\n  desc:\r\n    \"Breadcrumbs identify the path to the current resource in an application.\",\r\n  /**default value*/\r\n  type: \"default\",\r\n  view: \"smooth\",\r\n  color: \"primary\"\r\n};\r\n/**Available variants of TYPES & VIEWS (variables)*/\r\n\r\n/**END OF SETTINGS*/\r\n\r\n/**Demo template*/\r\nconst Content = props => {\r\n  /*Set states of props*/\r\n  const [width, setWidth] = React.useState(80);\r\n  const [from, setFrom] = React.useState(\"start\");\r\n  const [color, setColor] = React.useState(Props.color);\r\n\r\n  React.useEffect(() => {\r\n    document.title = `React Design System: component ${Props.name}`;\r\n    document.getElementsByTagName(\"META\")[\"description\"].content = `Demo ${\r\n      Props.name\r\n    } component for React Setproduct Design System with possible props. ${\r\n      Props.desc\r\n    }`;\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <div className={DemoAppStyle[\"content-component\"]}>\r\n        {/*COMPONENT*/}\r\n        {/*NAME*/}\r\n        <Typography type=\"h3\" className=\"demo-name\">\r\n          {Props.name}\r\n        </Typography>\r\n        {/*Description */}\r\n        <Typography type=\"h6\" colorStep={60} className=\"demo-desc\">\r\n          {Props.desc}\r\n        </Typography>\r\n        {/*Content*/}\r\n        <div className=\"demo-content-component\">\r\n          <DEMO color={color} width={width} from={from} />\r\n        </div>\r\n        <div className=\"BodyBig demo-api\">\r\n          <API name={Props.name} width={width} from={from} />\r\n        </div>\r\n      </div>\r\n      {/* Props*/}\r\n      <SidebarContainer>\r\n        <div className={DemoAppStyle[\"right_sidebar\"]}>\r\n          <CustomScrollbar\r\n            autoHide\r\n            autoHideTimeout={2000}\r\n            hideTracksWhenNotNeeded\r\n            renderThumbHorizontal={() => {\r\n              return <div />;\r\n            }}\r\n            renderTrackHorizontal={() => <div />}\r\n          >\r\n            {/**Set this Props component */}\r\n            <PropsGroup\r\n              // shape={shape}\r\n              width={width}\r\n              setWidth={setWidth}\r\n              from={from}\r\n              setFrom={setFrom}\r\n              margin=\"2px\"\r\n            />\r\n            <SelectColorGroup color={color} setColor={setColor} />\r\n          </CustomScrollbar>\r\n        </div>\r\n      </SidebarContainer>\r\n      {/***** */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Content;\r\n"]},"metadata":{},"sourceType":"module"}