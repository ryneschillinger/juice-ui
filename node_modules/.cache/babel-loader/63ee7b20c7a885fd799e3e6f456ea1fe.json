{"ast":null,"code":"var _jsxFileName = \"/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/src/@candy-ui/demo/docs/Introduction/demo.jsx\";\nimport React from \"react\"; //import cx from \"classnames\";\n\nimport Typo from \"../../../core/Typography\";\nimport styles from \"./style.module.css\";\nimport * as ROUTES from \"../../constants/Routes.jsx\";\nimport Img01 from \"./01_action_green_800.gif\";\nimport Img02 from \"./02_red_segment_800.gif\";\nimport Img03 from \"./03_raised_btn_800.gif\";\nimport Img04 from \"./04_menu_800.gif\";\n\nconst DemoStart = props => {\n  React.useEffect(() => {\n    document.title = \"React Design System 2.0 | React UI kit\";\n    document.getElementsByTagName(\"META\")[\"description\"].content = \"Ready to use React JS components for save your time.\";\n  });\n  return React.createElement(\"div\", {\n    className: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(Typo, {\n    type: \"h2\",\n    color: \"primary\",\n    colorStep: 80,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Sweet UI kit\"), React.createElement(Typo, {\n    type: \"h4\",\n    className: styles.h4_title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Introduction\"));\n};\n\nexport default DemoStart;","map":{"version":3,"sources":["/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/src/@candy-ui/demo/docs/Introduction/demo.jsx"],"names":["React","Typo","styles","ROUTES","Img01","Img02","Img03","Img04","DemoStart","props","useEffect","document","title","getElementsByTagName","content","container","h4_title"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,IAAP,MAAiB,0BAAjB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAO,KAAKC,MAAZ,MAAwB,4BAAxB;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;;AAEA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AACzBT,EAAAA,KAAK,CAACU,SAAN,CAAgB,MAAM;AACpBC,IAAAA,QAAQ,CAACC,KAAT;AACAD,IAAAA,QAAQ,CAACE,oBAAT,CAA8B,MAA9B,EACE,aADF,EAEEC,OAFF;AAGD,GALD;AAOA,SACE;AAAK,IAAA,SAAS,EAAEZ,MAAM,CAACa,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,IAAX;AAAgB,IAAA,KAAK,EAAC,SAAtB;AAAgC,IAAA,SAAS,EAAE,EAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAIE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,IAAX;AAAgB,IAAA,SAAS,EAAEb,MAAM,CAACc,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,CADF;AAoGD,CA5GD;;AA8GA,eAAeR,SAAf","sourcesContent":["import React from \"react\";\r\n//import cx from \"classnames\";\r\nimport Typo from \"../../../core/Typography\";\r\nimport styles from \"./style.module.css\";\r\nimport * as ROUTES from \"../../constants/Routes.jsx\";\r\nimport Img01 from \"./01_action_green_800.gif\";\r\nimport Img02 from \"./02_red_segment_800.gif\";\r\nimport Img03 from \"./03_raised_btn_800.gif\";\r\nimport Img04 from \"./04_menu_800.gif\";\r\n\r\nconst DemoStart = props => {\r\n  React.useEffect(() => {\r\n    document.title = `React Design System 2.0 | React UI kit`;\r\n    document.getElementsByTagName(\"META\")[\r\n      \"description\"\r\n    ].content = `Ready to use React JS components for save your time.`;\r\n  });\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Typo type=\"h2\" color=\"primary\" colorStep={80}>\r\n        Sweet UI kit\r\n      </Typo>\r\n      <Typo type=\"h4\" className={styles.h4_title}>\r\n        Introduction\r\n      </Typo>\r\n      {/* <Typo large className={styles.text}>\r\n        Candy UI Design System is the unlike React UI kit. Including\r\n        <a\r\n          href={ROUTES.FIGMA_DEMO_LINK}\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          className={styles.link}\r\n        >\r\n          Figma design sources\r\n        </a>\r\n        + React components based on enhanced and restyled BlueprintJS library\r\n        this system saves «a penny», because you skipping a pixel routine and\r\n        get ready to use components & templates (soon!) kit on hands to build\r\n        apps faster.\r\n      </Typo>\r\n      <Typo type=\"h6\" className={styles.h6_title}>\r\n        What’s the purpose\r\n      </Typo>\r\n      <Typo large className={styles.text}>\r\n        2-in-1 toolkit for teams, individual developers, or designers who code.\r\n        Designed and well-organized in Figma and served as the components\r\n        library powered by auto-layout. Styles and specs were translated\r\n        manually and styled in ReactJS. This product guarantees you the speeding\r\n        up your workflow, obtaining UI consistency and bringing more visual\r\n        aesthetics to your apps.\r\n      </Typo>\r\n      <Typo type=\"h6\" className={styles.h6_title}>\r\n        What’s the difference\r\n      </Typo>\r\n      <Typo large className={styles.text}>\r\n        Candy UI Design System provides <i>Flat, Filled, Smooth, Outlined</i>{\" \"}\r\n        or <i>Raised</i> instances for every component, UI widget or template.\r\n        Pick a Flat style for simple and data-fist UI or go with Raised if\r\n        you’re a fan of Material Design. We tried to cover all the style\r\n        variations ever possible in the user interface design and make it easy\r\n        to swap both in React and Figma.\r\n      </Typo>\r\n      <div className={styles.promo_group}>\r\n        <div className={styles.promo_item}>\r\n          <div\r\n            className={styles.item_img_container}\r\n            style={{ borderColor: \"var(--green30)\" }}\r\n          >\r\n            <img className={styles.item_img} src={Img01} alt=\"Action button\" />\r\n          </div>\r\n          <Typo color=\"success\" colorStep={80} className={styles.sub_title}>\r\n            Set a UI theme by swapping props and Figma instances. For the rest\r\n            of components there are 4+ styles available.\r\n          </Typo>\r\n        </div>\r\n        <div className={styles.promo_item}>\r\n          {\" \"}\r\n          <div\r\n            className={styles.item_img_container}\r\n            style={{ borderColor: \"var(--red30)\" }}\r\n          >\r\n            <img className={styles.item_img} src={Img02} alt=\"Segment\" />\r\n          </div>\r\n          <Typo color=\"danger\" colorStep={80} className={styles.sub_title}>\r\n            Build UXeful interfaces with a toolkit where all the details\r\n            considered. Hovers, clicks, timings & animation.\r\n          </Typo>\r\n        </div>\r\n        <div className={styles.promo_item}>\r\n          {\" \"}\r\n          <div\r\n            className={styles.item_img_container}\r\n            style={{ borderColor: \"var(--blue30)\" }}\r\n          >\r\n            <img className={styles.item_img} src={Img03} alt=\"Raised button\" />\r\n          </div>\r\n          <Typo color=\"primary\" colorStep={80} className={styles.sub_title}>\r\n            States are neatly maintained for any component to interact with. We\r\n            reimagined styles for the smooth and better user experience.\r\n          </Typo>\r\n        </div>\r\n        <div className={styles.promo_item}>\r\n          {\" \"}\r\n          <div\r\n            className={styles.item_img_container}\r\n            style={{ borderColor: \"var(--grey30)\" }}\r\n          >\r\n            <img className={styles.item_img} src={Img04} alt=\"Menu\" />\r\n          </div>\r\n          <Typo colorStep={80} className={styles.sub_title}>\r\n            Get inspired by interacting with the polished components. We aimed\r\n            to build huge patterns gallery and release it as templates.\r\n          </Typo>\r\n        </div>\r\n      </div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DemoStart;\r\n"]},"metadata":{},"sourceType":"module"}