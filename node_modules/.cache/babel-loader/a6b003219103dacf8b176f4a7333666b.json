{"ast":null,"code":"import _slicedToArray from \"/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/src/@candy-ui/demo/Spinner/ComponentTemplate.jsx\";\nimport React from \"react\";\n/* Import component props */\n\nimport SelectColorGroup from \"../SelectColorGroup.jsx\";\nimport DemoAppStyle from \"../styles/style.module.css\";\nimport Typography from \"../../core/Typography\";\nimport { SidebarContainer } from \"../components/SidebarContainer\";\nimport { CustomScrollbar } from \"../components/CustomScrollbar\";\n/**Import demo component body*/\n\nimport { DEMO } from \"./DemoComponent.jsx\";\n/**Import usage & API  of component*/\n\nimport { API } from \"./api.jsx\";\nimport PropsGroup from \"./PropsGroup.jsx\";\nimport SelectViewGroup from \"../SelectViewGroup.jsx\";\n/**SETTINGS OF THIS DEMO*/\n\n/*Set component data (variables)*/\n\nconst Props = {\n  name: \"Spinner\",\n  desc: \"Spinners indicate system progress in a circular fashion.\",\n\n  /**default value*/\n  view: \"smooth\",\n  color: \"primary\"\n};\nconst views = [[\"Smooth\", \"smooth\"], [\"Filled\", \"filled\"]];\n/**Demo template*/\n\nconst Content = props => {\n  /*Set states of props*/\n  const _React$useState = React.useState(Props.color),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        color = _React$useState2[0],\n        setColor = _React$useState2[1];\n\n  const _React$useState3 = React.useState(50),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        size = _React$useState4[0],\n        setSize = _React$useState4[1];\n\n  const _React$useState5 = React.useState(false),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        value = _React$useState6[0],\n        setValue = _React$useState6[1];\n\n  const _React$useState7 = React.useState(60),\n        _React$useState8 = _slicedToArray(_React$useState7, 2),\n        valueAmount = _React$useState8[0],\n        setValueAmount = _React$useState8[1];\n\n  const _React$useState9 = React.useState(Props.view),\n        _React$useState10 = _slicedToArray(_React$useState9, 2),\n        view = _React$useState10[0],\n        setView = _React$useState10[1];\n\n  React.useEffect(() => {\n    document.title = \"React Design System: component \".concat(Props.name);\n    document.getElementsByTagName(\"META\")[\"description\"].content = \"Demo \".concat(Props.name, \" component for React Setproduct Design System with possible props. \").concat(Props.desc);\n  });\n  return React.createElement(\"div\", {\n    className: DemoAppStyle[\"content-container\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: DemoAppStyle[\"content-component\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    type: \"h4\",\n    className: \"demo-name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, Props.name), React.createElement(Typography, {\n    type: \"h6\",\n    colorStep: 60,\n    className: \"demo-desc\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, Props.desc), React.createElement(\"div\", {\n    className: \"demo-content-component\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(DEMO, {\n    view: view,\n    color: color,\n    size: size,\n    value: value,\n    valueAmount: valueAmount,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"BodyBig demo-api\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(API, {\n    size: size,\n    view: view,\n    name: Props.name,\n    color: color,\n    value: value,\n    valueAmount: valueAmount,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }))), React.createElement(SidebarContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: DemoAppStyle[\"right_sidebar\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: DemoAppStyle[\"demo-props\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(PropsGroup // shape={shape}\n  , {\n    size: size,\n    setSize: setSize,\n    setValue: setValue,\n    value: value,\n    valueAmount: valueAmount,\n    setValueAmount: setValueAmount,\n    margin: \"2px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), React.createElement(SelectViewGroup, {\n    view: view,\n    setView: setView,\n    views: views,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }), React.createElement(SelectColorGroup, {\n    color: color,\n    setColor: setColor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  })))));\n};\n\nexport default Content;","map":{"version":3,"sources":["/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/src/@candy-ui/demo/Spinner/ComponentTemplate.jsx"],"names":["React","SelectColorGroup","DemoAppStyle","Typography","SidebarContainer","CustomScrollbar","DEMO","API","PropsGroup","SelectViewGroup","Props","name","desc","view","color","views","Content","props","useState","setColor","size","setSize","value","setValue","valueAmount","setValueAmount","setView","useEffect","document","title","getElementsByTagName","content"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA;;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AAEA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,SAASC,gBAAT,QAAiC,gCAAjC;AACA,SAASC,eAAT,QAAgC,+BAAhC;AAEA;;AACA,SAASC,IAAT,QAAqB,qBAArB;AACA;;AACA,SAASC,GAAT,QAAoB,WAApB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,eAAP,MAA4B,wBAA5B;AAEA;;AACA;;AACA,MAAMC,KAAK,GAAG;AACZC,EAAAA,IAAI,EAAE,SADM;AAEZC,EAAAA,IAAI,EAAE,0DAFM;;AAGZ;AACAC,EAAAA,IAAI,EAAE,QAJM;AAKZC,EAAAA,KAAK,EAAE;AALK,CAAd;AAQA,MAAMC,KAAK,GAAG,CAAC,CAAC,QAAD,EAAW,QAAX,CAAD,EAAuB,CAAC,QAAD,EAAW,QAAX,CAAvB,CAAd;AACA;;AACA,MAAMC,OAAO,GAAGC,KAAK,IAAI;AACvB;AADuB,0BAGGjB,KAAK,CAACkB,QAAN,CAAeR,KAAK,CAACI,KAArB,CAHH;AAAA;AAAA,QAGhBA,KAHgB;AAAA,QAGTK,QAHS;;AAAA,2BAICnB,KAAK,CAACkB,QAAN,CAAe,EAAf,CAJD;AAAA;AAAA,QAIhBE,IAJgB;AAAA,QAIVC,OAJU;;AAAA,2BAKGrB,KAAK,CAACkB,QAAN,CAAe,KAAf,CALH;AAAA;AAAA,QAKhBI,KALgB;AAAA,QAKTC,QALS;;AAAA,2BAMevB,KAAK,CAACkB,QAAN,CAAe,EAAf,CANf;AAAA;AAAA,QAMhBM,WANgB;AAAA,QAMHC,cANG;;AAAA,2BAOCzB,KAAK,CAACkB,QAAN,CAAeR,KAAK,CAACG,IAArB,CAPD;AAAA;AAAA,QAOhBA,IAPgB;AAAA,QAOVa,OAPU;;AASvB1B,EAAAA,KAAK,CAAC2B,SAAN,CAAgB,MAAM;AACpBC,IAAAA,QAAQ,CAACC,KAAT,4CAAmDnB,KAAK,CAACC,IAAzD;AACAiB,IAAAA,QAAQ,CAACE,oBAAT,CAA8B,MAA9B,EACE,aADF,EAEEC,OAFF,kBAEoBrB,KAAK,CAACC,IAF1B,gFAEoGD,KAAK,CAACE,IAF1G;AAGD,GALD;AAOA,SACE;AAAK,IAAA,SAAS,EAAEV,YAAY,CAAC,mBAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAEA,YAAY,CAAC,mBAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAC,IAAjB;AAAsB,IAAA,SAAS,EAAC,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGQ,KAAK,CAACC,IADT,CAHF,EAOE,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAC,IAAjB;AAAsB,IAAA,SAAS,EAAE,EAAjC;AAAqC,IAAA,SAAS,EAAC,WAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KAAK,CAACE,IADT,CAPF,EAWE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AACE,IAAA,IAAI,EAAEC,IADR;AAEE,IAAA,KAAK,EAAEC,KAFT;AAGE,IAAA,IAAI,EAAEM,IAHR;AAIE,IAAA,KAAK,EAAEE,KAJT;AAKE,IAAA,WAAW,EAAEE,WALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAXF,EAoBE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AACE,IAAA,IAAI,EAAEJ,IADR;AAEE,IAAA,IAAI,EAAEP,IAFR;AAGE,IAAA,IAAI,EAAEH,KAAK,CAACC,IAHd;AAIE,IAAA,KAAK,EAAEG,KAJT;AAKE,IAAA,KAAK,EAAEQ,KALT;AAME,IAAA,WAAW,EAAEE,WANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CApBF,CADF,EAkCE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAEtB,YAAY,CAAC,eAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAEA,YAAY,CAAC,YAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,UAAD,CACE;AADF;AAEE,IAAA,IAAI,EAAEkB,IAFR;AAGE,IAAA,OAAO,EAAEC,OAHX;AAIE,IAAA,QAAQ,EAAEE,QAJZ;AAKE,IAAA,KAAK,EAAED,KALT;AAME,IAAA,WAAW,EAAEE,WANf;AAOE,IAAA,cAAc,EAAEC,cAPlB;AAQE,IAAA,MAAM,EAAC,KART;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAYE,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAEZ,IAAvB;AAA6B,IAAA,OAAO,EAAEa,OAAtC;AAA+C,IAAA,KAAK,EAAEX,KAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,EAaE,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAED,KAAzB;AAAgC,IAAA,QAAQ,EAAEK,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,CADF,CADF,CAlCF,CADF;AAyDD,CAzED;;AA2EA,eAAeH,OAAf","sourcesContent":["import React from \"react\";\r\n\r\n/* Import component props */\r\nimport SelectColorGroup from \"../SelectColorGroup.jsx\";\r\nimport DemoAppStyle from \"../styles/style.module.css\";\r\n\r\nimport Typography from \"../../core/Typography\";\r\nimport { SidebarContainer } from \"../components/SidebarContainer\";\r\nimport { CustomScrollbar } from \"../components/CustomScrollbar\";\r\n\r\n/**Import demo component body*/\r\nimport { DEMO } from \"./DemoComponent.jsx\";\r\n/**Import usage & API  of component*/\r\nimport { API } from \"./api.jsx\";\r\nimport PropsGroup from \"./PropsGroup.jsx\";\r\nimport SelectViewGroup from \"../SelectViewGroup.jsx\";\r\n\r\n/**SETTINGS OF THIS DEMO*/\r\n/*Set component data (variables)*/\r\nconst Props = {\r\n  name: \"Spinner\",\r\n  desc: \"Spinners indicate system progress in a circular fashion.\",\r\n  /**default value*/\r\n  view: \"smooth\",\r\n  color: \"primary\"\r\n};\r\n\r\nconst views = [[\"Smooth\", \"smooth\"], [\"Filled\", \"filled\"]];\r\n/**Demo template*/\r\nconst Content = props => {\r\n  /*Set states of props*/\r\n\r\n  const [color, setColor] = React.useState(Props.color);\r\n  const [size, setSize] = React.useState(50);\r\n  const [value, setValue] = React.useState(false);\r\n  const [valueAmount, setValueAmount] = React.useState(60);\r\n  const [view, setView] = React.useState(Props.view);\r\n\r\n  React.useEffect(() => {\r\n    document.title = `React Design System: component ${Props.name}`;\r\n    document.getElementsByTagName(\"META\")[\r\n      \"description\"\r\n    ].content = `Demo ${Props.name} component for React Setproduct Design System with possible props. ${Props.desc}`;\r\n  });\r\n\r\n  return (\r\n    <div className={DemoAppStyle[\"content-container\"]}>\r\n      <div className={DemoAppStyle[\"content-component\"]}>\r\n        {/*COMPONENT*/}\r\n        {/*NAME*/}\r\n        <Typography type=\"h4\" className=\"demo-name\">\r\n          {Props.name}\r\n        </Typography>\r\n        {/*Description */}\r\n        <Typography type=\"h6\" colorStep={60} className=\"demo-desc\">\r\n          {Props.desc}\r\n        </Typography>\r\n        {/*Content*/}\r\n        <div className=\"demo-content-component\">\r\n          <DEMO\r\n            view={view}\r\n            color={color}\r\n            size={size}\r\n            value={value}\r\n            valueAmount={valueAmount}\r\n          />\r\n        </div>\r\n        <div className=\"BodyBig demo-api\">\r\n          <API\r\n            size={size}\r\n            view={view}\r\n            name={Props.name}\r\n            color={color}\r\n            value={value}\r\n            valueAmount={valueAmount}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      {/* Props*/}\r\n      <SidebarContainer>\r\n        <div className={DemoAppStyle[\"right_sidebar\"]}>\r\n          <div className={DemoAppStyle[\"demo-props\"]}>\r\n            {/**Set this Props component */}\r\n            <PropsGroup\r\n              // shape={shape}\r\n              size={size}\r\n              setSize={setSize}\r\n              setValue={setValue}\r\n              value={value}\r\n              valueAmount={valueAmount}\r\n              setValueAmount={setValueAmount}\r\n              margin=\"2px\"\r\n            />\r\n            <SelectViewGroup view={view} setView={setView} views={views} />\r\n            <SelectColorGroup color={color} setColor={setColor} />\r\n          </div>\r\n        </div>\r\n      </SidebarContainer>\r\n      {/***** */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Content;\r\n"]},"metadata":{},"sourceType":"module"}