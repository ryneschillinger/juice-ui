{"ast":null,"code":"import _slicedToArray from \"/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/src/@candy-ui/core/Select/SelectMulti/SelectMulti.jsx\";\nimport React, { useRef, useState } from \"react\";\nimport cx from \"classnames\";\nimport PropTypes from \"prop-types\";\n/**Import core component (variable)*/\n\nimport { MultiSelect as MultiSelectSource } from \"@blueprintjs/select\";\nimport { Icon } from \"@blueprintjs/core\";\nimport SearchInput from \"../../../core/Inputs/SearchInput\";\nimport InputGroup from \"../../../core/Inputs/SearchInput\";\nimport Button from \"../../../core/Button\";\nimport Menu from \"../../../core/Menu\";\nimport MenuItem from \"../../../core/Menu/MenuItem\";\nimport View from \"./_view.module.css\";\nimport Color from \"../../../styles/color.module.css\";\nimport SearchType from \"../../../core/Inputs/SearchInput/_type.module.css\";\nimport SearchView from \"../../../core/Inputs/SearchInput/_view.module.css\";\nimport MenuType from \"../../../core/Menu/_type.module.css\";\nimport MenuView from \"../../../core/Menu/_view.module.css\";\nimport { ThemeContext } from \"../../ThemeContext\";\nexport default function Select(props) {\n  const _props$type = props.type,\n        type = _props$type === void 0 ? \"def\" : _props$type,\n        _props$view = props.view,\n        view = _props$view === void 0 ? \"filled\" : _props$view,\n        _props$color = props.color,\n        color = _props$color === void 0 ? \"default\" : _props$color,\n        _props$disabled = props.disabled,\n        disabled = _props$disabled === void 0 ? \"false\" : _props$disabled,\n        icon = props.icon,\n        fill = props.fill,\n        centerAlign = props.centerAlign,\n        customWidth = props.customWidth,\n        matchTargetWidth = props.matchTargetWidth,\n        items = props.items,\n        placeholder = props.placeholder,\n        selectedItem = props.selectedItem,\n        onItemSelect = props.onItemSelect,\n        onActiveItemChange = props.onActiveItemChange,\n        restProps = _objectWithoutProperties(props, [\"type\", \"view\", \"color\", \"disabled\", \"icon\", \"fill\", \"centerAlign\", \"customWidth\", \"matchTargetWidth\", \"items\", \"placeholder\", \"selectedItem\", \"onItemSelect\", \"onActiveItemChange\"]);\n\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        createdItems = _useState2[0],\n        setCreatedItems = _useState2[1];\n\n  const _useState3 = useState(items),\n        _useState4 = _slicedToArray(_useState3, 2),\n        stateItems = _useState4[0],\n        setStateItems = _useState4[1];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        selections = _useState6[0],\n        setSelections = _useState6[1];\n\n  const renderItem = (item, {\n    handleClick,\n    modifiers,\n    query\n  }) => {\n    if (!modifiers.matchesPredicate) {\n      return null;\n    }\n\n    const text = \"\".concat(item.id, \". \").concat(item.title);\n    return React.createElement(MenuItem, {\n      type: type,\n      view: view,\n      color: color,\n      active: modifiers.active,\n      disabled: modifiers.disabled,\n      label: item.label ? item.label.toString() : null,\n      key: item.id,\n      onClick: handleClick,\n      text: highlightText(text, query),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    });\n  };\n\n  const renderMenuList = ({\n    items,\n    itemsParentRef,\n    query,\n    renderItem\n  }) => {\n    const renderedItems = items.map(renderItem).filter(item => item != null);\n    return React.createElement(Menu, {\n      type: type,\n      view: view === \"outlined\" ? \"raised\" : view,\n      color: color,\n      ulRef: itemsParentRef,\n      disabled: disabled,\n      style: {\n        maxHeight: \"390px\",\n        overflow: \"auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, renderedItems.length < 1 && React.createElement(MenuItem, {\n      type: type,\n      view: view,\n      color: color,\n      disabled: true,\n      text: \"No results matching \\\"\".concat(query, \"\\\"\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), renderedItems);\n  };\n\n  const filterItem = (query, item) => {\n    return \"\".concat(item.id, \". \").concat(item.title.toLowerCase(), \" \").concat(item.label).indexOf(query.toLowerCase()) >= 0;\n  };\n\n  const highlightText = (text, query) => {\n    let lastIndex = 0;\n    const words = query.split(/\\s+/).filter(word => word.length > 0).map(escapeRegExpChars);\n\n    if (words.length === 0) {\n      return [text];\n    }\n\n    const regexp = new RegExp(words.join(\"|\"), \"gi\");\n    const tokens = [];\n\n    while (true) {\n      const match = regexp.exec(text);\n\n      if (!match) {\n        break;\n      }\n\n      const length = match[0].length;\n      const before = text.slice(lastIndex, regexp.lastIndex - length);\n\n      if (before.length > 0) {\n        tokens.push(before);\n      }\n\n      lastIndex = regexp.lastIndex;\n      tokens.push(React.createElement(\"strong\", {\n        key: lastIndex,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, match[0]));\n    }\n\n    const rest = text.slice(lastIndex);\n\n    if (rest.length > 0) {\n      tokens.push(rest);\n    }\n\n    return tokens;\n  };\n\n  const escapeRegExpChars = text => {\n    return text.replace(/([.*+?^=!:${}()|\\[\\]\\/\\\\])/g, \"\\\\$1\");\n  };\n\n  const handleTagRemove = (tag, index) => {\n    deselectItem(index);\n  };\n\n  const getSelectedItemIndex = item => {\n    return stateItems.indexOf(item);\n  };\n\n  const selectItem = item => {\n    selectItems([item]);\n  };\n\n  const selectItems = itemsToSelect => {\n    let nextCreatedItems = createdItems.slice();\n    let nextItems = stateItems.slice();\n    let nextSelections = selections.slice();\n    itemsToSelect.forEach(item => {\n      const results = maybeAddCreatedItemToArrays(nextSelections, nextCreatedItems, item);\n      nextSelections = results.selections;\n      nextCreatedItems = results.createdItems; // Avoid re-creating an item that is already selected (the \"Create\n      // Item\" option will be shown even if it matches an already selected\n      // item).\n\n      nextItems = !arrayContainsItem(nextItems, item) ? [...nextItems, item] : nextItems;\n    });\n    setCreatedItems(nextCreatedItems);\n    setStateItems(nextItems);\n    setSelections(nextSelections);\n  };\n\n  const deselectItem = index => {\n    const item = stateItems[index];\n\n    const _maybeDeleteCreatedIt = maybeDeleteCreatedItemFromArrays(stateItems, createdItems, item),\n          nextCreatedItems = _maybeDeleteCreatedIt.createdItems,\n          nextSelections = _maybeDeleteCreatedIt.items; // Delete the item if the user manually created it.\n\n\n    setCreatedItems(nextCreatedItems);\n    setStateItems(stateItems.filter((item, i) => i !== index));\n    setSelections(nextSelections);\n  };\n\n  const maybeAddCreatedItemToArrays = (stateItems, createdItems, item) => {\n    const isNewlyCreatedItem = !arrayContainsItem(stateItems, item);\n    return {\n      createdItems: isNewlyCreatedItem ? addItemToArray(createdItems, item) : createdItems,\n      // Add a created item to `items` so that the item can be deselected.\n      stateItems: isNewlyCreatedItem ? addItemToArray(stateItems, item) : stateItems\n    };\n  };\n\n  const maybeDeleteCreatedItemFromArrays = (stateItems, createdItems, item) => {\n    const wasItemCreatedByUser = arrayContainsItem(createdItems, item); // Delete the item if the user manually created it.\n\n    return {\n      createdItems: wasItemCreatedByUser ? deleteItemFromArray(createdItems, item) : createdItems,\n      stateItems: wasItemCreatedByUser ? deleteItemFromArray(stateItems, item) : stateItems\n    };\n  };\n\n  const isItemSelected = item => {\n    console.log(getSelectedItemIndex(item) !== -1);\n    return getSelectedItemIndex(item) !== -1;\n  };\n\n  const handleItemSelect = item => {\n    if (!isItemSelected(item)) {\n      selectItem(item);\n    } else {\n      deselectItem(getSelectedItemIndex(item));\n    }\n  };\n\n  const arrayContainsItem = itemToFind => {\n    return selections.some(item => item.title === itemToFind.title);\n  };\n\n  const addItemToArray = itemToAdd => {\n    return [...selections, itemToAdd];\n  };\n\n  const deleteItemFromArray = itemToDelete => {\n    return selections.filter(item => item !== itemToDelete);\n  };\n\n  const handleClear = () => setSelections([]);\n\n  const clearButton = selections && selections.length > 0 ? React.createElement(Button, {\n    icon: \"cross\",\n    minimal: true,\n    onClick: handleClear,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }) : undefined;\n\n  const renderTag = item => item.title;\n\n  return React.createElement(ThemeContext.Consumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  }, ({\n    isDark\n  }) => React.createElement(MultiSelectSource, Object.assign({\n    tagInputProps: {\n      placeholder: placeholder\n    },\n    itemRenderer: renderItem,\n    itemListRenderer: renderMenuList,\n    tagRenderer: renderTag,\n    items: stateItems,\n    selectedItems: [] // onItemSelect={onItemSelect}\n    ,\n    onItemSelect: handleItemSelect,\n    inputProps: {\n      fill: true,\n      leftIcon: React.createElement(Icon, {\n        icon: \"search\",\n        iconSize: type === \"dense\" ? 16 : 20,\n        className: SearchView[\"searchButton\"],\n        style: type === \"dense\" ? {\n          margin: \"0.4rem\"\n        } : {\n          margin: \"0.65rem\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }),\n      className: cx(SearchType[type], SearchView[view], Color[color])\n    },\n    tagInputProps: {\n      onRemove: handleTagRemove,\n      rightElement: clearButton\n    },\n    popoverProps: {\n      minimal: true,\n      popoverClassName: cx(View[\"select-popover\"], MenuView[view], MenuType[type], Color[color])\n    }\n  }, restProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  })));\n}\nSelect.propTypes = {\n  /**\r\n   `The type of the component.\r\n   * Variants: `card` `action` `circle` `icon`\r\n   * Default value (if undefined): `default` `\r\n   */\n  type: PropTypes.oneOf([\"default\", \"card\", \"action\", \"circle\", \"icon\"]),\n\n  /**\r\n   ` The view of the component.\r\n   * Variants: `flat` `smooth` `outlined` `raised`\r\n   * Default value (if undefined): `filled` `\r\n   */\n  view: PropTypes.oneOf([\"filled\", \"flat\", \"smooth\", \"outlined\", \"raised\"]),\n\n  /**\r\n  ` The color of the component.\r\n   * Variants: `primary` `warning` `danger` `success` `primaryAlt` `warningAlt` `dangerAlt` `successAlt`\r\n   * Default value (if undefined): `default` `\r\n   */\n  color: PropTypes.oneOf([\"default\", \"primary\", \"warning\", \"danger\", \"success\", \"primary_alt\", \"warning_alt\", \"danger_alt\", \"success_alt\"]),\n\n  /**\r\n   * Item select event listener.\r\n   */\n  onItemSelect: PropTypes.func,\n\n  /**\r\n   * Whether this component should expand to fill its container.\r\n   */\n  fill: PropTypes.bool,\n\n  /**\r\n   * Name of a Blueprint UI icon (or an icon element) to render before the text.\r\n   */\n  icon: PropTypes.any,\n\n  /**\r\n   * If set to `true`, the button will display a centered loading spinner instead of its contents.\r\n   * The width of the button is not affected by the value of this prop.\r\n   */\n  loading: PropTypes.bool,\n\n  /**\r\n   * If `true`, the button will be disabled.\r\n   */\n  disabled: PropTypes.bool,\n\n  /**\r\n   * Whether target button text should be centerd\r\n   */\n  centerAlign: PropTypes.bool\n};","map":{"version":3,"sources":["/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/src/@candy-ui/core/Select/SelectMulti/SelectMulti.jsx"],"names":["React","useRef","useState","cx","PropTypes","MultiSelect","MultiSelectSource","Icon","SearchInput","InputGroup","Button","Menu","MenuItem","View","Color","SearchType","SearchView","MenuType","MenuView","ThemeContext","Select","props","type","view","color","disabled","icon","fill","centerAlign","customWidth","matchTargetWidth","items","placeholder","selectedItem","onItemSelect","onActiveItemChange","restProps","createdItems","setCreatedItems","stateItems","setStateItems","selections","setSelections","renderItem","item","handleClick","modifiers","query","matchesPredicate","text","id","title","active","label","toString","highlightText","renderMenuList","itemsParentRef","renderedItems","map","filter","maxHeight","overflow","length","filterItem","toLowerCase","indexOf","lastIndex","words","split","word","escapeRegExpChars","regexp","RegExp","join","tokens","match","exec","before","slice","push","rest","replace","handleTagRemove","tag","index","deselectItem","getSelectedItemIndex","selectItem","selectItems","itemsToSelect","nextCreatedItems","nextItems","nextSelections","forEach","results","maybeAddCreatedItemToArrays","arrayContainsItem","maybeDeleteCreatedItemFromArrays","i","isNewlyCreatedItem","addItemToArray","wasItemCreatedByUser","deleteItemFromArray","isItemSelected","console","log","handleItemSelect","itemToFind","some","itemToAdd","itemToDelete","handleClear","clearButton","undefined","renderTag","isDark","leftIcon","margin","className","onRemove","rightElement","minimal","popoverClassName","propTypes","oneOf","func","bool","any","loading"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\";\r\nimport cx from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n/**Import core component (variable)*/\r\nimport { MultiSelect as MultiSelectSource } from \"@blueprintjs/select\";\r\nimport { Icon } from \"@blueprintjs/core\";\r\nimport SearchInput from \"../../../core/Inputs/SearchInput\";\r\nimport InputGroup from \"../../../core/Inputs/SearchInput\";\r\nimport Button from \"../../../core/Button\";\r\nimport Menu from \"../../../core/Menu\";\r\nimport MenuItem from \"../../../core/Menu/MenuItem\";\r\nimport View from \"./_view.module.css\";\r\nimport Color from \"../../../styles/color.module.css\";\r\nimport SearchType from \"../../../core/Inputs/SearchInput/_type.module.css\";\r\nimport SearchView from \"../../../core/Inputs/SearchInput/_view.module.css\";\r\nimport MenuType from \"../../../core/Menu/_type.module.css\";\r\nimport MenuView from \"../../../core/Menu/_view.module.css\";\r\nimport { ThemeContext } from \"../../ThemeContext\";\r\n\r\nexport default function Select(props) {\r\n  const {\r\n    type = \"def\",\r\n    view = \"filled\",\r\n    color = \"default\",\r\n    disabled = \"false\",\r\n    icon,\r\n    fill,\r\n    centerAlign,\r\n    customWidth,\r\n    matchTargetWidth,\r\n    items,\r\n    placeholder,\r\n    selectedItem,\r\n    onItemSelect,\r\n    onActiveItemChange,\r\n    ...restProps\r\n  } = props;\r\n\r\n  const [createdItems, setCreatedItems] = useState();\r\n  const [stateItems, setStateItems] = useState(items);\r\n  const [selections, setSelections] = useState([]);\r\n\r\n  const renderItem  = (\r\n    item,\r\n    { handleClick, modifiers, query }\r\n  ) => {\r\n    if (!modifiers.matchesPredicate) {\r\n      return null;\r\n    }\r\n    const text = `${item.id}. ${item.title}`;\r\n    return (\r\n      <MenuItem\r\n        type={type}\r\n        view={view}\r\n        color={color}\r\n        active={modifiers.active}\r\n        disabled={modifiers.disabled}\r\n        label={item.label ? item.label.toString() : null}\r\n        key={item.id}\r\n        onClick={handleClick}\r\n        text={highlightText(text, query)}\r\n      />\r\n    );\r\n  };\r\n  \r\n  const renderMenuList = ({ items, itemsParentRef, query, renderItem }) => {\r\n    const renderedItems = items.map(renderItem).filter(item => item != null);\r\n    return (\r\n      <Menu\r\n        type={type}\r\n        view={view === \"outlined\" ? \"raised\" : view}\r\n        color={color}\r\n        ulRef={itemsParentRef}\r\n        disabled={disabled}\r\n        style={{ maxHeight: \"390px\", overflow: \"auto\" }}\r\n      >\r\n        { renderedItems.length < 1 && \r\n          <MenuItem\r\n            type={type}\r\n            view={view}\r\n            color={color}\r\n            disabled={true}\r\n            text={`No results matching \"${query}\"`}\r\n          />\r\n        }\r\n        {renderedItems}\r\n      </Menu>\r\n    );\r\n  };\r\n  \r\n  const filterItem = (query, item) => {\r\n    return (\r\n      `${item.id}. ${item.title.toLowerCase()} ${item.label}`.indexOf(\r\n        query.toLowerCase()\r\n      ) >= 0\r\n    );\r\n  };\r\n  \r\n  const highlightText = (text, query) => {\r\n    let lastIndex = 0;\r\n    const words = query\r\n      .split(/\\s+/)\r\n      .filter((word) => word.length > 0)\r\n      .map(escapeRegExpChars);\r\n    if (words.length === 0) {\r\n      return [text];\r\n    }\r\n    const regexp = new RegExp(words.join(\"|\"), \"gi\");\r\n    const tokens = [];\r\n    while (true) {\r\n      const match = regexp.exec(text);\r\n      if (!match) {\r\n        break;\r\n      }\r\n      const length = match[0].length;\r\n      const before = text.slice(lastIndex, regexp.lastIndex - length);\r\n      if (before.length > 0) {\r\n        tokens.push(before);\r\n      }\r\n      lastIndex = regexp.lastIndex;\r\n      tokens.push(<strong key={lastIndex}>{match[0]}</strong>);\r\n    }\r\n    const rest = text.slice(lastIndex);\r\n    if (rest.length > 0) {\r\n      tokens.push(rest);\r\n    }\r\n    return tokens;\r\n  }\r\n  \r\n  const escapeRegExpChars = text => {\r\n    return text.replace(/([.*+?^=!:${}()|\\[\\]\\/\\\\])/g, \"\\\\$1\");\r\n  }\r\n\r\n  const handleTagRemove = (tag, index) => {\r\n    deselectItem(index);\r\n  };\r\n\r\n  const getSelectedItemIndex = item => {\r\n    return stateItems.indexOf(item);\r\n  }\r\n\r\n  const selectItem = item => {\r\n    selectItems([item]);\r\n  }\r\n\r\n  const selectItems = itemsToSelect => {\r\n    let nextCreatedItems = createdItems.slice();\r\n    let nextItems = stateItems.slice();\r\n    let nextSelections = selections.slice();\r\n\r\n    itemsToSelect.forEach(item => {\r\n        const results = maybeAddCreatedItemToArrays(nextSelections, nextCreatedItems, item);\r\n        nextSelections = results.selections;\r\n        nextCreatedItems = results.createdItems;\r\n        // Avoid re-creating an item that is already selected (the \"Create\r\n        // Item\" option will be shown even if it matches an already selected\r\n        // item).\r\n        nextItems = !arrayContainsItem(nextItems, item) ? [...nextItems, item] : nextItems;\r\n    });\r\n\r\n    setCreatedItems(nextCreatedItems);\r\n    setStateItems(nextItems);\r\n    setSelections(nextSelections);\r\n  }\r\n\r\n  const deselectItem = (index) => {\r\n    const item = stateItems[index];\r\n    const { createdItems: nextCreatedItems, items: nextSelections } = maybeDeleteCreatedItemFromArrays(\r\n        stateItems,\r\n        createdItems,\r\n        item,\r\n    );\r\n    // Delete the item if the user manually created it.\r\n    setCreatedItems(nextCreatedItems);\r\n    setStateItems(stateItems.filter((item, i) => i !== index));\r\n    setSelections(nextSelections);\r\n  }\r\n\r\n  const maybeAddCreatedItemToArrays = (stateItems, createdItems, item) => {\r\n    const isNewlyCreatedItem = !arrayContainsItem(stateItems, item);\r\n    return {\r\n        createdItems: isNewlyCreatedItem ? addItemToArray(createdItems, item) : createdItems,\r\n        // Add a created item to `items` so that the item can be deselected.\r\n        stateItems: isNewlyCreatedItem ? addItemToArray(stateItems, item) : stateItems,\r\n    };\r\n  }\r\n\r\n  const maybeDeleteCreatedItemFromArrays =  (stateItems, createdItems, item) => {\r\n    const wasItemCreatedByUser = arrayContainsItem(createdItems, item);\r\n\r\n    // Delete the item if the user manually created it.\r\n    return {\r\n        createdItems: wasItemCreatedByUser ? deleteItemFromArray(createdItems, item) : createdItems,\r\n        stateItems: wasItemCreatedByUser ? deleteItemFromArray(stateItems, item) : stateItems,\r\n    };\r\n  }\r\n\r\n  const isItemSelected = item => {\r\n    console.log(getSelectedItemIndex(item) !== -1)\r\n    return getSelectedItemIndex(item) !== -1;\r\n  }\r\n\r\n  const handleItemSelect = item => {\r\n    if (!isItemSelected(item)) {\r\n        selectItem(item);\r\n    } else {\r\n        deselectItem(getSelectedItemIndex(item));\r\n    }\r\n  };\r\n\r\n  const arrayContainsItem = (itemToFind) => {\r\n    return selections.some((item) => item.title === itemToFind.title);\r\n  }\r\n\r\n  const addItemToArray = (itemToAdd) => {\r\n    return [...selections, itemToAdd];\r\n  }\r\n\r\n  const deleteItemFromArray = (itemToDelete) => {\r\n    return selections.filter(item => item !== itemToDelete);\r\n  }\r\n\r\n  const handleClear = () => setSelections([]);\r\n\r\n  const clearButton =\r\n    selections && selections.length > 0 ? <Button icon=\"cross\" minimal={true} onClick={handleClear} /> : undefined;\r\n\r\n  const renderTag = item => item.title;\r\n\r\n  return (\r\n    <ThemeContext.Consumer>\r\n      {({ isDark }) => (\r\n        <MultiSelectSource\r\n          tagInputProps={{ placeholder: placeholder }}\r\n          itemRenderer={renderItem}\r\n          itemListRenderer={renderMenuList}\r\n          tagRenderer={renderTag}\r\n          items={stateItems}\r\n          selectedItems={[]}\r\n          // onItemSelect={onItemSelect}\r\n          onItemSelect={handleItemSelect}\r\n          inputProps={{\r\n            fill: true,\r\n            leftIcon:\r\n              <Icon\r\n                icon={\"search\"}\r\n                iconSize={type === \"dense\" ? 16 : 20}\r\n                className={SearchView[\"searchButton\"]}\r\n                style={type === \"dense\" ? { margin: \"0.4rem\" } : { margin: \"0.65rem\" }}\r\n              />,\r\n            className: cx(\r\n              SearchType[type],\r\n              SearchView[view],\r\n              Color[color]\r\n            )\r\n          }}\r\n          tagInputProps={{\r\n            onRemove: handleTagRemove,\r\n            rightElement: clearButton\r\n          }}\r\n          popoverProps={{\r\n            minimal: true,\r\n            popoverClassName: cx(\r\n              View[\"select-popover\"],\r\n              MenuView[view],\r\n              MenuType[type],\r\n              Color[color]\r\n            )\r\n          }}\r\n          {...restProps}\r\n        >\r\n        {/* // <MultiSelectSource\r\n        //   type={type === \"dense\" ? \"dense\" : \"default\"}\r\n        //   view={view}\r\n        //   color={color}\r\n        //   fill={fill}\r\n        //   disabled={disabled}\r\n        //   filterable={false}\r\n        //   matchTargetWidth={matchTargetWidth}\r\n        //   itemPredicate={filterItem}\r\n        //   itemRenderer={renderItem}\r\n        //   itemListRenderer={renderMenuList}\r\n        //   onItemSelect={onItemSelect}\r\n        //   onActiveItemChange={onActiveItemChange}\r\n        //   items={items}\r\n        //   inputProps={{\r\n        //     fill: true,\r\n        //     leftIcon:\r\n        //       <Icon\r\n        //         icon={\"search\"}\r\n        //         iconSize={type === \"dense\" ? 16 : 20}\r\n        //         className={SearchView[\"searchButton\"]}\r\n        //         style={type === \"dense\" ? { margin: \"0.4rem\" } : { margin: \"0.65rem\" }}\r\n        //       />,\r\n        //     className: cx(\r\n        //       SearchType[type],\r\n        //       SearchView[view],\r\n        //       Color[color]\r\n        //     )\r\n        //   }}\r\n        //   popoverProps={{\r\n        //     minimal: true,\r\n        //     popoverClassName: cx(\r\n        //       View[\"select-popover\"],\r\n        //       MenuView[view],\r\n        //       MenuType[type],\r\n        //       Color[color]\r\n        //     )\r\n        //   }}\r\n        //   {...restProps}\r\n        // > */}\r\n          {/* <InputGroup\r\n            type={type}\r\n            view={view}\r\n            color={color}\r\n            placeholder=\"Search for something...\"\r\n            fill={fill}\r\n            // onSearch={onSearch}\r\n          /> */}\r\n        </MultiSelectSource>\r\n      )}\r\n    </ThemeContext.Consumer>\r\n  );\r\n}\r\n\r\nSelect.propTypes = {\r\n  /**\r\n   `The type of the component.\r\n   * Variants: `card` `action` `circle` `icon`\r\n   * Default value (if undefined): `default` `\r\n   */\r\n  type: PropTypes.oneOf([\"default\", \"card\", \"action\", \"circle\", \"icon\"]),\r\n  /**\r\n   ` The view of the component.\r\n   * Variants: `flat` `smooth` `outlined` `raised`\r\n   * Default value (if undefined): `filled` `\r\n   */\r\n  view: PropTypes.oneOf([\"filled\", \"flat\", \"smooth\", \"outlined\", \"raised\"]),\r\n  /**\r\n  ` The color of the component.\r\n   * Variants: `primary` `warning` `danger` `success` `primaryAlt` `warningAlt` `dangerAlt` `successAlt`\r\n   * Default value (if undefined): `default` `\r\n   */\r\n  color: PropTypes.oneOf([\r\n    \"default\",\r\n    \"primary\",\r\n    \"warning\",\r\n    \"danger\",\r\n    \"success\",\r\n    \"primary_alt\",\r\n    \"warning_alt\",\r\n    \"danger_alt\",\r\n    \"success_alt\"\r\n  ]),\r\n  /**\r\n   * Item select event listener.\r\n   */\r\n  onItemSelect: PropTypes.func,\r\n  /**\r\n   * Whether this component should expand to fill its container.\r\n   */\r\n  fill: PropTypes.bool,\r\n  /**\r\n   * Name of a Blueprint UI icon (or an icon element) to render before the text.\r\n   */\r\n  icon: PropTypes.any,\r\n  /**\r\n   * If set to `true`, the button will display a centered loading spinner instead of its contents.\r\n   * The width of the button is not affected by the value of this prop.\r\n   */\r\n  loading: PropTypes.bool,\r\n  /**\r\n   * If `true`, the button will be disabled.\r\n   */\r\n  disabled: PropTypes.bool,\r\n  /**\r\n   * Whether target button text should be centerd\r\n   */\r\n  centerAlign: PropTypes.bool\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}