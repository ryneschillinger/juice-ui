{"ast":null,"code":"import _slicedToArray from \"/Users/ryneschillinger1/dev_projects/ux-kitchen/ui-kitchen-ingredients/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/ryneschillinger1/dev_projects/ux-kitchen/ui-kitchen-ingredients/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/ryneschillinger1/dev_projects/ux-kitchen/ui-kitchen-ingredients/src/@setproduct-ui/core/Chips/Chips.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport cx from \"classnames\";\nimport { Tag } from \"@blueprintjs/core\";\nimport { ThemeContext } from \"../ThemeContext\";\nimport Type from \"./_type.module.css\";\nimport View from \"./_view.module.css\";\nimport Color from \"../../styles/color.module.css\";\n/** \r\n  __Component 'Chips'__\r\n**/\n\nexport default function Chips(props) {\n  const _props$type = props.type,\n        type = _props$type === void 0 ? \"def\" : _props$type,\n        _props$view = props.view,\n        view = _props$view === void 0 ? \"smooth\" : _props$view,\n        _props$color = props.color,\n        color = _props$color === void 0 ? \"default\" : _props$color,\n        icon = props.icon,\n        rightIcon = props.rightIcon,\n        tag = props.tag,\n        removable = props.removable,\n        onRemove = props.onRemove,\n        _props$round = props.round,\n        round = _props$round === void 0 ? true : _props$round,\n        active = props.active,\n        disabled = props.disabled,\n        onClick = props.onClick,\n        withTick = props.withTick,\n        children = props.children,\n        withNumber = props.withNumber,\n        withAvatar = props.withAvatar,\n        className = props.className,\n        rest = _objectWithoutProperties(props, [\"type\", \"view\", \"color\", \"icon\", \"rightIcon\", \"tag\", \"removable\", \"onRemove\", \"round\", \"active\", \"disabled\", \"onClick\", \"withTick\", \"children\", \"withNumber\", \"withAvatar\", \"className\"]);\n\n  const _React$useState = React.useState(active),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        isActive = _React$useState2[0],\n        setActive = _React$useState2[1];\n\n  return React.createElement(ThemeContext.Consumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, ({\n    dark\n  }) => React.createElement(Tag, Object.assign({}, rest, {\n    className: cx(Type[type], Type[view], type === \"dense\" && View[type], View[view], Color[color], round && Type[\"round\"], isActive && !removable && Type[\"active\"], isActive && !removable ? View[\"active\"] : View[\"not-active\"], disabled && View[\"disabled\"], withNumber && Type[\"number\"], withNumber && View[\"number\"], withAvatar && Type[\"avatar\"], className),\n    key: tag,\n    interactive: removable ? false : true,\n    onRemove: removable ? !disabled ? onRemove : () => {} : null,\n    onClick: () => !removable && !disabled && setActive(!isActive),\n    icon: withTick && !removable ? \"tick\" : icon && icon,\n    rightIcon: rightIcon && rightIcon,\n    large: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), withNumber && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, withNumber), withAvatar && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: withAvatar,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  })), withAvatar ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, tag) : tag));\n}\nChips.propTypes = {\n  /**\r\n   `The type of the component.\r\n   * Variants: `dense` \r\n   * Default value (if undefined): `def` `\r\n   */\n  type: PropTypes.oneOf([\"def\", \"dense\"]),\n\n  /**\r\n   ` The view of the component.\r\n   * Variants: `outlined`\r\n   * Default value (if undefined): `smooth` `\r\n   */\n  view: PropTypes.oneOf([\"smooth\", \"outlined\"]),\n\n  /**\r\n  ` The color of the component.\r\n   * Variants: `primary` `warning` `danger` `success` `primaryAlt` `warningAlt` `dangerAlt` `successAlt`\r\n   * Default value (if undefined): `default` `\r\n   */\n  color: PropTypes.oneOf([\"default\", \"primary\", \"warning\", \"danger\", \"success\", \"primary_alt\", \"warning_alt\", \"danger_alt\", \"success_alt\"]),\n\n  /**\r\n   * Text\r\n   */\n  tag: PropTypes.string,\n\n  /**\r\n   * Whether this tag should have rounded ends.\r\n   */\n  round: PropTypes.bool,\n\n  /**\r\n   * Show remove button\r\n   */\n  removable: PropTypes.bool,\n\n  /**\r\n   * Click handler for remove button.\r\n   */\n  onRemove: PropTypes.func,\n\n  /**\r\n   * Name of a Blueprint UI icon (or an icon element) to render before the text.\r\n   */\n  icon: PropTypes.string,\n\n  /**\r\n   * Name of a Blueprint UI icon (or an icon element) to render after the text.\r\n   */\n  rightIcon: PropTypes.string,\n\n  /**\r\n   * Render Tick animation\r\n   */\n  withTick: PropTypes.bool,\n\n  /**\r\n   * Render image before the text\r\n   */\n  withAvatar: PropTypes.string,\n\n  /**\r\n   * Render number before the text\r\n   */\n  withNumber: PropTypes.string,\n\n  /**\r\n   * If `true`, the button will be disabled.\r\n   */\n  disabled: PropTypes.bool\n};","map":{"version":3,"sources":["/Users/ryneschillinger1/dev_projects/ux-kitchen/ui-kitchen-ingredients/src/@setproduct-ui/core/Chips/Chips.jsx"],"names":["React","PropTypes","cx","Tag","ThemeContext","Type","View","Color","Chips","props","type","view","color","icon","rightIcon","tag","removable","onRemove","round","active","disabled","onClick","withTick","children","withNumber","withAvatar","className","rest","useState","isActive","setActive","dark","propTypes","oneOf","string","bool","func"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport cx from \"classnames\";\r\n\r\nimport { Tag } from \"@blueprintjs/core\";\r\n\r\nimport { ThemeContext } from \"../ThemeContext\";\r\n\r\nimport Type from \"./_type.module.css\";\r\nimport View from \"./_view.module.css\";\r\nimport Color from \"../../styles/color.module.css\";\r\n\r\n/** \r\n  __Component 'Chips'__\r\n**/\r\n\r\nexport default function Chips(props) {\r\n  const {\r\n    type = \"def\",\r\n    view = \"smooth\",\r\n    color = \"default\",\r\n    icon,\r\n    rightIcon,\r\n    tag,\r\n    removable,\r\n    onRemove,\r\n    round = true,\r\n    active,\r\n    disabled,\r\n    onClick,\r\n    withTick,\r\n    children,\r\n    withNumber,\r\n    withAvatar,\r\n    className,\r\n    ...rest\r\n  } = props;\r\n\r\n  const [isActive, setActive] = React.useState(active);\r\n\r\n  return (\r\n    <ThemeContext.Consumer>\r\n      {({ dark }) => (\r\n        <Tag\r\n          {...rest}\r\n          className={cx(\r\n            Type[type],\r\n            Type[view],\r\n            type === \"dense\" && View[type],\r\n            View[view],\r\n            Color[color],\r\n            round && Type[\"round\"],\r\n            isActive && !removable && Type[\"active\"],\r\n            isActive && !removable ? View[\"active\"] : View[\"not-active\"],\r\n            disabled && View[\"disabled\"],\r\n            withNumber && Type[\"number\"],\r\n            withNumber && View[\"number\"],\r\n            withAvatar && Type[\"avatar\"],\r\n            className\r\n          )}\r\n          key={tag}\r\n          interactive={removable ? false : true}\r\n          onRemove={removable ? (!disabled ? onRemove : () => {}) : null}\r\n          onClick={() => !removable && !disabled && setActive(!isActive)}\r\n          icon={withTick && !removable ? \"tick\" : icon && icon}\r\n          rightIcon={rightIcon && rightIcon}\r\n          large={true}\r\n        >\r\n          {withNumber && <div>{withNumber}</div>}\r\n          {withAvatar && (\r\n            <div>\r\n              <img src={withAvatar} alt=\"\" />\r\n            </div>\r\n          )}\r\n          {withAvatar ? <div>{tag}</div> : tag}\r\n        </Tag>\r\n      )}\r\n    </ThemeContext.Consumer>\r\n  );\r\n}\r\n\r\nChips.propTypes = {\r\n  /**\r\n   `The type of the component.\r\n   * Variants: `dense` \r\n   * Default value (if undefined): `def` `\r\n   */\r\n  type: PropTypes.oneOf([\"def\", \"dense\"]),\r\n  /**\r\n   ` The view of the component.\r\n   * Variants: `outlined`\r\n   * Default value (if undefined): `smooth` `\r\n   */\r\n  view: PropTypes.oneOf([\"smooth\", \"outlined\"]),\r\n  /**\r\n  ` The color of the component.\r\n   * Variants: `primary` `warning` `danger` `success` `primaryAlt` `warningAlt` `dangerAlt` `successAlt`\r\n   * Default value (if undefined): `default` `\r\n   */\r\n  color: PropTypes.oneOf([\r\n    \"default\",\r\n    \"primary\",\r\n    \"warning\",\r\n    \"danger\",\r\n    \"success\",\r\n    \"primary_alt\",\r\n    \"warning_alt\",\r\n    \"danger_alt\",\r\n    \"success_alt\"\r\n  ]),\r\n  /**\r\n   * Text\r\n   */\r\n  tag: PropTypes.string,\r\n  /**\r\n   * Whether this tag should have rounded ends.\r\n   */\r\n  round: PropTypes.bool,\r\n  /**\r\n   * Show remove button\r\n   */\r\n  removable: PropTypes.bool,\r\n  /**\r\n   * Click handler for remove button.\r\n   */\r\n  onRemove: PropTypes.func,\r\n  /**\r\n   * Name of a Blueprint UI icon (or an icon element) to render before the text.\r\n   */\r\n  icon: PropTypes.string,\r\n  /**\r\n   * Name of a Blueprint UI icon (or an icon element) to render after the text.\r\n   */\r\n  rightIcon: PropTypes.string,\r\n  /**\r\n   * Render Tick animation\r\n   */\r\n  withTick: PropTypes.bool,\r\n  /**\r\n   * Render image before the text\r\n   */\r\n  withAvatar: PropTypes.string,\r\n  /**\r\n   * Render number before the text\r\n   */\r\n  withNumber: PropTypes.string,\r\n  /**\r\n   * If `true`, the button will be disabled.\r\n   */\r\n  disabled: PropTypes.bool\r\n};\r\n"]},"metadata":{},"sourceType":"module"}