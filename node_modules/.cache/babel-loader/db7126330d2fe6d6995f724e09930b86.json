{"ast":null,"code":"var _jsxFileName = \"/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/src/@candy-ui/demo/TabsSegmented/PropsGroup.jsx\";\nimport React from \"react\";\nimport { Label } from \"@blueprintjs/core\";\nimport Checkbox from \"../../core/CheckBox\";\n\nconst PropsGroup = props => {\n  const isRem = props.isRem,\n        setRem = props.setRem,\n        isIcon = props.isIcon,\n        setIcon = props.setIcon,\n        margin = props.margin;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Props:\"), React.createElement(\"div\", {\n    className: \"demo-props\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Checkbox, {\n    type: \"dense\",\n    color: isIcon ? \"primary\" : \"default\",\n    checked: isIcon,\n    label: \"Icon\",\n    onChange: () => setIcon(!isIcon),\n    fill: true,\n    margin: margin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), React.createElement(Checkbox, {\n    type: \"dense\",\n    color: fill ? \"primary\" : \"default\",\n    checked: fill,\n    label: \"Fill\",\n    onChange: () => setFill(!fill),\n    fill: true,\n    margin: margin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), isRem && React.createElement(Checkbox, {\n    type: \"dense\",\n    color: isRem ? \"primary\" : \"default\",\n    checked: isRem,\n    label: \"Removable\",\n    onChange: () => setRem(!isRem),\n    fill: true,\n    margin: margin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  })));\n};\n\nexport default PropsGroup;","map":{"version":3,"sources":["/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/src/@candy-ui/demo/TabsSegmented/PropsGroup.jsx"],"names":["React","Label","Checkbox","PropsGroup","props","isRem","setRem","isIcon","setIcon","margin","fill","setFill"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,KAAT,QAAsB,mBAAtB;AACA,OAAOC,QAAP,MAAqB,qBAArB;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AAAA,QAGxBC,KAHwB,GAQtBD,KARsB,CAGxBC,KAHwB;AAAA,QAIxBC,MAJwB,GAQtBF,KARsB,CAIxBE,MAJwB;AAAA,QAKxBC,MALwB,GAQtBH,KARsB,CAKxBG,MALwB;AAAA,QAMxBC,OANwB,GAQtBJ,KARsB,CAMxBI,OANwB;AAAA,QAOxBC,MAPwB,GAQtBL,KARsB,CAOxBK,MAPwB;AAS1B,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,KAAK,EAAEF,MAAM,GAAG,SAAH,GAAe,SAF9B;AAGE,IAAA,OAAO,EAAEA,MAHX;AAIE,IAAA,KAAK,EAAC,MAJR;AAKE,IAAA,QAAQ,EAAE,MAAMC,OAAO,CAAC,CAACD,MAAF,CALzB;AAME,IAAA,IAAI,MANN;AAOE,IAAA,MAAM,EAAEE,MAPV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAUE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,KAAK,EAAEC,IAAI,GAAG,SAAH,GAAe,SAF5B;AAGE,IAAA,OAAO,EAAEA,IAHX;AAIE,IAAA,KAAK,EAAC,MAJR;AAKE,IAAA,QAAQ,EAAE,MAAMC,OAAO,CAAC,CAACD,IAAF,CALzB;AAME,IAAA,IAAI,MANN;AAOE,IAAA,MAAM,EAAED,MAPV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,EAmBGJ,KAAK,IACJ,oBAAC,QAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,KAAK,EAAEA,KAAK,GAAG,SAAH,GAAe,SAF7B;AAGE,IAAA,OAAO,EAAEA,KAHX;AAIE,IAAA,KAAK,EAAC,WAJR;AAKE,IAAA,QAAQ,EAAE,MAAMC,MAAM,CAAC,CAACD,KAAF,CALxB;AAME,IAAA,IAAI,MANN;AAOE,IAAA,MAAM,EAAEI,MAPV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBJ,CAFF,CADF;AAoCD,CA7CD;;AA+CA,eAAeN,UAAf","sourcesContent":["import React from \"react\";\r\n\r\nimport { Label } from \"@blueprintjs/core\";\r\nimport Checkbox from \"../../core/CheckBox\";\r\n\r\nconst PropsGroup = props => {\r\n  const {\r\n    //isVert, setVert,\r\n    isRem,\r\n    setRem,\r\n    isIcon,\r\n    setIcon,\r\n    margin\r\n  } = props;\r\n  return (\r\n    <div>\r\n      <Label>Props:</Label>\r\n      <div className=\"demo-props\">\r\n        <Checkbox\r\n          type=\"dense\"\r\n          color={isIcon ? \"primary\" : \"default\"}\r\n          checked={isIcon}\r\n          label=\"Icon\"\r\n          onChange={() => setIcon(!isIcon)}\r\n          fill\r\n          margin={margin}\r\n        />\r\n        <Checkbox\r\n          type=\"dense\"\r\n          color={fill ? \"primary\" : \"default\"}\r\n          checked={fill}\r\n          label=\"Fill\"\r\n          onChange={() => setFill(!fill)}\r\n          fill\r\n          margin={margin}\r\n        />\r\n        {isRem && (\r\n          <Checkbox\r\n            type=\"dense\"\r\n            color={isRem ? \"primary\" : \"default\"}\r\n            checked={isRem}\r\n            label=\"Removable\"\r\n            onChange={() => setRem(!isRem)}\r\n            fill\r\n            margin={margin}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PropsGroup;\r\n"]},"metadata":{},"sourceType":"module"}