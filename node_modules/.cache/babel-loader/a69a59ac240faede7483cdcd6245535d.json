{"ast":null,"code":"import _slicedToArray from \"/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/src/@candy-ui/core/Select/Select.jsx\";\nimport React, { useRef } from \"react\";\nimport cx from \"classnames\";\nimport PropTypes from \"prop-types\";\n/**Import core component (variable)*/\n\nimport { Select as SelectSource } from \"@blueprintjs/select\";\nimport { Icon } from \"@blueprintjs/core\";\nimport Button from \"../../core/Button\";\nimport Menu from \"../../core/Menu\";\nimport MenuItem from \"../../core/Menu/MenuItem\";\nimport View from \"./_view.module.css\";\nimport Color from \"../../styles/color.module.css\";\nimport SearchType from \"../../core/Inputs/SearchInput/_type.module.css\";\nimport SearchView from \"../../core/Inputs/SearchInput/_view.module.css\";\nimport MenuType from \"../../core/Menu/_type.module.css\";\nimport MenuView from \"../../core/Menu/_view.module.css\";\nimport { ThemeContext } from \"../ThemeContext\";\nexport default function Select(props) {\n  const _props$type = props.type,\n        type = _props$type === void 0 ? \"def\" : _props$type,\n        _props$view = props.view,\n        view = _props$view === void 0 ? \"filled\" : _props$view,\n        _props$color = props.color,\n        color = _props$color === void 0 ? \"default\" : _props$color,\n        _props$disabled = props.disabled,\n        disabled = _props$disabled === void 0 ? \"false\" : _props$disabled,\n        icon = props.icon,\n        fill = props.fill,\n        centerAlign = props.centerAlign,\n        customWidth = props.customWidth,\n        matchTargetWidth = props.matchTargetWidth,\n        items = props.items,\n        filterable = props.filterable,\n        restProps = _objectWithoutProperties(props, [\"type\", \"view\", \"color\", \"disabled\", \"icon\", \"fill\", \"centerAlign\", \"customWidth\", \"matchTargetWidth\", \"items\", \"filterable\"]);\n\n  const _React$useState = React.useState(items[0]),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        item = _React$useState2[0],\n        setItem = _React$useState2[1];\n\n  const renderItem = (item, {\n    handleClick,\n    modifiers,\n    query\n  }) => {\n    if (!modifiers.matchesPredicate) {\n      return null;\n    }\n\n    const text = \"\".concat(item.id, \". \").concat(item.title);\n    return React.createElement(MenuItem, {\n      type: type,\n      view: view,\n      color: color,\n      active: modifiers.active,\n      disabled: modifiers.disabled,\n      label: item.label ? item.label.toString() : null,\n      key: item.id,\n      onClick: handleClick,\n      text: highlightText(text, query),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    });\n  };\n\n  const renderMenuList = ({\n    items,\n    itemsParentRef,\n    query,\n    renderItem\n  }) => {\n    const renderedItems = items.map(renderItem).filter(item => item != null);\n    return React.createElement(Menu, {\n      type: type,\n      view: view === \"outlined\" ? \"raised\" : view,\n      color: color,\n      ulRef: itemsParentRef,\n      disabled: disabled,\n      style: {\n        maxHeight: \"390px\",\n        overflow: \"auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, renderedItems.length < 1 && React.createElement(MenuItem, {\n      type: type,\n      view: view,\n      color: color,\n      disabled: true,\n      text: \"No results matching \\\"\".concat(query, \"\\\"\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), renderedItems);\n  };\n\n  const filterItem = (query, item) => {\n    return \"\".concat(item.id, \". \").concat(item.title.toLowerCase(), \" \").concat(item.label).indexOf(query.toLowerCase()) >= 0;\n  };\n\n  const highlightText = (text, query) => {\n    let lastIndex = 0;\n    const words = query.split(/\\s+/).filter(word => word.length > 0).map(escapeRegExpChars);\n\n    if (words.length === 0) {\n      return [text];\n    }\n\n    const regexp = new RegExp(words.join(\"|\"), \"gi\");\n    const tokens = [];\n\n    while (true) {\n      const match = regexp.exec(text);\n\n      if (!match) {\n        break;\n      }\n\n      const length = match[0].length;\n      const before = text.slice(lastIndex, regexp.lastIndex - length);\n\n      if (before.length > 0) {\n        tokens.push(before);\n      }\n\n      lastIndex = regexp.lastIndex;\n      tokens.push(React.createElement(\"strong\", {\n        key: lastIndex,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, match[0]));\n    }\n\n    const rest = text.slice(lastIndex);\n\n    if (rest.length > 0) {\n      tokens.push(rest);\n    }\n\n    return tokens;\n  };\n\n  const escapeRegExpChars = text => {\n    return text.replace(/([.*+?^=!:${}()|\\[\\]\\/\\\\])/g, \"\\\\$1\");\n  };\n\n  return React.createElement(ThemeContext.Consumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, ({\n    isDark\n  }) => React.createElement(SelectSource, Object.assign({\n    type: type === \"dense\" ? \"dense\" : \"default\",\n    view: view,\n    color: color,\n    fill: fill // dense={dense}\n    ,\n    disabled: disabled,\n    filterable: filterable,\n    matchTargetWidth: matchTargetWidth,\n    itemPredicate: filterItem,\n    itemRenderer: renderItem,\n    itemListRenderer: renderMenuList,\n    onItemSelect: setItem,\n    items: items,\n    inputProps: {\n      placeholder: '',\n      fill: true,\n      leftIcon: React.createElement(Icon, {\n        icon: \"search\",\n        iconSize: type === \"dense\" ? 16 : 20,\n        className: SearchView[\"searchButton\"],\n        style: type === \"dense\" ? {\n          margin: \"0.4rem\"\n        } : {\n          margin: \"0.65rem\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }),\n      className: cx(SearchType[type], SearchView[view], Color[color])\n    },\n    popoverProps: {\n      minimal: true,\n      popoverClassName: cx(View[\"select-popover\"], filterable && View[\"select-popover-filterable\"], MenuView[view], MenuType[type], Color[color])\n    }\n  }, restProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }), React.createElement(Button, {\n    type: dense ? \"dense\" : \"default\",\n    view: view,\n    color: color,\n    fill: fill,\n    icon: icon,\n    text: item.title + (item.label ? \" (\".concat(item.label, \")\") : ''),\n    disabled: disabled,\n    rightIcon: \"caret-down\",\n    className: cx(fill && View[\"button-fill-width\"], centerAlign && View[\"button-center-align\"]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  })));\n}\nSelect.propTypes = {\n  /**\r\n   `The type of the component.\r\n   * Variants: `card` `action` `circle` `icon`\r\n   * Default value (if undefined): `default` `\r\n   */\n  type: PropTypes.oneOf([\"default\", \"card\", \"action\", \"circle\", \"icon\"]),\n\n  /**\r\n   ` The view of the component.\r\n   * Variants: `flat` `smooth` `outlined` `raised`\r\n   * Default value (if undefined): `filled` `\r\n   */\n  view: PropTypes.oneOf([\"filled\", \"flat\", \"smooth\", \"outlined\", \"raised\"]),\n\n  /**\r\n  ` The color of the component.\r\n   * Variants: `primary` `warning` `danger` `success` `primaryAlt` `warningAlt` `dangerAlt` `successAlt`\r\n   * Default value (if undefined): `default` `\r\n   */\n  color: PropTypes.oneOf([\"default\", \"primary\", \"warning\", \"danger\", \"success\", \"primary_alt\", \"warning_alt\", \"danger_alt\", \"success_alt\"]),\n\n  /**\r\n   * Click event handler.\r\n   */\n  onClick: PropTypes.func,\n\n  /**\r\n   * Whether this component should expand to fill its container.\r\n   */\n  fill: PropTypes.bool,\n\n  /**\r\n   * Name of a Blueprint UI icon (or an icon element) to render before the text.\r\n   */\n  icon: PropTypes.any,\n\n  /**\r\n   * If set to `true`, the button will display a centered loading spinner instead of its contents.\r\n   * The width of the button is not affected by the value of this prop.\r\n   */\n  loading: PropTypes.bool,\n\n  /**\r\n   * If `true`, the button will be disabled.\r\n   */\n  disabled: PropTypes.bool,\n\n  /**\r\n   * Whether target button text should be centerd\r\n   */\n  centerAlign: PropTypes.bool,\n\n  /**\r\n   * Whether list should be filterable\r\n   */\n  filterable: PropTypes.bool\n};","map":{"version":3,"sources":["/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/src/@candy-ui/core/Select/Select.jsx"],"names":["React","useRef","cx","PropTypes","Select","SelectSource","Icon","Button","Menu","MenuItem","View","Color","SearchType","SearchView","MenuType","MenuView","ThemeContext","props","type","view","color","disabled","icon","fill","centerAlign","customWidth","matchTargetWidth","items","filterable","restProps","useState","item","setItem","renderItem","handleClick","modifiers","query","matchesPredicate","text","id","title","active","label","toString","highlightText","renderMenuList","itemsParentRef","renderedItems","map","filter","maxHeight","overflow","length","filterItem","toLowerCase","indexOf","lastIndex","words","split","word","escapeRegExpChars","regexp","RegExp","join","tokens","match","exec","before","slice","push","rest","replace","isDark","placeholder","leftIcon","margin","className","minimal","popoverClassName","dense","propTypes","oneOf","onClick","func","bool","any","loading"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA;;AACA,SAASC,MAAM,IAAIC,YAAnB,QAAuC,qBAAvC;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,KAAP,MAAkB,+BAAlB;AACA,OAAOC,UAAP,MAAuB,gDAAvB;AACA,OAAOC,UAAP,MAAuB,gDAAvB;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,SAASC,YAAT,QAA6B,iBAA7B;AAEA,eAAe,SAASZ,MAAT,CAAgBa,KAAhB,EAAuB;AAAA,sBAchCA,KAdgC,CAElCC,IAFkC;AAAA,QAElCA,IAFkC,4BAE3B,KAF2B;AAAA,sBAchCD,KAdgC,CAGlCE,IAHkC;AAAA,QAGlCA,IAHkC,4BAG3B,QAH2B;AAAA,uBAchCF,KAdgC,CAIlCG,KAJkC;AAAA,QAIlCA,KAJkC,6BAI1B,SAJ0B;AAAA,0BAchCH,KAdgC,CAKlCI,QALkC;AAAA,QAKlCA,QALkC,gCAKvB,OALuB;AAAA,QAMlCC,IANkC,GAchCL,KAdgC,CAMlCK,IANkC;AAAA,QAOlCC,IAPkC,GAchCN,KAdgC,CAOlCM,IAPkC;AAAA,QAQlCC,WARkC,GAchCP,KAdgC,CAQlCO,WARkC;AAAA,QASlCC,WATkC,GAchCR,KAdgC,CASlCQ,WATkC;AAAA,QAUlCC,gBAVkC,GAchCT,KAdgC,CAUlCS,gBAVkC;AAAA,QAWlCC,KAXkC,GAchCV,KAdgC,CAWlCU,KAXkC;AAAA,QAYlCC,UAZkC,GAchCX,KAdgC,CAYlCW,UAZkC;AAAA,QAa/BC,SAb+B,4BAchCZ,KAdgC;;AAAA,0BAgBZjB,KAAK,CAAC8B,QAAN,CAAeH,KAAK,CAAC,CAAD,CAApB,CAhBY;AAAA;AAAA,QAgB7BI,IAhB6B;AAAA,QAgBvBC,OAhBuB;;AAkBpC,QAAMC,UAAU,GAAI,CAClBF,IADkB,EAElB;AAAEG,IAAAA,WAAF;AAAeC,IAAAA,SAAf;AAA0BC,IAAAA;AAA1B,GAFkB,KAGf;AACH,QAAI,CAACD,SAAS,CAACE,gBAAf,EAAiC;AAC/B,aAAO,IAAP;AACD;;AACD,UAAMC,IAAI,aAAMP,IAAI,CAACQ,EAAX,eAAkBR,IAAI,CAACS,KAAvB,CAAV;AACA,WACE,oBAAC,QAAD;AACE,MAAA,IAAI,EAAEtB,IADR;AAEE,MAAA,IAAI,EAAEC,IAFR;AAGE,MAAA,KAAK,EAAEC,KAHT;AAIE,MAAA,MAAM,EAAEe,SAAS,CAACM,MAJpB;AAKE,MAAA,QAAQ,EAAEN,SAAS,CAACd,QALtB;AAME,MAAA,KAAK,EAAEU,IAAI,CAACW,KAAL,GAAaX,IAAI,CAACW,KAAL,CAAWC,QAAX,EAAb,GAAqC,IAN9C;AAOE,MAAA,GAAG,EAAEZ,IAAI,CAACQ,EAPZ;AAQE,MAAA,OAAO,EAAEL,WARX;AASE,MAAA,IAAI,EAAEU,aAAa,CAACN,IAAD,EAAOF,KAAP,CATrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAaD,GArBD;;AAuBA,QAAMS,cAAc,GAAG,CAAC;AAAElB,IAAAA,KAAF;AAASmB,IAAAA,cAAT;AAAyBV,IAAAA,KAAzB;AAAgCH,IAAAA;AAAhC,GAAD,KAAkD;AACvE,UAAMc,aAAa,GAAGpB,KAAK,CAACqB,GAAN,CAAUf,UAAV,EAAsBgB,MAAtB,CAA6BlB,IAAI,IAAIA,IAAI,IAAI,IAA7C,CAAtB;AACA,WACE,oBAAC,IAAD;AACE,MAAA,IAAI,EAAEb,IADR;AAEE,MAAA,IAAI,EAAEC,IAAI,KAAK,UAAT,GAAsB,QAAtB,GAAiCA,IAFzC;AAGE,MAAA,KAAK,EAAEC,KAHT;AAIE,MAAA,KAAK,EAAE0B,cAJT;AAKE,MAAA,QAAQ,EAAEzB,QALZ;AAME,MAAA,KAAK,EAAE;AAAE6B,QAAAA,SAAS,EAAE,OAAb;AAAsBC,QAAAA,QAAQ,EAAE;AAAhC,OANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQIJ,aAAa,CAACK,MAAd,GAAuB,CAAvB,IACA,oBAAC,QAAD;AACE,MAAA,IAAI,EAAElC,IADR;AAEE,MAAA,IAAI,EAAEC,IAFR;AAGE,MAAA,KAAK,EAAEC,KAHT;AAIE,MAAA,QAAQ,EAAE,IAJZ;AAKE,MAAA,IAAI,kCAA0BgB,KAA1B,OALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,EAiBGW,aAjBH,CADF;AAqBD,GAvBD;;AAyBA,QAAMM,UAAU,GAAG,CAACjB,KAAD,EAAQL,IAAR,KAAiB;AAClC,WACE,UAAGA,IAAI,CAACQ,EAAR,eAAeR,IAAI,CAACS,KAAL,CAAWc,WAAX,EAAf,cAA2CvB,IAAI,CAACW,KAAhD,EAAwDa,OAAxD,CACEnB,KAAK,CAACkB,WAAN,EADF,KAEK,CAHP;AAKD,GAND;;AAQA,QAAMV,aAAa,GAAG,CAACN,IAAD,EAAOF,KAAP,KAAiB;AACrC,QAAIoB,SAAS,GAAG,CAAhB;AACA,UAAMC,KAAK,GAAGrB,KAAK,CAChBsB,KADW,CACL,KADK,EAEXT,MAFW,CAEHU,IAAD,IAAUA,IAAI,CAACP,MAAL,GAAc,CAFpB,EAGXJ,GAHW,CAGPY,iBAHO,CAAd;;AAIA,QAAIH,KAAK,CAACL,MAAN,KAAiB,CAArB,EAAwB;AACtB,aAAO,CAACd,IAAD,CAAP;AACD;;AACD,UAAMuB,MAAM,GAAG,IAAIC,MAAJ,CAAWL,KAAK,CAACM,IAAN,CAAW,GAAX,CAAX,EAA4B,IAA5B,CAAf;AACA,UAAMC,MAAM,GAAG,EAAf;;AACA,WAAO,IAAP,EAAa;AACX,YAAMC,KAAK,GAAGJ,MAAM,CAACK,IAAP,CAAY5B,IAAZ,CAAd;;AACA,UAAI,CAAC2B,KAAL,EAAY;AACV;AACD;;AACD,YAAMb,MAAM,GAAGa,KAAK,CAAC,CAAD,CAAL,CAASb,MAAxB;AACA,YAAMe,MAAM,GAAG7B,IAAI,CAAC8B,KAAL,CAAWZ,SAAX,EAAsBK,MAAM,CAACL,SAAP,GAAmBJ,MAAzC,CAAf;;AACA,UAAIe,MAAM,CAACf,MAAP,GAAgB,CAApB,EAAuB;AACrBY,QAAAA,MAAM,CAACK,IAAP,CAAYF,MAAZ;AACD;;AACDX,MAAAA,SAAS,GAAGK,MAAM,CAACL,SAAnB;AACAQ,MAAAA,MAAM,CAACK,IAAP,CAAY;AAAQ,QAAA,GAAG,EAAEb,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyBS,KAAK,CAAC,CAAD,CAA9B,CAAZ;AACD;;AACD,UAAMK,IAAI,GAAGhC,IAAI,CAAC8B,KAAL,CAAWZ,SAAX,CAAb;;AACA,QAAIc,IAAI,CAAClB,MAAL,GAAc,CAAlB,EAAqB;AACnBY,MAAAA,MAAM,CAACK,IAAP,CAAYC,IAAZ;AACD;;AACD,WAAON,MAAP;AACD,GA7BD;;AA+BA,QAAMJ,iBAAiB,GAAGtB,IAAI,IAAI;AAChC,WAAOA,IAAI,CAACiC,OAAL,CAAa,6BAAb,EAA4C,MAA5C,CAAP;AACD,GAFD;;AAIA,SACE,oBAAC,YAAD,CAAc,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KACC,oBAAC,YAAD;AACE,IAAA,IAAI,EAAEtD,IAAI,KAAK,OAAT,GAAmB,OAAnB,GAA6B,SADrC;AAEE,IAAA,IAAI,EAAEC,IAFR;AAGE,IAAA,KAAK,EAAEC,KAHT;AAIE,IAAA,IAAI,EAAEG,IAJR,CAKE;AALF;AAME,IAAA,QAAQ,EAAEF,QANZ;AAOE,IAAA,UAAU,EAAEO,UAPd;AAQE,IAAA,gBAAgB,EAAEF,gBARpB;AASE,IAAA,aAAa,EAAE2B,UATjB;AAUE,IAAA,YAAY,EAAEpB,UAVhB;AAWE,IAAA,gBAAgB,EAAEY,cAXpB;AAYE,IAAA,YAAY,EAAEb,OAZhB;AAaE,IAAA,KAAK,EAAEL,KAbT;AAcE,IAAA,UAAU,EAAE;AACV8C,MAAAA,WAAW,EAAE,EADH;AAEVlD,MAAAA,IAAI,EAAE,IAFI;AAGVmD,MAAAA,QAAQ,EACN,oBAAC,IAAD;AACE,QAAA,IAAI,EAAE,QADR;AAEE,QAAA,QAAQ,EAAExD,IAAI,KAAK,OAAT,GAAmB,EAAnB,GAAwB,EAFpC;AAGE,QAAA,SAAS,EAAEL,UAAU,CAAC,cAAD,CAHvB;AAIE,QAAA,KAAK,EAAEK,IAAI,KAAK,OAAT,GAAmB;AAAEyD,UAAAA,MAAM,EAAE;AAAV,SAAnB,GAA0C;AAAEA,UAAAA,MAAM,EAAE;AAAV,SAJnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJQ;AAUVC,MAAAA,SAAS,EAAE1E,EAAE,CACXU,UAAU,CAACM,IAAD,CADC,EAEXL,UAAU,CAACM,IAAD,CAFC,EAGXR,KAAK,CAACS,KAAD,CAHM;AAVH,KAdd;AA8BE,IAAA,YAAY,EAAE;AACZyD,MAAAA,OAAO,EAAE,IADG;AAEZC,MAAAA,gBAAgB,EAAE5E,EAAE,CAClBQ,IAAI,CAAC,gBAAD,CADc,EAElBkB,UAAU,IAAIlB,IAAI,CAAC,2BAAD,CAFA,EAGlBK,QAAQ,CAACI,IAAD,CAHU,EAIlBL,QAAQ,CAACI,IAAD,CAJU,EAKlBP,KAAK,CAACS,KAAD,CALa;AAFR;AA9BhB,KAwCMS,SAxCN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA0CE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAEkD,KAAK,GAAG,OAAH,GAAa,SAD1B;AAEE,IAAA,IAAI,EAAE5D,IAFR;AAGE,IAAA,KAAK,EAAEC,KAHT;AAIE,IAAA,IAAI,EAAEG,IAJR;AAKE,IAAA,IAAI,EAAED,IALR;AAME,IAAA,IAAI,EAAES,IAAI,CAACS,KAAL,IAAcT,IAAI,CAACW,KAAL,eAAkBX,IAAI,CAACW,KAAvB,SAAkC,EAAhD,CANR;AAOE,IAAA,QAAQ,EAAErB,QAPZ;AAQE,IAAA,SAAS,EAAC,YARZ;AASE,IAAA,SAAS,EAAEnB,EAAE,CACXqB,IAAI,IAAIb,IAAI,CAAC,mBAAD,CADD,EAEXc,WAAW,IAAId,IAAI,CAAC,qBAAD,CAFR,CATf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1CF,CAFJ,CADF;AA+DD;AAEDN,MAAM,CAAC4E,SAAP,GAAmB;AACjB;;;;;AAKA9D,EAAAA,IAAI,EAAEf,SAAS,CAAC8E,KAAV,CAAgB,CAAC,SAAD,EAAY,MAAZ,EAAoB,QAApB,EAA8B,QAA9B,EAAwC,MAAxC,CAAhB,CANW;;AAOjB;;;;;AAKA9D,EAAAA,IAAI,EAAEhB,SAAS,CAAC8E,KAAV,CAAgB,CAAC,QAAD,EAAW,MAAX,EAAmB,QAAnB,EAA6B,UAA7B,EAAyC,QAAzC,CAAhB,CAZW;;AAajB;;;;;AAKA7D,EAAAA,KAAK,EAAEjB,SAAS,CAAC8E,KAAV,CAAgB,CACrB,SADqB,EAErB,SAFqB,EAGrB,SAHqB,EAIrB,QAJqB,EAKrB,SALqB,EAMrB,aANqB,EAOrB,aAPqB,EAQrB,YARqB,EASrB,aATqB,CAAhB,CAlBU;;AA6BjB;;;AAGAC,EAAAA,OAAO,EAAE/E,SAAS,CAACgF,IAhCF;;AAiCjB;;;AAGA5D,EAAAA,IAAI,EAAEpB,SAAS,CAACiF,IApCC;;AAqCjB;;;AAGA9D,EAAAA,IAAI,EAAEnB,SAAS,CAACkF,GAxCC;;AAyCjB;;;;AAIAC,EAAAA,OAAO,EAAEnF,SAAS,CAACiF,IA7CF;;AA8CjB;;;AAGA/D,EAAAA,QAAQ,EAAElB,SAAS,CAACiF,IAjDH;;AAkDjB;;;AAGA5D,EAAAA,WAAW,EAAErB,SAAS,CAACiF,IArDN;;AAsDjB;;;AAGAxD,EAAAA,UAAU,EAAEzB,SAAS,CAACiF;AAzDL,CAAnB","sourcesContent":["import React, { useRef } from \"react\";\r\nimport cx from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n/**Import core component (variable)*/\r\nimport { Select as SelectSource } from \"@blueprintjs/select\";\r\nimport { Icon } from \"@blueprintjs/core\";\r\nimport Button from \"../../core/Button\";\r\nimport Menu from \"../../core/Menu\";\r\nimport MenuItem from \"../../core/Menu/MenuItem\";\r\nimport View from \"./_view.module.css\";\r\nimport Color from \"../../styles/color.module.css\";\r\nimport SearchType from \"../../core/Inputs/SearchInput/_type.module.css\";\r\nimport SearchView from \"../../core/Inputs/SearchInput/_view.module.css\";\r\nimport MenuType from \"../../core/Menu/_type.module.css\";\r\nimport MenuView from \"../../core/Menu/_view.module.css\";\r\nimport { ThemeContext } from \"../ThemeContext\";\r\n\r\nexport default function Select(props) {\r\n  const {\r\n    type = \"def\",\r\n    view = \"filled\",\r\n    color = \"default\",\r\n    disabled = \"false\",\r\n    icon,\r\n    fill,\r\n    centerAlign,\r\n    customWidth,\r\n    matchTargetWidth,\r\n    items,\r\n    filterable,\r\n    ...restProps\r\n  } = props;\r\n\r\n  const [item, setItem] = React.useState(items[0]);\r\n\r\n  const renderItem  = (\r\n    item,\r\n    { handleClick, modifiers, query }\r\n  ) => {\r\n    if (!modifiers.matchesPredicate) {\r\n      return null;\r\n    }\r\n    const text = `${item.id}. ${item.title}`;\r\n    return (\r\n      <MenuItem\r\n        type={type}\r\n        view={view}\r\n        color={color}\r\n        active={modifiers.active}\r\n        disabled={modifiers.disabled}\r\n        label={item.label ? item.label.toString() : null}\r\n        key={item.id}\r\n        onClick={handleClick}\r\n        text={highlightText(text, query)}\r\n      />\r\n    );\r\n  };\r\n  \r\n  const renderMenuList = ({ items, itemsParentRef, query, renderItem }) => {\r\n    const renderedItems = items.map(renderItem).filter(item => item != null);\r\n    return (\r\n      <Menu\r\n        type={type}\r\n        view={view === \"outlined\" ? \"raised\" : view}\r\n        color={color}\r\n        ulRef={itemsParentRef}\r\n        disabled={disabled}\r\n        style={{ maxHeight: \"390px\", overflow: \"auto\" }}\r\n      >\r\n        { renderedItems.length < 1 && \r\n          <MenuItem\r\n            type={type}\r\n            view={view}\r\n            color={color}\r\n            disabled={true}\r\n            text={`No results matching \"${query}\"`}\r\n          />\r\n        }\r\n        {renderedItems}\r\n      </Menu>\r\n    );\r\n  };\r\n  \r\n  const filterItem = (query, item) => {\r\n    return (\r\n      `${item.id}. ${item.title.toLowerCase()} ${item.label}`.indexOf(\r\n        query.toLowerCase()\r\n      ) >= 0\r\n    );\r\n  };\r\n  \r\n  const highlightText = (text, query) => {\r\n    let lastIndex = 0;\r\n    const words = query\r\n      .split(/\\s+/)\r\n      .filter((word) => word.length > 0)\r\n      .map(escapeRegExpChars);\r\n    if (words.length === 0) {\r\n      return [text];\r\n    }\r\n    const regexp = new RegExp(words.join(\"|\"), \"gi\");\r\n    const tokens = [];\r\n    while (true) {\r\n      const match = regexp.exec(text);\r\n      if (!match) {\r\n        break;\r\n      }\r\n      const length = match[0].length;\r\n      const before = text.slice(lastIndex, regexp.lastIndex - length);\r\n      if (before.length > 0) {\r\n        tokens.push(before);\r\n      }\r\n      lastIndex = regexp.lastIndex;\r\n      tokens.push(<strong key={lastIndex}>{match[0]}</strong>);\r\n    }\r\n    const rest = text.slice(lastIndex);\r\n    if (rest.length > 0) {\r\n      tokens.push(rest);\r\n    }\r\n    return tokens;\r\n  }\r\n  \r\n  const escapeRegExpChars = text => {\r\n    return text.replace(/([.*+?^=!:${}()|\\[\\]\\/\\\\])/g, \"\\\\$1\");\r\n  }\r\n\r\n  return (\r\n    <ThemeContext.Consumer>\r\n      {({ isDark }) => (\r\n        <SelectSource\r\n          type={type === \"dense\" ? \"dense\" : \"default\"}\r\n          view={view}\r\n          color={color}\r\n          fill={fill}\r\n          // dense={dense}\r\n          disabled={disabled}\r\n          filterable={filterable}\r\n          matchTargetWidth={matchTargetWidth}\r\n          itemPredicate={filterItem}\r\n          itemRenderer={renderItem}\r\n          itemListRenderer={renderMenuList}\r\n          onItemSelect={setItem}\r\n          items={items}\r\n          inputProps={{\r\n            placeholder: '',\r\n            fill: true,\r\n            leftIcon:\r\n              <Icon\r\n                icon={\"search\"}\r\n                iconSize={type === \"dense\" ? 16 : 20}\r\n                className={SearchView[\"searchButton\"]}\r\n                style={type === \"dense\" ? { margin: \"0.4rem\" } : { margin: \"0.65rem\" }}\r\n              />,\r\n            className: cx(\r\n              SearchType[type],\r\n              SearchView[view],\r\n              Color[color]\r\n            )\r\n          }}\r\n          popoverProps={{\r\n            minimal: true,\r\n            popoverClassName: cx(\r\n              View[\"select-popover\"],\r\n              filterable && View[\"select-popover-filterable\"],\r\n              MenuView[view],\r\n              MenuType[type],\r\n              Color[color]\r\n            )\r\n          }}\r\n          {...restProps}\r\n        >\r\n          <Button\r\n            type={dense ? \"dense\" : \"default\"}\r\n            view={view}\r\n            color={color}\r\n            fill={fill}\r\n            icon={icon}\r\n            text={item.title + (item.label ? ` (${item.label})` : '')}\r\n            disabled={disabled}\r\n            rightIcon=\"caret-down\"\r\n            className={cx(\r\n              fill && View[\"button-fill-width\"],\r\n              centerAlign && View[\"button-center-align\"]\r\n            )}\r\n          />\r\n        </SelectSource>\r\n      )}\r\n    </ThemeContext.Consumer>\r\n  );\r\n}\r\n\r\nSelect.propTypes = {\r\n  /**\r\n   `The type of the component.\r\n   * Variants: `card` `action` `circle` `icon`\r\n   * Default value (if undefined): `default` `\r\n   */\r\n  type: PropTypes.oneOf([\"default\", \"card\", \"action\", \"circle\", \"icon\"]),\r\n  /**\r\n   ` The view of the component.\r\n   * Variants: `flat` `smooth` `outlined` `raised`\r\n   * Default value (if undefined): `filled` `\r\n   */\r\n  view: PropTypes.oneOf([\"filled\", \"flat\", \"smooth\", \"outlined\", \"raised\"]),\r\n  /**\r\n  ` The color of the component.\r\n   * Variants: `primary` `warning` `danger` `success` `primaryAlt` `warningAlt` `dangerAlt` `successAlt`\r\n   * Default value (if undefined): `default` `\r\n   */\r\n  color: PropTypes.oneOf([\r\n    \"default\",\r\n    \"primary\",\r\n    \"warning\",\r\n    \"danger\",\r\n    \"success\",\r\n    \"primary_alt\",\r\n    \"warning_alt\",\r\n    \"danger_alt\",\r\n    \"success_alt\"\r\n  ]),\r\n  /**\r\n   * Click event handler.\r\n   */\r\n  onClick: PropTypes.func,\r\n  /**\r\n   * Whether this component should expand to fill its container.\r\n   */\r\n  fill: PropTypes.bool,\r\n  /**\r\n   * Name of a Blueprint UI icon (or an icon element) to render before the text.\r\n   */\r\n  icon: PropTypes.any,\r\n  /**\r\n   * If set to `true`, the button will display a centered loading spinner instead of its contents.\r\n   * The width of the button is not affected by the value of this prop.\r\n   */\r\n  loading: PropTypes.bool,\r\n  /**\r\n   * If `true`, the button will be disabled.\r\n   */\r\n  disabled: PropTypes.bool,\r\n  /**\r\n   * Whether target button text should be centerd\r\n   */\r\n  centerAlign: PropTypes.bool,\r\n  /**\r\n   * Whether list should be filterable\r\n   */\r\n  filterable: PropTypes.bool\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}