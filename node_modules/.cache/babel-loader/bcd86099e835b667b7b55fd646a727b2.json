{"ast":null,"code":"import _slicedToArray from \"/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/src/@candy-ui/demo/Toast/ComponentTemplate.jsx\";\nimport React from \"react\";\n/* Import component props */\n\nimport PropsGroup from \"./PropsGroup.jsx\";\nimport SelectShapeGroup from \"../SelectShapeGroup.jsx\";\nimport SelectColorGroup from \"../SelectColorGroup.jsx\";\nimport SelectViewGroup from \"../SelectViewGroup.jsx\";\nimport DemoAppStyle from \"../styles/style.module.css\";\nimport { Icon } from \"@blueprintjs/core\";\nimport Typography from \"../../core/Typography\";\nimport { SidebarContainer } from \"../components/SidebarContainer\";\n/**Import demo component body*/\n\nimport { DEMO } from \"./DemoComponent.jsx\";\n/**Import usage & API  of component*/\n\nimport { API } from \"./api.jsx\";\n/**SETTINGS OF THIS DEMO*/\n\n/*Set component data (variables)*/\n\nconst Props = {\n  name: \"Toaster\",\n  desc: \"A toast is a lightweight, ephemeral notice from an application in direct response to a user's action.\",\n\n  /**default value*/\n  type: \"def\",\n  view: \"outlined\",\n  color: \"primary\"\n};\n/**Available variants of TYPES & VIEWS (variables)*/\n\nconst shapes = [[\"Default\", \"def\"]];\nconst views = [[\"Filled\", \"filled\"], [\"Smooth\", \"smooth\"], [\"Outlined\", \"outlined\"], [\"Raised\", \"raised\"]];\n/**END OF SETTINGS*/\n\n/**Demo template*/\n\nconst Content = props => {\n  /*Set states of props*/\n  const _React$useState = React.useState(true),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        isIcon = _React$useState2[0],\n        setIcon = _React$useState2[1];\n\n  const _React$useState3 = React.useState(false),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        isLink = _React$useState4[0],\n        setLink = _React$useState4[1];\n\n  const _React$useState5 = React.useState(true),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        isClose = _React$useState6[0],\n        setClose = _React$useState6[1];\n\n  const _React$useState7 = React.useState(Props.type),\n        _React$useState8 = _slicedToArray(_React$useState7, 2),\n        shape = _React$useState8[0],\n        setShape = _React$useState8[1];\n\n  const _React$useState9 = React.useState(Props.view),\n        _React$useState10 = _slicedToArray(_React$useState9, 2),\n        view = _React$useState10[0],\n        setView = _React$useState10[1];\n\n  const _React$useState11 = React.useState(Props.color),\n        _React$useState12 = _slicedToArray(_React$useState11, 2),\n        color = _React$useState12[0],\n        setColor = _React$useState12[1];\n\n  React.useEffect(() => {\n    document.title = \"React Design System: component \".concat(Props.name);\n    document.getElementsByTagName(\"META\")[\"description\"].content = \"Demo \".concat(Props.name, \" component for React Candy UI Design System with possible props. \").concat(Props.desc);\n  });\n  const DemoToast = [{\n    message: \"Just a toast!\",\n    icon: isIcon ? React.createElement(Icon, {\n      icon: \"info-sign\",\n      iconSize: 24,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }) : null,\n    timeout: 5000,\n    action: isLink ? {\n      href: \"https://gum.co/figma2react\",\n      target: \"_blank\",\n      text: React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Yum.\")\n    } : null\n  }, {\n    message: \"Another toast!\",\n    icon: isIcon ? React.createElement(Icon, {\n      icon: \"info-sign\",\n      iconSize: 24,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }) : null,\n    timeout: 5000,\n    action: isLink ? {\n      href: \"https://gum.co/figma2react\",\n      target: \"_blank\",\n      text: React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Yum.\")\n    } : null\n  }];\n  /** */\n\n  return React.createElement(\"div\", {\n    className: DemoAppStyle[\"content-container\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: DemoAppStyle[\"content-component\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    type: \"h3\",\n    className: \"demo-name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, Props.name), React.createElement(Typography, {\n    type: \"h6\",\n    colorStep: 60,\n    className: \"demo-desc\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, Props.desc), React.createElement(\"div\", {\n    className: \"demo-content-component\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(DEMO, {\n    view: view,\n    color: color,\n    isIcon: isIcon,\n    DemoToast: DemoToast,\n    isClose: isClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"BodyBig demo-api\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(API, {\n    name: Props.name,\n    view: view,\n    color: color,\n    isIcon: isIcon,\n    DemoToast: DemoToast,\n    isClose: isClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }))), React.createElement(SidebarContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: DemoAppStyle[\"right_sidebar\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: DemoAppStyle[\"demo-props\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(PropsGroup, {\n    isIcon: isIcon,\n    setIcon: setIcon,\n    isLink: isLink,\n    setLink: setLink,\n    isClose: isClose,\n    setClose: setClose,\n    margin: \"4px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }), React.createElement(SelectShapeGroup, {\n    shape: shape,\n    setShape: setShape,\n    shapes: shapes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }), React.createElement(SelectViewGroup, {\n    view: view,\n    setView: setView,\n    views: views,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }), React.createElement(SelectColorGroup, {\n    color: color,\n    setColor: setColor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  })))));\n};\n\nexport default Content;","map":{"version":3,"sources":["/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/src/@candy-ui/demo/Toast/ComponentTemplate.jsx"],"names":["React","PropsGroup","SelectShapeGroup","SelectColorGroup","SelectViewGroup","DemoAppStyle","Icon","Typography","SidebarContainer","DEMO","API","Props","name","desc","type","view","color","shapes","views","Content","props","useState","isIcon","setIcon","isLink","setLink","isClose","setClose","shape","setShape","setView","setColor","useEffect","document","title","getElementsByTagName","content","DemoToast","message","icon","timeout","action","href","target","text"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\n/* Import component props */\r\nimport PropsGroup from \"./PropsGroup.jsx\";\r\nimport SelectShapeGroup from \"../SelectShapeGroup.jsx\";\r\nimport SelectColorGroup from \"../SelectColorGroup.jsx\";\r\nimport SelectViewGroup from \"../SelectViewGroup.jsx\";\r\nimport DemoAppStyle from \"../styles/style.module.css\";\r\nimport { Icon } from \"@blueprintjs/core\";\r\n\r\nimport Typography from \"../../core/Typography\";\r\nimport { SidebarContainer } from \"../components/SidebarContainer\";\r\n\r\n/**Import demo component body*/\r\nimport { DEMO } from \"./DemoComponent.jsx\";\r\n/**Import usage & API  of component*/\r\nimport { API } from \"./api.jsx\";\r\n\r\n/**SETTINGS OF THIS DEMO*/\r\n/*Set component data (variables)*/\r\nconst Props = {\r\n  name: \"Toaster\",\r\n  desc:\r\n    \"A toast is a lightweight, ephemeral notice from an application in direct response to a user's action.\",\r\n  /**default value*/\r\n  type: \"def\",\r\n  view: \"outlined\",\r\n  color: \"primary\"\r\n};\r\n/**Available variants of TYPES & VIEWS (variables)*/\r\nconst shapes = [[\"Default\", \"def\"]];\r\nconst views = [\r\n  [\"Filled\", \"filled\"],\r\n  [\"Smooth\", \"smooth\"],\r\n  [\"Outlined\", \"outlined\"],\r\n  [\"Raised\", \"raised\"]\r\n];\r\n/**END OF SETTINGS*/\r\n\r\n/**Demo template*/\r\nconst Content = props => {\r\n  /*Set states of props*/\r\n  const [isIcon, setIcon] = React.useState(true);\r\n  const [isLink, setLink] = React.useState(false);\r\n  const [isClose, setClose] = React.useState(true);\r\n\r\n  const [shape, setShape] = React.useState(Props.type);\r\n  const [view, setView] = React.useState(Props.view);\r\n  const [color, setColor] = React.useState(Props.color);\r\n\r\n  React.useEffect(() => {\r\n    document.title = `React Design System: component ${Props.name}`;\r\n    document.getElementsByTagName(\"META\")[\"description\"].content = `Demo ${\r\n      Props.name\r\n    } component for React Candy UI Design System with possible props. ${\r\n      Props.desc\r\n    }`;\r\n  });\r\n\r\n  const DemoToast = [\r\n    {\r\n      message: \"Just a toast!\",\r\n      icon: isIcon ? <Icon icon=\"info-sign\" iconSize={24} /> : null,\r\n      timeout: 5000,\r\n      action: isLink\r\n        ? {\r\n            href: \"https://gum.co/figma2react\",\r\n            target: \"_blank\",\r\n            text: <strong>Yum.</strong>\r\n          }\r\n        : null\r\n    },\r\n    {\r\n      message: \"Another toast!\",\r\n      icon: isIcon ? <Icon icon=\"info-sign\" iconSize={24} /> : null,\r\n      timeout: 5000,\r\n      action: isLink\r\n        ? {\r\n            href: \"https://gum.co/figma2react\",\r\n            target: \"_blank\",\r\n            text: <strong>Yum.</strong>\r\n          }\r\n        : null\r\n    },\r\n  ];\r\n\r\n  /** */\r\n  return (\r\n    <div className={DemoAppStyle[\"content-container\"]}>\r\n      <div className={DemoAppStyle[\"content-component\"]}>\r\n        {/*COMPONENT*/}\r\n        {/*NAME*/}\r\n        <Typography type=\"h3\" className=\"demo-name\">\r\n          {Props.name}\r\n        </Typography>\r\n        {/*Description */}\r\n        <Typography type=\"h6\" colorStep={60} className=\"demo-desc\">\r\n          {Props.desc}\r\n        </Typography>\r\n        {/*Content*/}\r\n        <div className=\"demo-content-component\">\r\n          <DEMO\r\n            view={view}\r\n            color={color}\r\n            isIcon={isIcon}\r\n            DemoToast={DemoToast}\r\n            isClose={isClose}\r\n          />\r\n        </div>\r\n        <div className=\"BodyBig demo-api\">\r\n          <API\r\n            name={Props.name}\r\n            view={view}\r\n            color={color}\r\n            isIcon={isIcon}\r\n            DemoToast={DemoToast}\r\n            isClose={isClose}\r\n          />\r\n        </div>\r\n      </div>\r\n      {/* Props*/}\r\n      <SidebarContainer>\r\n        <div className={DemoAppStyle[\"right_sidebar\"]}>\r\n          {/**Set this Props component */}\r\n          <div className={DemoAppStyle[\"demo-props\"]}>\r\n            <PropsGroup\r\n              isIcon={isIcon}\r\n              setIcon={setIcon}\r\n              isLink={isLink}\r\n              setLink={setLink}\r\n              isClose={isClose}\r\n              setClose={setClose}\r\n              margin=\"4px\"\r\n            />\r\n            <SelectShapeGroup\r\n              shape={shape}\r\n              setShape={setShape}\r\n              shapes={shapes}\r\n            />\r\n            <SelectViewGroup view={view} setView={setView} views={views} />\r\n            <SelectColorGroup color={color} setColor={setColor} />\r\n          </div>\r\n        </div>\r\n      </SidebarContainer>\r\n      {/***** */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Content;\r\n"]},"metadata":{},"sourceType":"module"}