{"ast":null,"code":"import _slicedToArray from \"/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/src/@candy-ui/core/Select/Select.jsx\";\nimport React from \"react\";\nimport cx from \"classnames\";\nimport PropTypes from \"prop-types\";\n/**Import core component (variable)*/\n\nimport Button from \"../../core/Button\";\nimport Menu from \"../../core/Menu\";\nimport MenuItem from \"../../core/Menu/MenuItem\";\nimport { Select as SelectSource } from \"@blueprintjs/select\";\nimport Type from \"./_type.module.css\";\nimport View from \"./_view.module.css\";\nimport Color from \"../../styles/color.module.css\";\nimport { ThemeContext } from \"../ThemeContext\";\nexport default function Select(props) {\n  const _props$type = props.type,\n        type = _props$type === void 0 ? \"default\" : _props$type,\n        _props$view = props.view,\n        view = _props$view === void 0 ? \"filled\" : _props$view,\n        _props$color = props.color,\n        color = _props$color === void 0 ? \"default\" : _props$color,\n        _props$disabled = props.disabled,\n        disabled = _props$disabled === void 0 ? \"false\" : _props$disabled,\n        _props$dense = props.dense,\n        dense = _props$dense === void 0 ? \"true\" : _props$dense,\n        items = props.items,\n        restProps = _objectWithoutProperties(props, [\"type\", \"view\", \"color\", \"disabled\", \"dense\", \"items\"]);\n\n  const _React$useState = React.useState(items[0]),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        item = _React$useState2[0],\n        setItem = _React$useState2[1];\n\n  const renderItem = (item, {\n    handleClick,\n    modifiers,\n    query\n  }) => {\n    if (!modifiers.matchesPredicate) {\n      return null;\n    }\n\n    const text = \"\".concat(item.rank, \". \").concat(item.title);\n    return React.createElement(MenuItem, {\n      type: type,\n      view: view,\n      color: color,\n      dense: dense,\n      active: modifiers.active,\n      disabled: modifiers.disabled,\n      label: item.year.toString(),\n      key: item.rank,\n      onClick: handleClick,\n      text: highlightText(text, query),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    });\n  };\n\n  const renderMenuList = ({\n    items,\n    itemsParentRef,\n    query,\n    renderItem\n  }) => {\n    const renderedItems = items.map(renderItem).filter(item => item != null);\n    return React.createElement(Menu, {\n      type: type,\n      view: view,\n      color: color,\n      dense: dense,\n      ulRef: itemsParentRef,\n      disabled: disabled,\n      style: {\n        maxHeight: \"400px\",\n        overflow: \"auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, renderedItems.length < 1 && React.createElement(MenuItem, {\n      type: type,\n      view: view,\n      color: color,\n      dense: dense,\n      disabled: true,\n      text: \"No results matching \\\"\".concat(query, \"\\\"\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), renderedItems);\n  };\n\n  const filterItem = (query, item) => {\n    return \"\".concat(item.rank, \". \").concat(item.title.toLowerCase(), \" \").concat(item.year).indexOf(query.toLowerCase()) >= 0;\n  };\n\n  const highlightText = (text, query) => {\n    let lastIndex = 0;\n    const words = query.split(/\\s+/).filter(word => word.length > 0).map(escapeRegExpChars);\n\n    if (words.length === 0) {\n      return [text];\n    }\n\n    const regexp = new RegExp(words.join(\"|\"), \"gi\");\n    const tokens = [];\n\n    while (true) {\n      const match = regexp.exec(text);\n\n      if (!match) {\n        break;\n      }\n\n      const length = match[0].length;\n      const before = text.slice(lastIndex, regexp.lastIndex - length);\n\n      if (before.length > 0) {\n        tokens.push(before);\n      }\n\n      lastIndex = regexp.lastIndex;\n      tokens.push(React.createElement(\"strong\", {\n        key: lastIndex,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, match[0]));\n    }\n\n    const rest = text.slice(lastIndex);\n\n    if (rest.length > 0) {\n      tokens.push(rest);\n    }\n\n    return tokens;\n  };\n\n  const escapeRegExpChars = text => {\n    return text.replace(/([.*+?^=!:${}()|\\[\\]\\/\\\\])/g, \"\\\\$1\");\n  };\n\n  const itemSelectProps = {\n    itemPredicate: filterItem,\n    itemRenderer: renderItem,\n    itemListRenderer: renderMenuList\n  };\n  return React.createElement(ThemeContext.Consumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, ({\n    isDark\n  }) => React.createElement(SelectSource, Object.assign({\n    type: type,\n    view: view,\n    color: color,\n    dense: dense,\n    itemPredicate: filterItem,\n    itemRenderer: renderItem,\n    itemListRenderer: renderMenuList,\n    onItemSelect: setItem,\n    items: items\n  }, restProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }), React.createElement(Button, {\n    type: type,\n    view: view,\n    color: color,\n    dense: dense,\n    text: item.title,\n    disabled: disabled,\n    rightIcon: \"caret-down\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  })));\n}\nSelect.propTypes = {\n  /**\r\n   `The type of the component.\r\n   * Variants: `card` `action` `circle` `icon`\r\n   * Default value (if undefined): `default` `\r\n   */\n  type: PropTypes.oneOf([\"default\", \"card\", \"action\", \"circle\", \"icon\"]),\n\n  /**\r\n   ` The view of the component.\r\n   * Variants: `flat` `smooth` `outlined` `raised`\r\n   * Default value (if undefined): `filled` `\r\n   */\n  view: PropTypes.oneOf([\"filled\", \"flat\", \"smooth\", \"outlined\", \"raised\"]),\n\n  /**\r\n  ` The color of the component.\r\n   * Variants: `primary` `warning` `danger` `success` `primaryAlt` `warningAlt` `dangerAlt` `successAlt`\r\n   * Default value (if undefined): `default` `\r\n   */\n  color: PropTypes.oneOf([\"default\", \"primary\", \"warning\", \"danger\", \"success\", \"primary_alt\", \"warning_alt\", \"danger_alt\", \"success_alt\"]),\n\n  /**\r\n   * Click event handler.\r\n   */\n  onClick: PropTypes.func,\n\n  /**\r\n   * Whether this component should expand to fill its container.\r\n   */\n  fill: PropTypes.bool,\n\n  /**\r\n   * Name of a Blueprint UI icon (or an icon element) to render before the text.\r\n   */\n  icon: PropTypes.any,\n\n  /**\r\n   * Name of a Blueprint UI icon (or an icon element) to render after the text.\r\n   */\n  rightIcon: PropTypes.any,\n\n  /**\r\n   * If set to `true`, the button will display a centered loading spinner instead of its contents.\r\n   * The width of the button is not affected by the value of this prop.\r\n   */\n  loading: PropTypes.bool,\n\n  /**\r\n   * If `true`, the button will be disabled.\r\n   */\n  disabled: PropTypes.bool,\n\n  /**\r\n   * Dense size\r\n   */\n  dense: PropTypes.bool\n};","map":{"version":3,"sources":["/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/src/@candy-ui/core/Select/Select.jsx"],"names":["React","cx","PropTypes","Button","Menu","MenuItem","Select","SelectSource","Type","View","Color","ThemeContext","props","type","view","color","disabled","dense","items","restProps","useState","item","setItem","renderItem","handleClick","modifiers","query","matchesPredicate","text","rank","title","active","year","toString","highlightText","renderMenuList","itemsParentRef","renderedItems","map","filter","maxHeight","overflow","length","filterItem","toLowerCase","indexOf","lastIndex","words","split","word","escapeRegExpChars","regexp","RegExp","join","tokens","match","exec","before","slice","push","rest","replace","itemSelectProps","itemPredicate","itemRenderer","itemListRenderer","isDark","propTypes","oneOf","onClick","func","fill","bool","icon","any","rightIcon","loading"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport cx from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n/**Import core component (variable)*/\r\nimport Button from \"../../core/Button\";\r\nimport Menu from \"../../core/Menu\";\r\nimport MenuItem from \"../../core/Menu/MenuItem\";\r\nimport { Select as SelectSource } from \"@blueprintjs/select\";\r\n\r\nimport Type from \"./_type.module.css\";\r\nimport View from \"./_view.module.css\";\r\nimport Color from \"../../styles/color.module.css\";\r\nimport { ThemeContext } from \"../ThemeContext\";\r\n\r\nexport default function Select(props) {\r\n  const {\r\n    type = \"default\",\r\n    view = \"filled\",\r\n    color = \"default\",\r\n    disabled = \"false\",\r\n    dense = \"true\",\r\n    items,\r\n    ...restProps\r\n  } = props;\r\n\r\n  const [item, setItem] = React.useState(items[0]);\r\n\r\n  const renderItem  = (\r\n    item,\r\n    { handleClick, modifiers, query }\r\n  ) => {\r\n    if (!modifiers.matchesPredicate) {\r\n      return null;\r\n    }\r\n    const text = `${item.rank}. ${item.title}`;\r\n    return (\r\n      <MenuItem\r\n        type={type}\r\n        view={view}\r\n        color={color}\r\n        dense={dense}\r\n        active={modifiers.active}\r\n        disabled={modifiers.disabled}\r\n        label={item.year.toString()}\r\n        key={item.rank}\r\n        onClick={handleClick}\r\n        text={highlightText(text, query)}\r\n      />\r\n    );\r\n  };\r\n  \r\n  const renderMenuList = ({ items, itemsParentRef, query, renderItem }) => {\r\n    const renderedItems = items.map(renderItem).filter(item => item != null);\r\n    return (\r\n        <Menu\r\n          type={type}\r\n          view={view}\r\n          color={color}\r\n          dense={dense}\r\n          ulRef={itemsParentRef}\r\n          disabled={disabled}\r\n          style={{ maxHeight: \"400px\", overflow: \"auto\" }}\r\n        >\r\n          { renderedItems.length < 1 && \r\n            <MenuItem\r\n              type={type}\r\n              view={view}\r\n              color={color}\r\n              dense={dense}\r\n              disabled={true}\r\n              text={`No results matching \"${query}\"`}\r\n            />\r\n          }\r\n          {renderedItems}\r\n        </Menu>\r\n    );\r\n  };\r\n  \r\n  const filterItem = (query, item) => {\r\n    return (\r\n      `${item.rank}. ${item.title.toLowerCase()} ${item.year}`.indexOf(\r\n        query.toLowerCase()\r\n      ) >= 0\r\n    );\r\n  };\r\n  \r\n  const highlightText = (text, query) => {\r\n    let lastIndex = 0;\r\n    const words = query\r\n      .split(/\\s+/)\r\n      .filter((word) => word.length > 0)\r\n      .map(escapeRegExpChars);\r\n    if (words.length === 0) {\r\n      return [text];\r\n    }\r\n    const regexp = new RegExp(words.join(\"|\"), \"gi\");\r\n    const tokens = [];\r\n    while (true) {\r\n      const match = regexp.exec(text);\r\n      if (!match) {\r\n        break;\r\n      }\r\n      const length = match[0].length;\r\n      const before = text.slice(lastIndex, regexp.lastIndex - length);\r\n      if (before.length > 0) {\r\n        tokens.push(before);\r\n      }\r\n      lastIndex = regexp.lastIndex;\r\n      tokens.push(<strong key={lastIndex}>{match[0]}</strong>);\r\n    }\r\n    const rest = text.slice(lastIndex);\r\n    if (rest.length > 0) {\r\n      tokens.push(rest);\r\n    }\r\n    return tokens;\r\n  }\r\n  \r\n  const escapeRegExpChars = text => {\r\n    return text.replace(/([.*+?^=!:${}()|\\[\\]\\/\\\\])/g, \"\\\\$1\");\r\n  }\r\n  \r\n  const itemSelectProps = {\r\n    itemPredicate: filterItem,\r\n    itemRenderer: renderItem,\r\n    itemListRenderer: renderMenuList\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Consumer>\r\n      {({ isDark }) => (\r\n        <SelectSource\r\n          type={type}\r\n          view={view}\r\n          color={color}\r\n          dense={dense}\r\n          itemPredicate={filterItem}\r\n          itemRenderer={renderItem}\r\n          itemListRenderer={renderMenuList}\r\n          onItemSelect={setItem}\r\n          items={items}\r\n          {...restProps}\r\n        >\r\n          <Button\r\n            type={type}\r\n            view={view}\r\n            color={color}\r\n            dense={dense}\r\n            text={item.title}\r\n            disabled={disabled}\r\n            rightIcon=\"caret-down\"\r\n          />\r\n        </SelectSource>\r\n      )}\r\n    </ThemeContext.Consumer>\r\n  );\r\n}\r\n\r\nSelect.propTypes = {\r\n  /**\r\n   `The type of the component.\r\n   * Variants: `card` `action` `circle` `icon`\r\n   * Default value (if undefined): `default` `\r\n   */\r\n  type: PropTypes.oneOf([\"default\", \"card\", \"action\", \"circle\", \"icon\"]),\r\n  /**\r\n   ` The view of the component.\r\n   * Variants: `flat` `smooth` `outlined` `raised`\r\n   * Default value (if undefined): `filled` `\r\n   */\r\n  view: PropTypes.oneOf([\"filled\", \"flat\", \"smooth\", \"outlined\", \"raised\"]),\r\n  /**\r\n  ` The color of the component.\r\n   * Variants: `primary` `warning` `danger` `success` `primaryAlt` `warningAlt` `dangerAlt` `successAlt`\r\n   * Default value (if undefined): `default` `\r\n   */\r\n  color: PropTypes.oneOf([\r\n    \"default\",\r\n    \"primary\",\r\n    \"warning\",\r\n    \"danger\",\r\n    \"success\",\r\n    \"primary_alt\",\r\n    \"warning_alt\",\r\n    \"danger_alt\",\r\n    \"success_alt\"\r\n  ]),\r\n  /**\r\n   * Click event handler.\r\n   */\r\n  onClick: PropTypes.func,\r\n  /**\r\n   * Whether this component should expand to fill its container.\r\n   */\r\n  fill: PropTypes.bool,\r\n  /**\r\n   * Name of a Blueprint UI icon (or an icon element) to render before the text.\r\n   */\r\n  icon: PropTypes.any,\r\n  /**\r\n   * Name of a Blueprint UI icon (or an icon element) to render after the text.\r\n   */\r\n  rightIcon: PropTypes.any,\r\n  /**\r\n   * If set to `true`, the button will display a centered loading spinner instead of its contents.\r\n   * The width of the button is not affected by the value of this prop.\r\n   */\r\n  loading: PropTypes.bool,\r\n  /**\r\n   * If `true`, the button will be disabled.\r\n   */\r\n  disabled: PropTypes.bool,\r\n  /**\r\n   * Dense size\r\n   */\r\n  dense: PropTypes.bool\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}