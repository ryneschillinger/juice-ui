{"ast":null,"code":"import _objectWithoutProperties from \"/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/src/@candy-ui/core/Toast/Toaster.jsx\";\nimport React from \"react\";\nimport cx from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { Toaster as ToasterSource } from \"@blueprintjs/core\";\nimport Type from \"./_type.module.css\";\nimport View from \"./_view.module.css\";\nimport Color from \"../../styles/color.module.css\";\nimport { ThemeContext } from \"../ThemeContext\";\nexport default function Toaster(props) {\n  const _props$type = props.type,\n        type = _props$type === void 0 ? \"def\" : _props$type,\n        _props$view = props.view,\n        view = _props$view === void 0 ? \"filled\" : _props$view,\n        _props$color = props.color,\n        color = _props$color === void 0 ? \"default\" : _props$color,\n        withoutClose = props.withoutClose,\n        usePortal = props.usePortal,\n        className = props.className,\n        setRef = props.setRef,\n        restProps = _objectWithoutProperties(props, [\"type\", \"view\", \"color\", \"withoutClose\", \"usePortal\", \"className\", \"setRef\"]);\n\n  return React.createElement(ThemeContext.Consumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, ({\n    dark\n  }) => React.createElement(ToasterSource, Object.assign({\n    useporral: false\n  }, restProps, {\n    className: cx(Type[type], dark ? View[view + \"-dark\"] : View[view], Color[color], withoutClose && Type[\"no-close\"], className),\n    ref: ref => setRef(ref),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  })));\n}\nToaster.propTypes = {\n  /**\r\n   ` The view of the component.\r\n   * Variants: `filled` `smooth` `outlined` `raised`\r\n   * Default value (if undefined): `filled` `\r\n   */\n  view: PropTypes.oneOf([\"filled\", \"smooth\", \"outlined\", \"raised\"]),\n\n  /**\r\n  ` The color of the component.\r\n   * Variants: `primary` `warning` `danger` `success` `primaryAlt` `warningAlt` `dangerAlt` `successAlt`\r\n   * Default value (if undefined): `default` `\r\n   */\n  color: PropTypes.oneOf([\"default\", \"primary\", \"warning\", \"danger\", \"success\", \"primary_alt\", \"warning_alt\", \"danger_alt\", \"success_alt\"]),\n\n  /**\r\n   * Show or not Close button\r\n   */\n  withoutClose: PropTypes.bool,\n\n  /**\r\n   *Position of Toaster within its container.\r\n   */\n  position: PropTypes.oneOf([\"top\", \"top-left\", \"top-right\", \"bottom\", \"bottom-left\", \"bottom-right\"]),\n\n  /**\r\n   * Whether the toaster should be rendered into a new element attached to document.body.\r\n   * If false, then positioning will be relative to the parent element.\r\n   */\n  usePortal: PropTypes.bool,\n\n  /**\r\n   *\r\n   */\n  setRef: PropTypes.func\n};","map":{"version":3,"sources":["/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/src/@candy-ui/core/Toast/Toaster.jsx"],"names":["React","cx","PropTypes","Toaster","ToasterSource","Type","View","Color","ThemeContext","props","type","view","color","withoutClose","usePortal","className","setRef","restProps","dark","ref","propTypes","oneOf","bool","position","func"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,OAAO,IAAIC,aAApB,QAAyC,mBAAzC;AAEA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,KAAP,MAAkB,+BAAlB;AAEA,SAASC,YAAT,QAA6B,iBAA7B;AAEA,eAAe,SAASL,OAAT,CAAiBM,KAAjB,EAAwB;AAAA,sBAUjCA,KAViC,CAEnCC,IAFmC;AAAA,QAEnCA,IAFmC,4BAE5B,KAF4B;AAAA,sBAUjCD,KAViC,CAGnCE,IAHmC;AAAA,QAGnCA,IAHmC,4BAG5B,QAH4B;AAAA,uBAUjCF,KAViC,CAInCG,KAJmC;AAAA,QAInCA,KAJmC,6BAI3B,SAJ2B;AAAA,QAKnCC,YALmC,GAUjCJ,KAViC,CAKnCI,YALmC;AAAA,QAMnCC,SANmC,GAUjCL,KAViC,CAMnCK,SANmC;AAAA,QAOnCC,SAPmC,GAUjCN,KAViC,CAOnCM,SAPmC;AAAA,QAQnCC,MARmC,GAUjCP,KAViC,CAQnCO,MARmC;AAAA,QAShCC,SATgC,4BAUjCR,KAViC;;AAWrC,SACE,oBAAC,YAAD,CAAc,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC;AAAES,IAAAA;AAAF,GAAD,KACC,oBAAC,aAAD;AACA,IAAA,SAAS,EAAE;AADX,KAEMD,SAFN;AAGE,IAAA,SAAS,EAAEhB,EAAE,CACXI,IAAI,CAACK,IAAD,CADO,EAEXQ,IAAI,GAAGZ,IAAI,CAACK,IAAI,GAAG,OAAR,CAAP,GAA0BL,IAAI,CAACK,IAAD,CAFvB,EAGXJ,KAAK,CAACK,KAAD,CAHM,EAIXC,YAAY,IAAIR,IAAI,CAAC,UAAD,CAJT,EAKXU,SALW,CAHf;AAUE,IAAA,GAAG,EAAEI,GAAG,IAAIH,MAAM,CAACG,GAAD,CAVpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFJ,CADF;AAkBD;AAEDhB,OAAO,CAACiB,SAAR,GAAoB;AAClB;;;;;AAKAT,EAAAA,IAAI,EAAET,SAAS,CAACmB,KAAV,CAAgB,CAAC,QAAD,EAAW,QAAX,EAAqB,UAArB,EAAiC,QAAjC,CAAhB,CANY;;AAOlB;;;;;AAKAT,EAAAA,KAAK,EAAEV,SAAS,CAACmB,KAAV,CAAgB,CACrB,SADqB,EAErB,SAFqB,EAGrB,SAHqB,EAIrB,QAJqB,EAKrB,SALqB,EAMrB,aANqB,EAOrB,aAPqB,EAQrB,YARqB,EASrB,aATqB,CAAhB,CAZW;;AAuBlB;;;AAGAR,EAAAA,YAAY,EAAEX,SAAS,CAACoB,IA1BN;;AA2BlB;;;AAGAC,EAAAA,QAAQ,EAAErB,SAAS,CAACmB,KAAV,CAAgB,CACxB,KADwB,EAExB,UAFwB,EAGxB,WAHwB,EAIxB,QAJwB,EAKxB,aALwB,EAMxB,cANwB,CAAhB,CA9BQ;;AAsClB;;;;AAIAP,EAAAA,SAAS,EAAEZ,SAAS,CAACoB,IA1CH;;AA2ClB;;;AAGAN,EAAAA,MAAM,EAAEd,SAAS,CAACsB;AA9CA,CAApB","sourcesContent":["import React from \"react\";\r\nimport cx from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { Toaster as ToasterSource } from \"@blueprintjs/core\";\r\n\r\nimport Type from \"./_type.module.css\";\r\nimport View from \"./_view.module.css\";\r\nimport Color from \"../../styles/color.module.css\";\r\n\r\nimport { ThemeContext } from \"../ThemeContext\";\r\n\r\nexport default function Toaster(props) {\r\n  const {\r\n    type = \"def\",\r\n    view = \"filled\",\r\n    color = \"default\",\r\n    withoutClose,\r\n    usePortal,\r\n    className,\r\n    setRef,\r\n    ...restProps\r\n  } = props;\r\n  return (\r\n    <ThemeContext.Consumer>\r\n      {({ dark }) => (\r\n        <ToasterSource\r\n        useporral={false}\r\n          {...restProps}\r\n          className={cx(\r\n            Type[type],\r\n            dark ? View[view + \"-dark\"] : View[view],\r\n            Color[color],\r\n            withoutClose && Type[\"no-close\"],\r\n            className\r\n          )}\r\n          ref={ref => setRef(ref)}\r\n        />\r\n      )}\r\n    </ThemeContext.Consumer>\r\n  );\r\n}\r\n\r\nToaster.propTypes = {\r\n  /**\r\n   ` The view of the component.\r\n   * Variants: `filled` `smooth` `outlined` `raised`\r\n   * Default value (if undefined): `filled` `\r\n   */\r\n  view: PropTypes.oneOf([\"filled\", \"smooth\", \"outlined\", \"raised\"]),\r\n  /**\r\n  ` The color of the component.\r\n   * Variants: `primary` `warning` `danger` `success` `primaryAlt` `warningAlt` `dangerAlt` `successAlt`\r\n   * Default value (if undefined): `default` `\r\n   */\r\n  color: PropTypes.oneOf([\r\n    \"default\",\r\n    \"primary\",\r\n    \"warning\",\r\n    \"danger\",\r\n    \"success\",\r\n    \"primary_alt\",\r\n    \"warning_alt\",\r\n    \"danger_alt\",\r\n    \"success_alt\"\r\n  ]),\r\n  /**\r\n   * Show or not Close button\r\n   */\r\n  withoutClose: PropTypes.bool,\r\n  /**\r\n   *Position of Toaster within its container.\r\n   */\r\n  position: PropTypes.oneOf([\r\n    \"top\",\r\n    \"top-left\",\r\n    \"top-right\",\r\n    \"bottom\",\r\n    \"bottom-left\",\r\n    \"bottom-right\"\r\n  ]),\r\n  /**\r\n   * Whether the toaster should be rendered into a new element attached to document.body.\r\n   * If false, then positioning will be relative to the parent element.\r\n   */\r\n  usePortal: PropTypes.bool,\r\n  /**\r\n   *\r\n   */\r\n  setRef: PropTypes.func\r\n};\r\n"]},"metadata":{},"sourceType":"module"}