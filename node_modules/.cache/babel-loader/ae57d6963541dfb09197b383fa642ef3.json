{"ast":null,"code":"var _jsxFileName = \"/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/src/@candy-ui/demo/docs/colors/demo.jsx\";\nimport React from \"react\";\nimport cx from \"classnames\";\nimport Typo from \"../../../core/Typography\";\nimport { Palette } from \"./palette\";\nimport styles from \"./style.module.css\";\n\nconst DemoColors = props => {\n  return React.createElement(\"div\", {\n    className: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(Typo, {\n    type: \"h3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"Colors\"), React.createElement(Typo, {\n    type: \"h6\",\n    colorStep: 60,\n    className: styles.sub_title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"Flexible palette based on 12 color tokens\"), React.createElement(Typo, {\n    large: true,\n    className: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Black, white and everything in between. The gray scale should be used for the main UI frame: containers, headers, sections, boxes, etc. If you need to call attention to a particular element (buttons, icons, tooltips, etc.), use one of the core colors.\"), React.createElement(\"div\", {\n    className: styles.main_colors,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.colors_array,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(Palette, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: styles.space_between,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: styles.colors_array,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(Palette, {\n    alias: \"primary\",\n    color: \"blue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }))), React.createElement(Typo, {\n    type: \"h4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Action Colors\"), React.createElement(Typo, {\n    type: \"h6\",\n    colorStep: 60,\n    className: styles.sub_title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Use green for successfull experience, yellow for attention and red for the warning / danger statements\"), React.createElement(\"div\", {\n    className: styles.action_colors,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.colors_array,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Palette, {\n    alias: \"success\",\n    color: \"green\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: styles.space_between,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: styles.colors_array,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Palette, {\n    alias: \"warning\",\n    color: \"yellow\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: styles.space_between,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: cx(styles.colors_array, styles.full_space),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Palette, {\n    alias: \"danger\",\n    color: \"red\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }))), React.createElement(Typo, {\n    type: \"h4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Alternative Colors\"), React.createElement(Typo, {\n    type: \"h6\",\n    colorStep: 60,\n    className: styles.sub_title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"You can replace or mix any of Action Colors with alternative\"), React.createElement(\"div\", {\n    className: styles.alt_colors,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.colors_array,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Palette, {\n    alias: \"primary_alt\",\n    color: \"indigo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: styles.space_between,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: styles.colors_array,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Palette, {\n    alias: \"success_alt\",\n    color: \"teal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: styles.space_between,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: styles.colors_array,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(Palette, {\n    alias: \"warning_alt\",\n    color: \"orange\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: styles.space_between,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: styles.colors_array,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(Palette, {\n    alias: \"danger_alt\",\n    color: \"pink\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }))));\n};\n\nexport default DemoColors;","map":{"version":3,"sources":["/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/src/@candy-ui/demo/docs/colors/demo.jsx"],"names":["React","cx","Typo","Palette","styles","DemoColors","props","container","sub_title","text","main_colors","colors_array","space_between","action_colors","full_space","alt_colors"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport cx from \"classnames\";\r\nimport Typo from \"../../../core/Typography\";\r\nimport { Palette } from \"./palette\";\r\nimport styles from \"./style.module.css\";\r\n\r\nconst DemoColors = props => {\r\n  return (\r\n    <div className={styles.container}>\r\n      <Typo type=\"h3\">Colors</Typo>\r\n      <Typo type=\"h6\" colorStep={60} className={styles.sub_title}>\r\n        Flexible palette based on 12 color tokens\r\n      </Typo>\r\n      <Typo large className={styles.text}>\r\n        Black, white and everything in between. The gray scale should be used\r\n        for the main UI frame: containers, headers, sections, boxes, etc. If you\r\n        need to call attention to a particular element (buttons, icons,\r\n        tooltips, etc.), use one of the core colors.\r\n      </Typo>\r\n\r\n      <div className={styles.main_colors}>\r\n        <div className={styles.colors_array}>\r\n          <Palette />\r\n        </div>\r\n        <div className={styles.space_between} />\r\n        <div className={styles.colors_array}>\r\n          <Palette alias=\"primary\" color=\"blue\" />\r\n        </div>\r\n      </div>\r\n      <Typo type=\"h4\">Action Colors</Typo>\r\n      <Typo type=\"h6\" colorStep={60} className={styles.sub_title}>\r\n        Use green for successfull experience, yellow for attention and red for\r\n        the warning / danger statements\r\n      </Typo>\r\n      <div className={styles.action_colors}>\r\n        <div className={styles.colors_array}>\r\n          <Palette alias=\"success\" color=\"green\" />\r\n        </div>\r\n        <div className={styles.space_between} />\r\n        <div className={styles.colors_array}>\r\n          <Palette alias=\"warning\" color=\"yellow\" />\r\n        </div>\r\n        <div className={styles.space_between} />\r\n        <div className={cx(styles.colors_array, styles.full_space)}>\r\n          <Palette alias=\"danger\" color=\"red\" />\r\n        </div>\r\n      </div>\r\n      <Typo type=\"h4\">Alternative Colors</Typo>\r\n      <Typo type=\"h6\" colorStep={60} className={styles.sub_title}>\r\n        You can replace or mix any of Action Colors with alternative\r\n      </Typo>\r\n      <div className={styles.alt_colors}>\r\n        <div className={styles.colors_array}>\r\n          <Palette alias=\"primary_alt\" color=\"indigo\" />\r\n        </div>\r\n        <div className={styles.space_between} />\r\n        <div className={styles.colors_array}>\r\n          <Palette alias=\"success_alt\" color=\"teal\" />\r\n        </div>\r\n        <div className={styles.space_between} />\r\n        <div className={styles.colors_array}>\r\n          <Palette alias=\"warning_alt\" color=\"orange\" />\r\n        </div>\r\n        <div className={styles.space_between} />\r\n        <div className={styles.colors_array}>\r\n          <Palette alias=\"danger_alt\" color=\"pink\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DemoColors;\r\n"]},"metadata":{},"sourceType":"module"}