{"ast":null,"code":"var _jsxFileName = \"/Users/ryneschillinger1/dev_projects/ux-kitchen/ui-kitchen-ingredients/src/@setproduct-ui/demo/Dialog/DemoComponent.jsx\";\nimport React from \"react\";\n/**Import core component (variable)*/\n\nimport Dialog from \"../../core/Dialog\";\nimport Button from \"../../core/Button\";\nexport const DEMO = props => {\n  const type = props.type,\n        view = props.view,\n        color = props.color,\n        isOpen = props.isOpen,\n        setOpen = props.setOpen,\n        opacity = props.opacity;\n  const text = \"First you need import component to your code. To use the component, copy and paste an example from the CODE tab. Default props of component can be omitted, they are applied automatically.\";\n  return React.createElement(React.Fragment, null, React.createElement(Button, {\n    view: \"filled\",\n    color: \"primary\",\n    text: \"Open Dialog\",\n    onClick: () => setOpen(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }), React.createElement(Dialog, {\n    type: type,\n    view: view,\n    color: color,\n    icon: \"info-sign\",\n    title: \"This is \".concat(type, \" dialog\"),\n    text: text,\n    backdropOpacity: opacity,\n    leftButton: React.createElement(Button, {\n      type: \"default\",\n      view: view === \"filled\" ? \"filled\" : view === \"raised\" ? \"flat\" : \"outlined\",\n      color: color,\n      dense: type === \"dense\" ? true : false,\n      onClick: () => setOpen(false),\n      text: \"Maybe next time\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }),\n    rightButton: React.createElement(Button, {\n      type: \"default\",\n      view: view === \"filled\" ? \"raised\" : view === \"raised\" ? \"smooth\" : \"filled\",\n      color: color,\n      dense: type === \"dense\" ? true : false,\n      onClick: () => setOpen(false),\n      text: \"Sure, continue!\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }),\n    isOpen: isOpen,\n    onClose: () => setOpen(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }));\n};","map":{"version":3,"sources":["/Users/ryneschillinger1/dev_projects/ux-kitchen/ui-kitchen-ingredients/src/@setproduct-ui/demo/Dialog/DemoComponent.jsx"],"names":["React","Dialog","Button","DEMO","props","type","view","color","isOpen","setOpen","opacity","text"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA;;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAO,MAAMC,IAAI,GAAGC,KAAK,IAAI;AAAA,QACnBC,IADmB,GAC6BD,KAD7B,CACnBC,IADmB;AAAA,QACbC,IADa,GAC6BF,KAD7B,CACbE,IADa;AAAA,QACPC,KADO,GAC6BH,KAD7B,CACPG,KADO;AAAA,QACAC,MADA,GAC6BJ,KAD7B,CACAI,MADA;AAAA,QACQC,OADR,GAC6BL,KAD7B,CACQK,OADR;AAAA,QACiBC,OADjB,GAC6BN,KAD7B,CACiBM,OADjB;AAE3B,QAAMC,IAAI,GACR,6LADF;AAEA,SACE,0CACE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,KAAK,EAAC,SAFR;AAGE,IAAA,IAAI,EAAC,aAHP;AAIE,IAAA,OAAO,EAAE,MAAMF,OAAO,CAAC,IAAD,CAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAEJ,IADR;AAEE,IAAA,IAAI,EAAEC,IAFR;AAGE,IAAA,KAAK,EAAEC,KAHT;AAIE,IAAA,IAAI,EAAC,WAJP;AAKE,IAAA,KAAK,oBAAaF,IAAb,YALP;AAME,IAAA,IAAI,EAAEM,IANR;AAOE,IAAA,eAAe,EAAED,OAPnB;AAQE,IAAA,UAAU,EACR,oBAAC,MAAD;AACE,MAAA,IAAI,EAAC,SADP;AAEE,MAAA,IAAI,EACFJ,IAAI,KAAK,QAAT,GACI,QADJ,GAEIA,IAAI,KAAK,QAAT,GACA,MADA,GAEA,UAPR;AASE,MAAA,KAAK,EAAEC,KATT;AAUE,MAAA,KAAK,EAAEF,IAAI,KAAK,OAAT,GAAmB,IAAnB,GAA0B,KAVnC;AAWE,MAAA,OAAO,EAAE,MAAMI,OAAO,CAAC,KAAD,CAXxB;AAYE,MAAA,IAAI,EAAC,iBAZP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ;AAwBE,IAAA,WAAW,EACT,oBAAC,MAAD;AACE,MAAA,IAAI,EAAE,SADR;AAEE,MAAA,IAAI,EACFH,IAAI,KAAK,QAAT,GACI,QADJ,GAEIA,IAAI,KAAK,QAAT,GACA,QADA,GAEA,QAPR;AASE,MAAA,KAAK,EAAEC,KATT;AAUE,MAAA,KAAK,EAAEF,IAAI,KAAK,OAAT,GAAmB,IAAnB,GAA0B,KAVnC;AAWE,MAAA,OAAO,EAAE,MAAMI,OAAO,CAAC,KAAD,CAXxB;AAYE,MAAA,IAAI,EAAC,iBAZP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAzBJ;AAwCE,IAAA,MAAM,EAAED,MAxCV;AAyCE,IAAA,OAAO,EAAE,MAAMC,OAAO,CAAC,KAAD,CAzCxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF;AAqDD,CAzDM","sourcesContent":["import React from \"react\";\r\n\r\n/**Import core component (variable)*/\r\nimport Dialog from \"../../core/Dialog\";\r\nimport Button from \"../../core/Button\";\r\n\r\nexport const DEMO = props => {\r\n  const { type, view, color, isOpen, setOpen, opacity } = props;\r\n  const text =\r\n    \"First you need import component to your code. To use the component, copy and paste an example from the CODE tab. Default props of component can be omitted, they are applied automatically.\";\r\n  return (\r\n    <>\r\n      <Button\r\n        view=\"filled\"\r\n        color=\"primary\"\r\n        text=\"Open Dialog\"\r\n        onClick={() => setOpen(true)}\r\n      />\r\n      <Dialog\r\n        type={type}\r\n        view={view}\r\n        color={color}\r\n        icon=\"info-sign\"\r\n        title={`This is ${type} dialog`}\r\n        text={text}\r\n        backdropOpacity={opacity}\r\n        leftButton={\r\n          <Button\r\n            type=\"default\"\r\n            view={\r\n              view === \"filled\"\r\n                ? \"filled\"\r\n                : view === \"raised\"\r\n                ? \"flat\"\r\n                : \"outlined\"\r\n            }\r\n            color={color}\r\n            dense={type === \"dense\" ? true : false}\r\n            onClick={() => setOpen(false)}\r\n            text=\"Maybe next time\"\r\n          />\r\n        }\r\n        rightButton={\r\n          <Button\r\n            type={\"default\"}\r\n            view={\r\n              view === \"filled\"\r\n                ? \"raised\"\r\n                : view === \"raised\"\r\n                ? \"smooth\"\r\n                : \"filled\"\r\n            }\r\n            color={color}\r\n            dense={type === \"dense\" ? true : false}\r\n            onClick={() => setOpen(false)}\r\n            text=\"Sure, continue!\"\r\n          />\r\n        }\r\n        isOpen={isOpen}\r\n        onClose={() => setOpen(false)}\r\n      />\r\n    </>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}