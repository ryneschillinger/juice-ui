{"ast":null,"code":"import _slicedToArray from \"/Users/ryneschillinger1/dev_projects/ux-kitchen/ui-kitchen-ingredients/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ryneschillinger1/dev_projects/ux-kitchen/ui-kitchen-ingredients/src/@setproduct-ui/demo/Hamburger/DemoComponent.jsx\";\nimport React from \"react\";\n/**Import core component (variable)*/\n\nimport Hamburger from \"../../core/Hamburger\";\nexport const DEMO = props => {\n  const _props$type = props.type,\n        type = _props$type === void 0 ? \"default\" : _props$type,\n        variant = props.variant,\n        _props$view = props.view,\n        view = _props$view === void 0 ? \"filled\" : _props$view,\n        _props$color = props.color,\n        color = _props$color === void 0 ? \"default\" : _props$color,\n        size = props.size,\n        rounded = props.rounded,\n        _props$active = props.active,\n        active = _props$active === void 0 ? false : _props$active;\n\n  const _React$useState = React.useState(active),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        isOpen = _React$useState2[0],\n        setOpen = _React$useState2[1];\n\n  return React.createElement(React.Fragment, null, React.createElement(Hamburger, {\n    isOpen: isOpen,\n    setOpen: setOpen,\n    size: size,\n    rounded: rounded,\n    variant: variant,\n    type: type,\n    view: view,\n    color: color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }));\n};","map":{"version":3,"sources":["/Users/ryneschillinger1/dev_projects/ux-kitchen/ui-kitchen-ingredients/src/@setproduct-ui/demo/Hamburger/DemoComponent.jsx"],"names":["React","Hamburger","DEMO","props","type","variant","view","color","size","rounded","active","useState","isOpen","setOpen"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA;;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AAEA,OAAO,MAAMC,IAAI,GAAGC,KAAK,IAAI;AAAA,sBASvBA,KATuB,CAEzBC,IAFyB;AAAA,QAEzBA,IAFyB,4BAElB,SAFkB;AAAA,QAGzBC,OAHyB,GASvBF,KATuB,CAGzBE,OAHyB;AAAA,sBASvBF,KATuB,CAIzBG,IAJyB;AAAA,QAIzBA,IAJyB,4BAIlB,QAJkB;AAAA,uBASvBH,KATuB,CAKzBI,KALyB;AAAA,QAKzBA,KALyB,6BAKjB,SALiB;AAAA,QAMzBC,IANyB,GASvBL,KATuB,CAMzBK,IANyB;AAAA,QAOzBC,OAPyB,GASvBN,KATuB,CAOzBM,OAPyB;AAAA,wBASvBN,KATuB,CAQzBO,MARyB;AAAA,QAQzBA,MARyB,8BAQhB,KARgB;;AAAA,0BAUDV,KAAK,CAACW,QAAN,CAAeD,MAAf,CAVC;AAAA;AAAA,QAUpBE,MAVoB;AAAA,QAUZC,OAVY;;AAY3B,SACE,0CACE,oBAAC,SAAD;AACE,IAAA,MAAM,EAAED,MADV;AAEE,IAAA,OAAO,EAAEC,OAFX;AAGE,IAAA,IAAI,EAAEL,IAHR;AAIE,IAAA,OAAO,EAAEC,OAJX;AAKE,IAAA,OAAO,EAAEJ,OALX;AAME,IAAA,IAAI,EAAED,IANR;AAOE,IAAA,IAAI,EAAEE,IAPR;AAQE,IAAA,KAAK,EAAEC,KART;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAcD,CA1BM","sourcesContent":["import React from \"react\";\r\n\r\n/**Import core component (variable)*/\r\nimport Hamburger from \"../../core/Hamburger\";\r\n\r\nexport const DEMO = props => {\r\n  const {\r\n    type = \"default\",\r\n    variant,\r\n    view = \"filled\",\r\n    color = \"default\",\r\n    size,\r\n    rounded,\r\n    active = false\r\n  } = props;\r\n  const [isOpen, setOpen] = React.useState(active);\r\n\r\n  return (\r\n    <>\r\n      <Hamburger\r\n        isOpen={isOpen}\r\n        setOpen={setOpen}\r\n        size={size}\r\n        rounded={rounded}\r\n        variant={variant}\r\n        type={type}\r\n        view={view}\r\n        color={color}\r\n      />\r\n    </>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}