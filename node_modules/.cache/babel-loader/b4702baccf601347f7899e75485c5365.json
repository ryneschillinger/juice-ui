{"ast":null,"code":"import _slicedToArray from \"/Users/ryneschillinger1/dev_projects/ux-kitchen/ui-kitchen-ingredients/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ryneschillinger1/dev_projects/ux-kitchen/ui-kitchen-ingredients/src/@setproduct-ui/demo/OverviewComponent.jsx\";\nimport React from \"react\";\nimport { Icon, Tab } from \"@blueprintjs/core\";\nimport Button from \"../core/Button\";\nimport Toaster from \"../core/Toast/Toaster.jsx\";\nimport OverviewAPI from \"./OverviewAPI.jsx\";\nexport const Overview = props => {\n  const overview = props.overview,\n        apidata = props.apidata,\n        code = props.code;\n\n  const _React$useState = React.useState(null),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        toastRef = _React$useState2[0],\n        setRef = _React$useState2[1];\n  /**Success toast */\n\n\n  const SuccessToast = {\n    message: \"Copied to clipboard\",\n    timeout: 2000,\n    icon: React.createElement(Icon, {\n      icon: \"tick\",\n      iconSize: 24,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    })\n  };\n  /**Copy function */\n\n  const copyToClipboard = source => {\n    const textField = document.createElement(\"textarea\");\n    textField.innerHTML = source;\n    document.body.appendChild(textField);\n    textField.select();\n    document.execCommand(\"copy\") && toastRef.show(SuccessToast);\n    textField.remove();\n  };\n  /**Tabs data */\n\n\n  const data = [{\n    id: 1,\n    panel: React.createElement(\"div\", {\n      className: \"source-code-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(Button, {\n      dense: true,\n      view: \"filled\",\n      color: \"primary\",\n      icon: \"duplicate\",\n      text: \"Copy\",\n      style: {\n        position: \"relative\",\n        left: \"calc( 100% - 50px)\",\n        top: \"10px\"\n      },\n      onClick: () => copyToClipboard(code),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), React.createElement(Toaster, {\n      view: \"outlined\",\n      color: \"success\",\n      usePortal: false,\n      position: \"bottom\" //bottom, bottom-left, bottom-right\n      ,\n      setRef: setRef,\n      withoutClose: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(\"pre\", {\n      dangerouslySetInnerHTML: {\n        __html: code\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })),\n    visible: true\n  }, {\n    id: 2,\n    panel: overview,\n    visible: true\n  }, {\n    id: 3,\n    panel: React.createElement(OverviewAPI, {\n      data: apidata,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }),\n    visible: true\n  }];\n  return React.createElement(\"div\", {\n    style: {\n      paddingLeft: \"0.25rem\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, data.map(i => {\n    return i.panel;\n  }));\n};","map":{"version":3,"sources":["/Users/ryneschillinger1/dev_projects/ux-kitchen/ui-kitchen-ingredients/src/@setproduct-ui/demo/OverviewComponent.jsx"],"names":["React","Icon","Tab","Button","Toaster","OverviewAPI","Overview","props","overview","apidata","code","useState","toastRef","setRef","SuccessToast","message","timeout","icon","copyToClipboard","source","textField","document","createElement","innerHTML","body","appendChild","select","execCommand","show","remove","data","id","panel","position","left","top","__html","visible","paddingLeft","map","i"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Icon, Tab } from \"@blueprintjs/core\";\r\nimport Button from \"../core/Button\";\r\nimport Toaster from \"../core/Toast/Toaster.jsx\";\r\nimport OverviewAPI from \"./OverviewAPI.jsx\";\r\n\r\nexport const Overview = props => {\r\n  const { overview, apidata, code } = props;\r\n\r\n  const [toastRef, setRef] = React.useState(null);\r\n\r\n  /**Success toast */\r\n  const SuccessToast = {\r\n    message: \"Copied to clipboard\",\r\n    timeout: 2000,\r\n    icon: <Icon icon=\"tick\" iconSize={24} />\r\n  };\r\n\r\n  /**Copy function */\r\n  const copyToClipboard = source => {\r\n    const textField = document.createElement(\"textarea\");\r\n    textField.innerHTML = source;\r\n    document.body.appendChild(textField);\r\n    textField.select();\r\n    document.execCommand(\"copy\") && toastRef.show(SuccessToast);\r\n    textField.remove();\r\n  };\r\n\r\n  /**Tabs data */\r\n  const data = [\r\n    {\r\n      id: 1,\r\n      panel: (\r\n        <div className=\"source-code-block\">\r\n          <Button\r\n            dense={true}\r\n            view=\"filled\"\r\n            color=\"primary\"\r\n            icon=\"duplicate\"\r\n            text=\"Copy\"\r\n            style={{\r\n              position: \"relative\",\r\n              left: \"calc( 100% - 50px)\",\r\n              top: \"10px\"\r\n            }}\r\n            onClick={() => copyToClipboard(code)}\r\n          />\r\n          <Toaster\r\n            view=\"outlined\"\r\n            color=\"success\"\r\n            usePortal={false}\r\n            position=\"bottom\" //bottom, bottom-left, bottom-right\r\n            setRef={setRef}\r\n            withoutClose={true}\r\n          />\r\n          <pre\r\n            dangerouslySetInnerHTML={{\r\n              __html: code\r\n            }}\r\n          />\r\n        </div>\r\n      ),\r\n      visible: true\r\n    },\r\n    {\r\n      id: 2,\r\n      panel: overview,\r\n      visible: true\r\n    },\r\n    {\r\n      id: 3,\r\n      panel: <OverviewAPI data={apidata} />,\r\n      visible: true\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <div style={{ paddingLeft: \"0.25rem\" }}>\r\n      {data.map((i) => {\r\n        return i.panel\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}