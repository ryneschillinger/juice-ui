{"ast":null,"code":"var _jsxFileName = \"/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/src/@candy-ui/demo/Select/DemoComponent.jsx\";\nimport React from \"react\";\n/**Import core component (variable)*/\n\nimport Select from \"../../core/Select\";\nimport MenuItem from \"../../core/Menu/MenuItem\";\nimport ExampleMenu from \"./Menu\";\nexport const DEMO = ({\n  view,\n  color,\n  dense\n}) => {\n  const Films = [{\n    title: \"The Shawshank Redemption\",\n    year: 1994\n  }, {\n    title: \"The Godfather\",\n    year: 1972\n  }, {\n    title: \"The Godfather: Part II\",\n    year: 1974\n  }];\n\n  const escapeRegExpChars = text => {\n    return text.replace(/([.*+?^=!:${}()|\\[\\]\\/\\\\])/g, \"\\\\$1\");\n  };\n\n  const highlightText = (text, query) => {\n    let lastIndex = 0;\n    const words = query.split(/\\s+/).filter(word => word.length > 0).map(escapeRegExpChars);\n\n    if (words.length === 0) {\n      return [text];\n    }\n\n    const regexp = new RegExp(words.join(\"|\"), \"gi\");\n    const tokens = [];\n\n    while (true) {\n      const match = regexp.exec(text);\n\n      if (!match) {\n        break;\n      }\n\n      const length = match[0].length;\n      const before = text.slice(lastIndex, regexp.lastIndex - length);\n\n      if (before.length > 0) {\n        tokens.push(before);\n      }\n\n      lastIndex = regexp.lastIndex;\n      tokens.push(React.createElement(\"strong\", {\n        key: lastIndex,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, match[0]));\n    }\n\n    const rest = text.slice(lastIndex);\n\n    if (rest.length > 0) {\n      tokens.push(rest);\n    }\n\n    return tokens;\n  };\n\n  const filterFilm = (query, film) => {\n    return \"\".concat(film.rank, \". \").concat(film.title.toLowerCase(), \" \").concat(film.year).indexOf(query.toLowerCase()) >= 0;\n  };\n\n  const renderFilm = (film, {\n    handleClick,\n    modifiers,\n    query\n  }) => {\n    if (!modifiers.matchesPredicate) {\n      return null;\n    }\n\n    const text = \"\".concat(film.rank, \". \").concat(film.title);\n    return React.createElement(MenuItem, {\n      active: modifiers.active,\n      disabled: modifiers.disabled,\n      label: film.year.toString(),\n      key: film.rank,\n      onClick: handleClick,\n      text: highlightText(text, query),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    });\n  };\n\n  return React.createElement(Select, {\n    view: view,\n    color: color,\n    items: Films,\n    itemPredicate: filterFilm,\n    itemRenderer: renderFilm,\n    noResults: React.createElement(MenuItem, {\n      disabled: true,\n      text: \"No results.\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  });\n};","map":{"version":3,"sources":["/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/src/@candy-ui/demo/Select/DemoComponent.jsx"],"names":["React","Select","MenuItem","ExampleMenu","DEMO","view","color","dense","Films","title","year","escapeRegExpChars","text","replace","highlightText","query","lastIndex","words","split","filter","word","length","map","regexp","RegExp","join","tokens","match","exec","before","slice","push","rest","filterFilm","film","rank","toLowerCase","indexOf","renderFilm","handleClick","modifiers","matchesPredicate","active","disabled","toString"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\n/**Import core component (variable)*/\r\nimport Select from \"../../core/Select\";\r\nimport MenuItem from \"../../core/Menu/MenuItem\";\r\nimport ExampleMenu from \"./Menu\";\r\n\r\nexport const DEMO = ({ view, color, dense }) => {\r\n  const Films = [\r\n    { title: \"The Shawshank Redemption\", year: 1994 },\r\n    { title: \"The Godfather\", year: 1972 },\r\n    { title: \"The Godfather: Part II\", year: 1974 },\r\n  ];\r\n\r\n  const escapeRegExpChars = (text) => {\r\n    return text.replace(/([.*+?^=!:${}()|\\[\\]\\/\\\\])/g, \"\\\\$1\");\r\n  };\r\n\r\n  const highlightText = (text, query) => {\r\n    let lastIndex = 0;\r\n    const words = query\r\n      .split(/\\s+/)\r\n      .filter((word) => word.length > 0)\r\n      .map(escapeRegExpChars);\r\n    if (words.length === 0) {\r\n      return [text];\r\n    }\r\n    const regexp = new RegExp(words.join(\"|\"), \"gi\");\r\n    const tokens = [];\r\n    while (true) {\r\n      const match = regexp.exec(text);\r\n      if (!match) {\r\n        break;\r\n      }\r\n      const length = match[0].length;\r\n      const before = text.slice(lastIndex, regexp.lastIndex - length);\r\n      if (before.length > 0) {\r\n        tokens.push(before);\r\n      }\r\n      lastIndex = regexp.lastIndex;\r\n      tokens.push(<strong key={lastIndex}>{match[0]}</strong>);\r\n    }\r\n    const rest = text.slice(lastIndex);\r\n    if (rest.length > 0) {\r\n      tokens.push(rest);\r\n    }\r\n    return tokens;\r\n  };\r\n\r\n  const filterFilm = (query, film) => {\r\n    return (\r\n      `${film.rank}. ${film.title.toLowerCase()} ${film.year}`.indexOf(\r\n        query.toLowerCase()\r\n      ) >= 0\r\n    );\r\n  };\r\n  \r\n  const renderFilm  = (\r\n    film,\r\n    { handleClick, modifiers, query }\r\n  ) => {\r\n    if (!modifiers.matchesPredicate) {\r\n      return null;\r\n    }\r\n    const text = `${film.rank}. ${film.title}`;\r\n    return (\r\n      <MenuItem\r\n        active={modifiers.active}\r\n        disabled={modifiers.disabled}\r\n        label={film.year.toString()}\r\n        key={film.rank}\r\n        onClick={handleClick}\r\n        text={highlightText(text, query)}\r\n      />\r\n    );\r\n  };\r\n  \r\n  return (\r\n    <Select\r\n      view={view}\r\n      color={color}\r\n      items={Films}\r\n      itemPredicate={filterFilm}\r\n      itemRenderer={renderFilm}\r\n      noResults={<MenuItem disabled={true} text=\"No results.\" />}\r\n    />\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}