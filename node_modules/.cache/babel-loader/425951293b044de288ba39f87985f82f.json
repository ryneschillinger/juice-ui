{"ast":null,"code":"import _objectWithoutProperties from \"/Users/ryneschillinger1/dev_projects/ui-kitchen/ui-kitchen-ingredients/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/ryneschillinger1/dev_projects/ui-kitchen/ui-kitchen-ingredients/src/@setproduct-ui/core/Dialog/Dialog.jsx\";\nimport React from \"react\";\nimport cx from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { Dialog as DialogSource, Icon } from \"@blueprintjs/core\";\nimport Typography from \"../Typography\";\nimport Type from \"./_type.module.css\";\nimport View from \"./_view.module.css\";\nimport Color from \"../../styles/color.module.css\";\nimport { ThemeContext } from \"../ThemeContext\";\n/** \r\n  __Component 'Dialog'__\r\n**/\n\nexport default function Dialog(props) {\n  const _props$type = props.type,\n        type = _props$type === void 0 ? \"default\" : _props$type,\n        _props$view = props.view,\n        view = _props$view === void 0 ? \"filled\" : _props$view,\n        _props$color = props.color,\n        color = _props$color === void 0 ? \"default\" : _props$color,\n        icon = props.icon,\n        title = props.title,\n        text = props.text,\n        leftButton = props.leftButton,\n        rightButton = props.rightButton,\n        _props$backdropOpacit = props.backdropOpacity,\n        backdropOpacity = _props$backdropOpacit === void 0 ? \"20\" : _props$backdropOpacit,\n        onClose = props.onClose,\n        className = props.className,\n        restProps = _objectWithoutProperties(props, [\"type\", \"view\", \"color\", \"icon\", \"title\", \"text\", \"leftButton\", \"rightButton\", \"backdropOpacity\", \"onClose\", \"className\"]);\n\n  return React.createElement(ThemeContext.Consumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, ({\n    isDark\n  }) => React.createElement(DialogSource, Object.assign({}, restProps, {\n    className: cx(Type[type], isDark ? View[view + \"-dark\"] : View[view], Color[color], className),\n    backdropClassName: View[\"backdrop-\" + backdropOpacity],\n    onClose: onClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: Type[\"header\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    icon: icon,\n    iconSize: type === \"dense\" ? 20 : 24,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    type: type === \"dense\" ? \"h6\" : \"h5\",\n    colorStep: 100,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, title), React.createElement(\"div\", {\n    className: Type[\"close-button\"],\n    onClick: onClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    icon: \"cross\",\n    iconSize: type === \"dense\" ? 20 : 24,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }))), React.createElement(Typography, {\n    type: \"body\",\n    small: type === \"dense\" ? true : false,\n    colorStep: 100,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, text), React.createElement(\"div\", {\n    className: Type[\"footer\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: Type[\"left-button\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, leftButton), React.createElement(\"div\", {\n    className: Type[\"right-button\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, rightButton))));\n}\nDialog.propTypes = {\n  /**\r\n   `The type of the component.\r\n   * Variants: `dense` `default` \r\n   * Default value (if undefined): `default` `\r\n   */\n  type: PropTypes.oneOf([\"default\", \"dense\"]),\n\n  /**\r\n   ` The view of the component.\r\n   * Variants: `smooth` `raised`\r\n   * Default value (if undefined): `filled` `\r\n   */\n  view: PropTypes.oneOf([\"filled\", \"smooth\", \"raised\"]),\n\n  /**\r\n  ` The color of the component.\r\n   * Variants: `primary` `warning` `danger` `success` `primaryAlt` `warningAlt` `dangerAlt` `successAlt`\r\n   * Default value (if undefined): `default` `\r\n   */\n  color: PropTypes.oneOf([\"default\", \"primary\", \"warning\", \"danger\", \"success\", \"primary_alt\", \"warning_alt\", \"danger_alt\", \"success_alt\"]),\n\n  /**\r\n   * Click event handler.\r\n   */\n  onClick: PropTypes.func,\n\n  /**\r\n   * Name of a icon to render in the dialog's header. Note that the header\r\n   *      will only be rendered if title is provided.\r\n   */\n  icon: PropTypes.string,\n\n  /**\r\n   * Title of the dialog.\r\n   */\n  title: PropTypes.string,\n\n  /**\r\n   * Action text. Havn't default state.\r\n   */\n  text: PropTypes.string,\n\n  /**\r\n   * Opacity of backdrop. From 0 to 100 with step 10.\r\n   */\n  backdropOpacity: PropTypes.oneOf([0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100]),\n\n  /**\r\n   * Left button of dialog.\r\n   */\n  leftButton: PropTypes.element,\n\n  /**\r\n   * Right button of dialog.\r\n   */\n  rightButton: PropTypes.element,\n\n  /**\r\n   * Toggles the visibility of the overlay and its children. This prop is required because the component is controlled.\r\n   */\n  isOpen: PropTypes.bool,\n\n  /**\r\n   * A callback that is invoked when user interaction causes the overlay to close, such as clicking on the overlay or pressing the esc key.\r\n   */\n  onClose: PropTypes.func\n};","map":{"version":3,"sources":["/Users/ryneschillinger1/dev_projects/ui-kitchen/ui-kitchen-ingredients/src/@setproduct-ui/core/Dialog/Dialog.jsx"],"names":["React","cx","PropTypes","Dialog","DialogSource","Icon","Typography","Type","View","Color","ThemeContext","props","type","view","color","icon","title","text","leftButton","rightButton","backdropOpacity","onClose","className","restProps","isDark","propTypes","oneOf","onClick","func","string","element","isOpen","bool"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,MAAM,IAAIC,YAAnB,EAAiCC,IAAjC,QAA6C,mBAA7C;AACA,OAAOC,UAAP,MAAuB,eAAvB;AAEA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,KAAP,MAAkB,+BAAlB;AAEA,SAASC,YAAT,QAA6B,iBAA7B;AAEA;;;;AAIA,eAAe,SAASP,MAAT,CAAgBQ,KAAhB,EAAuB;AAAA,sBAchCA,KAdgC,CAElCC,IAFkC;AAAA,QAElCA,IAFkC,4BAE3B,SAF2B;AAAA,sBAchCD,KAdgC,CAGlCE,IAHkC;AAAA,QAGlCA,IAHkC,4BAG3B,QAH2B;AAAA,uBAchCF,KAdgC,CAIlCG,KAJkC;AAAA,QAIlCA,KAJkC,6BAI1B,SAJ0B;AAAA,QAKlCC,IALkC,GAchCJ,KAdgC,CAKlCI,IALkC;AAAA,QAMlCC,KANkC,GAchCL,KAdgC,CAMlCK,KANkC;AAAA,QAOlCC,IAPkC,GAchCN,KAdgC,CAOlCM,IAPkC;AAAA,QAQlCC,UARkC,GAchCP,KAdgC,CAQlCO,UARkC;AAAA,QASlCC,WATkC,GAchCR,KAdgC,CASlCQ,WATkC;AAAA,gCAchCR,KAdgC,CAUlCS,eAVkC;AAAA,QAUlCA,eAVkC,sCAUhB,IAVgB;AAAA,QAWlCC,OAXkC,GAchCV,KAdgC,CAWlCU,OAXkC;AAAA,QAYlCC,SAZkC,GAchCX,KAdgC,CAYlCW,SAZkC;AAAA,QAa/BC,SAb+B,4BAchCZ,KAdgC;;AAgBpC,SACE,oBAAC,YAAD,CAAc,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC;AAAEa,IAAAA;AAAF,GAAD,KACC,oBAAC,YAAD,oBACMD,SADN;AAEE,IAAA,SAAS,EAAEtB,EAAE,CACXM,IAAI,CAACK,IAAD,CADO,EAEXY,MAAM,GAAGhB,IAAI,CAACK,IAAI,GAAG,OAAR,CAAP,GAA0BL,IAAI,CAACK,IAAD,CAFzB,EAGXJ,KAAK,CAACK,KAAD,CAHM,EAIXQ,SAJW,CAFf;AAQE,IAAA,iBAAiB,EAAEd,IAAI,CAAC,cAAcY,eAAf,CARzB;AASE,IAAA,OAAO,EAAEC,OATX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAWE;AAAK,IAAA,SAAS,EAAEd,IAAI,CAAC,QAAD,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEQ,IAAZ;AAAkB,IAAA,QAAQ,EAAEH,IAAI,KAAK,OAAT,GAAmB,EAAnB,GAAwB,EAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAEA,IAAI,KAAK,OAAT,GAAmB,IAAnB,GAA0B,IAA5C;AAAkD,IAAA,SAAS,EAAE,GAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,KADH,CAFF,EAKE;AAAK,IAAA,SAAS,EAAET,IAAI,CAAC,cAAD,CAApB;AAAsC,IAAA,OAAO,EAAEc,OAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAE,OAAZ;AAAqB,IAAA,QAAQ,EAAET,IAAI,KAAK,OAAT,GAAmB,EAAnB,GAAwB,EAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALF,CAXF,EAoBE,oBAAC,UAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,KAAK,EAAEA,IAAI,KAAK,OAAT,GAAmB,IAAnB,GAA0B,KAFnC;AAGE,IAAA,SAAS,EAAE,GAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGK,IALH,CApBF,EA2BE;AAAK,IAAA,SAAS,EAAEV,IAAI,CAAC,QAAD,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAEA,IAAI,CAAC,aAAD,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsCW,UAAtC,CADF,EAEE;AAAK,IAAA,SAAS,EAAEX,IAAI,CAAC,cAAD,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuCY,WAAvC,CAFF,CA3BF,CAFJ,CADF;AAsCD;AAEDhB,MAAM,CAACsB,SAAP,GAAmB;AACjB;;;;;AAKAb,EAAAA,IAAI,EAAEV,SAAS,CAACwB,KAAV,CAAgB,CAAC,SAAD,EAAY,OAAZ,CAAhB,CANW;;AAOjB;;;;;AAKAb,EAAAA,IAAI,EAAEX,SAAS,CAACwB,KAAV,CAAgB,CAAC,QAAD,EAAW,QAAX,EAAqB,QAArB,CAAhB,CAZW;;AAajB;;;;;AAKAZ,EAAAA,KAAK,EAAEZ,SAAS,CAACwB,KAAV,CAAgB,CACrB,SADqB,EAErB,SAFqB,EAGrB,SAHqB,EAIrB,QAJqB,EAKrB,SALqB,EAMrB,aANqB,EAOrB,aAPqB,EAQrB,YARqB,EASrB,aATqB,CAAhB,CAlBU;;AA6BjB;;;AAGAC,EAAAA,OAAO,EAAEzB,SAAS,CAAC0B,IAhCF;;AAiCjB;;;;AAIAb,EAAAA,IAAI,EAAEb,SAAS,CAAC2B,MArCC;;AAsCjB;;;AAGAb,EAAAA,KAAK,EAAEd,SAAS,CAAC2B,MAzCA;;AA0CjB;;;AAGAZ,EAAAA,IAAI,EAAEf,SAAS,CAAC2B,MA7CC;;AA8CjB;;;AAGAT,EAAAA,eAAe,EAAElB,SAAS,CAACwB,KAAV,CAAgB,CAC/B,CAD+B,EAE/B,EAF+B,EAG/B,EAH+B,EAI/B,EAJ+B,EAK/B,EAL+B,EAM/B,EAN+B,EAO/B,EAP+B,EAQ/B,EAR+B,EAS/B,EAT+B,EAU/B,EAV+B,EAW/B,GAX+B,CAAhB,CAjDA;;AA8DjB;;;AAGAR,EAAAA,UAAU,EAAEhB,SAAS,CAAC4B,OAjEL;;AAkEjB;;;AAGAX,EAAAA,WAAW,EAAEjB,SAAS,CAAC4B,OArEN;;AAsEjB;;;AAGAC,EAAAA,MAAM,EAAE7B,SAAS,CAAC8B,IAzED;;AA0EjB;;;AAGAX,EAAAA,OAAO,EAAEnB,SAAS,CAAC0B;AA7EF,CAAnB","sourcesContent":["import React from \"react\";\r\nimport cx from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { Dialog as DialogSource, Icon } from \"@blueprintjs/core\";\r\nimport Typography from \"../Typography\";\r\n\r\nimport Type from \"./_type.module.css\";\r\nimport View from \"./_view.module.css\";\r\nimport Color from \"../../styles/color.module.css\";\r\n\r\nimport { ThemeContext } from \"../ThemeContext\";\r\n\r\n/** \r\n  __Component 'Dialog'__\r\n**/\r\n\r\nexport default function Dialog(props) {\r\n  const {\r\n    type = \"default\",\r\n    view = \"filled\",\r\n    color = \"default\",\r\n    icon,\r\n    title,\r\n    text,\r\n    leftButton,\r\n    rightButton,\r\n    backdropOpacity = \"20\",\r\n    onClose,\r\n    className,\r\n    ...restProps\r\n  } = props;\r\n\r\n  return (\r\n    <ThemeContext.Consumer>\r\n      {({ isDark }) => (\r\n        <DialogSource\r\n          {...restProps}\r\n          className={cx(\r\n            Type[type],\r\n            isDark ? View[view + \"-dark\"] : View[view],\r\n            Color[color],\r\n            className\r\n          )}\r\n          backdropClassName={View[\"backdrop-\" + backdropOpacity]}\r\n          onClose={onClose}\r\n        >\r\n          <div className={Type[\"header\"]}>\r\n            <Icon icon={icon} iconSize={type === \"dense\" ? 20 : 24} />\r\n            <Typography type={type === \"dense\" ? \"h6\" : \"h5\"} colorStep={100}>\r\n              {title}\r\n            </Typography>\r\n            <div className={Type[\"close-button\"]} onClick={onClose}>\r\n              <Icon icon={\"cross\"} iconSize={type === \"dense\" ? 20 : 24} />\r\n            </div>\r\n          </div>\r\n          <Typography\r\n            type=\"body\"\r\n            small={type === \"dense\" ? true : false}\r\n            colorStep={100}\r\n          >\r\n            {text}\r\n          </Typography>\r\n          <div className={Type[\"footer\"]}>\r\n            <div className={Type[\"left-button\"]}>{leftButton}</div>\r\n            <div className={Type[\"right-button\"]}>{rightButton}</div>\r\n          </div>\r\n        </DialogSource>\r\n      )}\r\n    </ThemeContext.Consumer>\r\n  );\r\n}\r\n\r\nDialog.propTypes = {\r\n  /**\r\n   `The type of the component.\r\n   * Variants: `dense` `default` \r\n   * Default value (if undefined): `default` `\r\n   */\r\n  type: PropTypes.oneOf([\"default\", \"dense\"]),\r\n  /**\r\n   ` The view of the component.\r\n   * Variants: `smooth` `raised`\r\n   * Default value (if undefined): `filled` `\r\n   */\r\n  view: PropTypes.oneOf([\"filled\", \"smooth\", \"raised\"]),\r\n  /**\r\n  ` The color of the component.\r\n   * Variants: `primary` `warning` `danger` `success` `primaryAlt` `warningAlt` `dangerAlt` `successAlt`\r\n   * Default value (if undefined): `default` `\r\n   */\r\n  color: PropTypes.oneOf([\r\n    \"default\",\r\n    \"primary\",\r\n    \"warning\",\r\n    \"danger\",\r\n    \"success\",\r\n    \"primary_alt\",\r\n    \"warning_alt\",\r\n    \"danger_alt\",\r\n    \"success_alt\"\r\n  ]),\r\n  /**\r\n   * Click event handler.\r\n   */\r\n  onClick: PropTypes.func,\r\n  /**\r\n   * Name of a icon to render in the dialog's header. Note that the header\r\n   *      will only be rendered if title is provided.\r\n   */\r\n  icon: PropTypes.string,\r\n  /**\r\n   * Title of the dialog.\r\n   */\r\n  title: PropTypes.string,\r\n  /**\r\n   * Action text. Havn't default state.\r\n   */\r\n  text: PropTypes.string,\r\n  /**\r\n   * Opacity of backdrop. From 0 to 100 with step 10.\r\n   */\r\n  backdropOpacity: PropTypes.oneOf([\r\n    0,\r\n    10,\r\n    20,\r\n    30,\r\n    40,\r\n    50,\r\n    60,\r\n    70,\r\n    80,\r\n    90,\r\n    100\r\n  ]),\r\n  /**\r\n   * Left button of dialog.\r\n   */\r\n  leftButton: PropTypes.element,\r\n  /**\r\n   * Right button of dialog.\r\n   */\r\n  rightButton: PropTypes.element,\r\n  /**\r\n   * Toggles the visibility of the overlay and its children. This prop is required because the component is controlled.\r\n   */\r\n  isOpen: PropTypes.bool,\r\n  /**\r\n   * A callback that is invoked when user interaction causes the overlay to close, such as clicking on the overlay or pressing the esc key.\r\n   */\r\n  onClose: PropTypes.func\r\n};\r\n"]},"metadata":{},"sourceType":"module"}