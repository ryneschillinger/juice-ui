{"ast":null,"code":"var _jsxFileName = \"/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/src/@setproduct-ui/demo/Divider/api.jsx\";\nimport React from \"react\";\nimport { Overview } from \"../OverviewComponent\";\nimport { OverviewTemplate } from \"../OverviewText\";\nexport const API = props => {\n  const name = props.name,\n        size = props.size,\n        color = props.color,\n        colorStep = props.colorStep;\n  /**Overview */\n\n  const OverviewText = React.createElement(OverviewTemplate, {\n    name: name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  });\n  /**API */\n\n  const APIData = [{\n    prop: \"color\",\n    type: React.createElement(React.Fragment, null, \"string = \", React.createElement(\"i\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"default\")),\n    desc: React.createElement(React.Fragment, null, \"This prop set the color of the component. Possible states:\", React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"default | primary | warning | danger | success | primary_alt | warning_alt | danger_alt | success_alt\"), \". The default state is \", React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"default\"), \".\")\n  }, {\n    prop: \"className\",\n    type: \"string\",\n    desc: \"A space-delimited list of class names to pass along to a child element.\"\n  }, {\n    prop: \"colorStep\",\n    type: React.createElement(React.Fragment, null, \"integer = \", React.createElement(\"i\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"100\")),\n    desc: React.createElement(React.Fragment, null, \"A Color depth. Step is 10. Min value is 0, max value is 100. The default value is 20.\")\n  }, {\n    prop: \"size\",\n    type: \"integer\",\n    desc: React.createElement(React.Fragment, null, \"Height of the divider in px. The default value is 2.\")\n  }, {\n    prop: \"style\",\n    type: \"object\",\n    desc: React.createElement(React.Fragment, null, \"Inline CSS style\")\n  }];\n  /** Code source */\n\n  const Code = \"&lt;<span class=\\\"val\\\">Divider</span>  \\n  <span class=\\\"attr\\\">color</span>=\\\"<span class=\\\"val\\\">\".concat(color, \"</span>\\\"\\n  <span class=\\\"attr\\\">size</span>={<span class=\\\"num\\\">\").concat(size, \"</span>}    \\n  <span class=\\\"attr\\\">colorStep</span>={<span class=\\\"num\\\">\").concat(colorStep, \"</span>} \\n/&gt;\");\n  return React.createElement(Overview, {\n    overview: OverviewText,\n    apidata: APIData,\n    code: Code,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  });\n};","map":{"version":3,"sources":["/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/src/@setproduct-ui/demo/Divider/api.jsx"],"names":["React","Overview","OverviewTemplate","API","props","name","size","color","colorStep","OverviewText","APIData","prop","type","desc","Code"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,sBAAzB;AACA,SAASC,gBAAT,QAAiC,iBAAjC;AAEA,OAAO,MAAMC,GAAG,GAAGC,KAAK,IAAI;AAAA,QAClBC,IADkB,GACeD,KADf,CAClBC,IADkB;AAAA,QACZC,IADY,GACeF,KADf,CACZE,IADY;AAAA,QACNC,KADM,GACeH,KADf,CACNG,KADM;AAAA,QACCC,SADD,GACeJ,KADf,CACCI,SADD;AAG1B;;AACA,QAAMC,YAAY,GAAG,oBAAC,gBAAD;AAAkB,IAAA,IAAI,EAAEJ,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAArB;AAEA;;AACA,QAAMK,OAAO,GAAG,CACd;AACEC,IAAAA,IAAI,EAAE,OADR;AAEEC,IAAAA,IAAI,EACF,uDACW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADX,CAHJ;AAOEC,IAAAA,IAAI,EACF,wGAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+GAFF,6BAMyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBANzB;AARJ,GADc,EAmBd;AACEF,IAAAA,IAAI,EAAE,WADR;AAEEC,IAAAA,IAAI,EAAE,QAFR;AAGEC,IAAAA,IAAI,EACF;AAJJ,GAnBc,EAyBd;AACEF,IAAAA,IAAI,EAAE,WADR;AAEEC,IAAAA,IAAI,EACF,wDACY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADZ,CAHJ;AAOEC,IAAAA,IAAI,EACF;AARJ,GAzBc,EAuCd;AACEF,IAAAA,IAAI,EAAE,MADR;AAEEC,IAAAA,IAAI,EAAE,SAFR;AAGEC,IAAAA,IAAI,EAAE;AAHR,GAvCc,EA4Cd;AACEF,IAAAA,IAAI,EAAE,OADR;AAEEC,IAAAA,IAAI,EAAE,QAFR;AAGEC,IAAAA,IAAI,EAAE;AAHR,GA5Cc,CAAhB;AAmDA;;AACA,QAAMC,IAAI,iHAC2CP,KAD3C,gFAE0CD,IAF1C,wFAG+CE,SAH/C,qBAAV;AAOA,SAAO,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAEC,YAApB;AAAkC,IAAA,OAAO,EAAEC,OAA3C;AAAoD,IAAA,IAAI,EAAEI,IAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAnEM","sourcesContent":["import React from \"react\";\r\nimport { Overview } from \"../OverviewComponent\";\r\nimport { OverviewTemplate } from \"../OverviewText\";\r\n\r\nexport const API = props => {\r\n  const { name, size, color, colorStep } = props;\r\n\r\n  /**Overview */\r\n  const OverviewText = <OverviewTemplate name={name} />;\r\n\r\n  /**API */\r\n  const APIData = [\r\n    {\r\n      prop: \"color\",\r\n      type: (\r\n        <>\r\n          string = <i>default</i>\r\n        </>\r\n      ),\r\n      desc: (\r\n        <>\r\n          This prop set the color of the component. Possible states:\r\n          <b>\r\n            default | primary | warning | danger | success | primary_alt |\r\n            warning_alt | danger_alt | success_alt\r\n          </b>\r\n          . The default state is <b>default</b>.\r\n        </>\r\n      )\r\n    },\r\n    {\r\n      prop: \"className\",\r\n      type: \"string\",\r\n      desc:\r\n        \"A space-delimited list of class names to pass along to a child element.\"\r\n    },\r\n    {\r\n      prop: \"colorStep\",\r\n      type: (\r\n        <>\r\n          integer = <i>100</i>\r\n        </>\r\n      ),\r\n      desc: (\r\n        <>\r\n          A Color depth. Step is 10. Min value is 0, max value is 100. The\r\n          default value is 20.\r\n        </>\r\n      )\r\n    },\r\n    {\r\n      prop: \"size\",\r\n      type: \"integer\",\r\n      desc: <>Height of the divider in px. The default value is 2.</>\r\n    },\r\n    {\r\n      prop: \"style\",\r\n      type: \"object\",\r\n      desc: <>Inline CSS style</>\r\n    }\r\n  ];\r\n\r\n  /** Code source */\r\n  const Code = `&lt;<span class=\"val\">Divider</span>  \r\n  <span class=\"attr\">color</span>=\"<span class=\"val\">${color}</span>\"\r\n  <span class=\"attr\">size</span>={<span class=\"num\">${size}</span>}    \r\n  <span class=\"attr\">colorStep</span>={<span class=\"num\">${colorStep}</span>} \r\n/&gt;`\r\n  ;\r\n\r\n  return <Overview overview={OverviewText} apidata={APIData} code={Code} />;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}