{"ast":null,"code":"import _slicedToArray from \"/Users/ryneschillinger1/dev_projects/ux-kitchen/ui-kitchen-ingredients/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/ryneschillinger1/dev_projects/ux-kitchen/ui-kitchen-ingredients/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/ryneschillinger1/dev_projects/ux-kitchen/ui-kitchen-ingredients/src/@setproduct-ui/demo/docs/colors/palette.jsx\";\nimport React from \"react\";\nimport cx from \"classnames\";\nimport { Icon } from \"@blueprintjs/core\";\nimport Typo from \"../../../core/Typography\";\nimport Toaster from \"../../../core/Toast/Toaster.jsx\";\nimport { useDevice } from \"../../components/customHooks\";\nimport styles from \"./style.module.css\";\nimport Color from \"../../../styles/color.module.css\";\nexport const Palette = (_ref) => {\n  let _ref$color = _ref.color,\n      color = _ref$color === void 0 ? \"grey\" : _ref$color,\n      _ref$alias = _ref.alias,\n      alias = _ref$alias === void 0 ? \"default\" : _ref$alias,\n      props = _objectWithoutProperties(_ref, [\"color\", \"alias\"]);\n\n  const colors_array = [0, 5, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100];\n  let device = useDevice();\n\n  const _React$useState = React.useState(null),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        toastRef = _React$useState2[0],\n        setRef = _React$useState2[1];\n  /**Success toast */\n\n\n  const SuccessToast = {\n    message: \"Copied successfully!\",\n    timeout: 1000,\n    icon: React.createElement(Icon, {\n      icon: \"tick\",\n      iconSize: 24,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    })\n  };\n  /**Copy function */\n\n  const copyToClipboard = source => {\n    const textField = document.createElement(\"textarea\");\n    textField.innerHTML = source;\n    document.body.appendChild(textField);\n    textField.select();\n    device !== \"mobile\" && document.execCommand(\"copy\") && toastRef.show(SuccessToast);\n    textField.remove();\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"section\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, colors_array.map((color_step, i) => React.createElement(\"div\", {\n    className: cx(styles.color_item, Color[alias]),\n    key: i,\n    style: {\n      background: \"var(--\".concat(color + color_step, \")\")\n    },\n    onClick: () => copyToClipboard(window.getComputedStyle(document.getElementById(\"root\"), null).getPropertyValue(\"--\" + color + color_step), color + color_step),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Typo, {\n    large: true,\n    colorStep: color_step < 30 ? 60 : 0,\n    color: alias,\n    className: styles.color_name,\n    \"data-color\": color + \" \" + color_step,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(Typo, {\n    type: \"overline\",\n    colorStep: color_step < 30 ? 60 : 0,\n    color: alias,\n    className: styles.color_hex,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, window.getComputedStyle(document.getElementById(\"root\"), null).getPropertyValue(\"--\" + color + color_step))))), React.createElement(Toaster, {\n    view: \"outlined\",\n    color: alias,\n    usePortal: false,\n    position: \"bottom\",\n    setRef: setRef,\n    withoutClose: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }));\n};","map":{"version":3,"sources":["/Users/ryneschillinger1/dev_projects/ux-kitchen/ui-kitchen-ingredients/src/@setproduct-ui/demo/docs/colors/palette.jsx"],"names":["React","cx","Icon","Typo","Toaster","useDevice","styles","Color","Palette","color","alias","props","colors_array","device","useState","toastRef","setRef","SuccessToast","message","timeout","icon","copyToClipboard","source","textField","document","createElement","innerHTML","body","appendChild","select","execCommand","show","remove","map","color_step","i","color_item","background","window","getComputedStyle","getElementById","getPropertyValue","color_name","color_hex"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport cx from \"classnames\";\r\nimport { Icon } from \"@blueprintjs/core\";\r\nimport Typo from \"../../../core/Typography\";\r\nimport Toaster from \"../../../core/Toast/Toaster.jsx\";\r\nimport { useDevice } from \"../../components/customHooks\";\r\n\r\nimport styles from \"./style.module.css\";\r\nimport Color from \"../../../styles/color.module.css\";\r\n\r\nexport const Palette = ({ color = \"grey\", alias = \"default\", ...props }) => {\r\n  const colors_array = [0, 5, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100];\r\n  let device = useDevice();\r\n\r\n  const [toastRef, setRef] = React.useState(null);\r\n  /**Success toast */\r\n  const SuccessToast = {\r\n    message: \"Copied successfully!\",\r\n    timeout: 1000,\r\n    icon: <Icon icon=\"tick\" iconSize={24} />\r\n  };\r\n  /**Copy function */\r\n  const copyToClipboard = source => {\r\n    const textField = document.createElement(\"textarea\");\r\n    textField.innerHTML = source;\r\n    document.body.appendChild(textField);\r\n    textField.select();\r\n    device !== \"mobile\" &&\r\n      (document.execCommand(\"copy\") && toastRef.show(SuccessToast));\r\n    textField.remove();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <section>\r\n        {colors_array.map((color_step, i) => (\r\n          <div\r\n            className={cx(styles.color_item, Color[alias])}\r\n            key={i}\r\n            style={{\r\n              background: `var(--${color + color_step})`\r\n            }}\r\n            onClick={() =>\r\n              copyToClipboard(\r\n                window\r\n                  .getComputedStyle(document.getElementById(\"root\"), null)\r\n                  .getPropertyValue(\"--\" + color + color_step),\r\n                color + color_step\r\n              )\r\n            }\r\n          >\r\n            <Typo\r\n              large\r\n              colorStep={color_step < 30 ? 60 : 0}\r\n              color={alias}\r\n              className={styles.color_name}\r\n              data-color={color + \" \" + color_step}\r\n            />\r\n\r\n            <Typo\r\n              type=\"overline\"\r\n              colorStep={color_step < 30 ? 60 : 0}\r\n              color={alias}\r\n              className={styles.color_hex}\r\n            >\r\n              {window\r\n                .getComputedStyle(document.getElementById(\"root\"), null)\r\n                .getPropertyValue(\"--\" + color + color_step)}\r\n            </Typo>\r\n          </div>\r\n        ))}\r\n      </section>\r\n      <Toaster\r\n        view=\"outlined\"\r\n        color={alias}\r\n        usePortal={false}\r\n        position=\"bottom\"\r\n        setRef={setRef}\r\n        withoutClose={true}\r\n      />\r\n    </>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}