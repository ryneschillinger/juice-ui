{"ast":null,"code":"var _jsxFileName = \"/Users/ryneschillinger1/dev_projects/ui-kitchen/ui-kitchen-ingredients/src/@setproduct-ui/demo/Hamburger/PropsGroup.jsx\";\nimport React from \"react\";\nimport { Label } from \"@blueprintjs/core\";\nimport Checkbox from \"../../core/CheckBox\";\nimport Slider from \"../../core/Slider\";\nimport { RadioGroup } from \"@blueprintjs/core\";\nimport Radio from \"../../core/Radio\";\nimport StyleGrid from \"../styles/style.module.css\";\n\nconst PropsGroup = props => {\n  const rounded = props.rounded,\n        setRounded = props.setRounded,\n        burgerSize = props.burgerSize,\n        setBurgerSize = props.setBurgerSize,\n        variants = props.variants,\n        variant = props.variant,\n        setVariant = props.setVariant,\n        margin = props.margin;\n  const handleClick = React.useCallback(e => setVariant(e.target.value), [setVariant]);\n  return React.createElement(\"div\", {\n    className: StyleGrid[\"demo-props\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Props:\"), React.createElement(\"div\", {\n    className: \"demo-props\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Checkbox, {\n    type: \"dense\",\n    color: rounded ? \"primary\" : \"default\",\n    checked: rounded,\n    label: \"Rounded\",\n    onChange: () => setRounded(!rounded),\n    fill: true,\n    margin: margin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(RadioGroup, {\n    inline: false,\n    label: \"Animations:\",\n    name: \"Variant group\",\n    onChange: () => null,\n    selectedValue: variant,\n    style: {\n      float: \"left\"\n    },\n    className: \"demo-color-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, variants.map(([label, value], i) => React.createElement(Radio, {\n    type: \"dense\",\n    color: value === variant ? \"primary\" : \"default\",\n    label: label,\n    value: value,\n    onClick: handleClick,\n    alignIndicator: \"left\" //large\n    ,\n    key: i,\n    checked: value === variant && true //important\n    ,\n    style: {\n      margin: \"2px\"\n    },\n    onChange: () => null,\n    fill: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }))), React.createElement(Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Hamburger size\", React.createElement(Slider, {\n    view: \"filled\",\n    color: \"default\",\n    labelStepSize: 32,\n    min: 12,\n    max: 48,\n    onChange: value => setBurgerSize(value),\n    stepSize: 4,\n    showTrackFill: true,\n    value: burgerSize,\n    className: \"demo-slider\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }))));\n};\n\nexport default PropsGroup;","map":{"version":3,"sources":["/Users/ryneschillinger1/dev_projects/ui-kitchen/ui-kitchen-ingredients/src/@setproduct-ui/demo/Hamburger/PropsGroup.jsx"],"names":["React","Label","Checkbox","Slider","RadioGroup","Radio","StyleGrid","PropsGroup","props","rounded","setRounded","burgerSize","setBurgerSize","variants","variant","setVariant","margin","handleClick","useCallback","e","target","value","float","map","label","i"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\nimport { Label } from \"@blueprintjs/core\";\r\nimport Checkbox from \"../../core/CheckBox\";\r\nimport Slider from \"../../core/Slider\";\r\nimport { RadioGroup } from \"@blueprintjs/core\";\r\nimport Radio from \"../../core/Radio\";\r\n\r\nimport StyleGrid from \"../styles/style.module.css\";\r\n\r\nconst PropsGroup = props => {\r\n  const {\r\n    rounded,\r\n    setRounded,\r\n    burgerSize,\r\n    setBurgerSize,\r\n    variants,\r\n    variant,\r\n    setVariant,\r\n    margin\r\n  } = props;\r\n\r\n  const handleClick = React.useCallback(e => setVariant(e.target.value), [\r\n    setVariant\r\n  ]);\r\n\r\n  return (\r\n    <div className={StyleGrid[\"demo-props\"]}>\r\n      <Label>Props:</Label>\r\n      <div className=\"demo-props\">\r\n        <Checkbox\r\n          type=\"dense\"\r\n          color={rounded ? \"primary\" : \"default\"}\r\n          checked={rounded}\r\n          label=\"Rounded\"\r\n          onChange={() => setRounded(!rounded)}\r\n          fill\r\n          margin={margin}\r\n        />\r\n        <RadioGroup\r\n          inline={false}\r\n          label=\"Animations:\"\r\n          name=\"Variant group\"\r\n          onChange={() => null}\r\n          selectedValue={variant}\r\n          style={{ float: \"left\" }}\r\n          className=\"demo-color-group\"\r\n        >\r\n          {variants.map(([label, value], i) => (\r\n            <Radio\r\n              type=\"dense\"\r\n              color={value === variant ? \"primary\" : \"default\"}\r\n              label={label}\r\n              value={value}\r\n              onClick={handleClick}\r\n              alignIndicator=\"left\"\r\n              //large\r\n              key={i}\r\n              checked={value === variant && true} //important\r\n              style={{ margin: \"2px\" }}\r\n              onChange={() => null}\r\n              fill\r\n            />\r\n          ))}\r\n        </RadioGroup>\r\n        <Label>\r\n          Hamburger size\r\n          <Slider\r\n            view=\"filled\"\r\n            color=\"default\"\r\n            labelStepSize={32}\r\n            min={12}\r\n            max={48}\r\n            onChange={value => setBurgerSize(value)}\r\n            stepSize={4}\r\n            showTrackFill={true}\r\n            value={burgerSize}\r\n            className=\"demo-slider\"\r\n          />\r\n        </Label>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PropsGroup;\r\n"]},"metadata":{},"sourceType":"module"}