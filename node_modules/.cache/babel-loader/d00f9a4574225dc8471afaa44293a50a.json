{"ast":null,"code":"import _slicedToArray from \"/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/src/@candy-ui/core/Select/Select.jsx\";\nimport React, { useRef } from \"react\";\nimport cx from \"classnames\";\nimport PropTypes from \"prop-types\";\n/**Import core component (variable)*/\n\nimport Button from \"../../core/Button\";\nimport InputGroup from \"../../core/Inputs/SearchInput\";\nimport Menu from \"../../core/Menu\";\nimport MenuItem from \"../../core/Menu/MenuItem\";\nimport { Select as SelectSource } from \"@blueprintjs/select\";\nimport Type from \"./_type.module.css\";\nimport View from \"./_view.module.css\";\nimport Color from \"../../styles/color.module.css\";\nimport { ThemeContext } from \"../ThemeContext\";\nexport default function Select(props) {\n  const type = props.type,\n        _props$view = props.view,\n        view = _props$view === void 0 ? \"filled\" : _props$view,\n        _props$color = props.color,\n        color = _props$color === void 0 ? \"default\" : _props$color,\n        _props$disabled = props.disabled,\n        disabled = _props$disabled === void 0 ? \"false\" : _props$disabled,\n        dense = props.dense,\n        items = props.items,\n        restProps = _objectWithoutProperties(props, [\"type\", \"view\", \"color\", \"disabled\", \"dense\", \"items\"]);\n\n  const _React$useState = React.useState(items[0]),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        item = _React$useState2[0],\n        setItem = _React$useState2[1];\n\n  const _React$useState3 = React.useState(\"\"),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        searchQuery = _React$useState4[0],\n        setQuery = _React$useState4[1];\n\n  const renderItem = (item, {\n    handleClick,\n    modifiers,\n    query\n  }) => {\n    if (!modifiers.matchesPredicate) {\n      return null;\n    }\n\n    const text = \"\".concat(item.rank, \". \").concat(item.title);\n    return React.createElement(MenuItem, {\n      type: dense ? \"dense\" : \"def\",\n      view: view,\n      color: color,\n      dense: dense,\n      active: modifiers.active,\n      disabled: modifiers.disabled,\n      label: item.year.toString(),\n      key: item.rank,\n      onClick: handleClick,\n      text: highlightText(text, query),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    });\n  };\n\n  let inputEl = useRef(null);\n\n  const handleInputChanged = event => {\n    setQuery(event.target.value);\n  };\n\n  const receiveInputRef = ref => {\n    inputEl = ref;\n  };\n\n  const handlePopoverOpening = () => {\n    if (inputEl) {\n      inputEl.focus();\n    }\n  };\n\n  const renderMenuList = ({\n    items,\n    itemsParentRef,\n    query,\n    renderItem\n  }) => {\n    const renderedItems = items.map(renderItem).filter(item => item != null);\n    return React.createElement(Menu, {\n      type: dense ? \"dense\" : \"def\",\n      view: view,\n      color: color,\n      dense: dense,\n      ulRef: itemsParentRef,\n      disabled: disabled,\n      style: {\n        maxHeight: \"395px\",\n        overflow: \"auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(InputGroup, {\n      type: type,\n      view: view,\n      color: color,\n      placeholder: \"Search for something...\",\n      fill: true,\n      inputRef: receiveInputRef,\n      onSearch: filterItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), renderedItems.length < 1 && React.createElement(MenuItem, {\n      type: dense ? \"dense\" : \"def\",\n      view: view,\n      color: color,\n      dense: dense,\n      disabled: true,\n      text: \"No results matching \\\"\".concat(query, \"\\\"\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), renderedItems);\n  };\n\n  const filterItem = (query, item) => {\n    return \"\".concat(item.rank, \". \").concat(item.title.toLowerCase(), \" \").concat(item.year).indexOf(searchQuery.toLowerCase()) >= 0;\n  };\n\n  const highlightText = (text, query) => {\n    let lastIndex = 0;\n    const words = query.split(/\\s+/).filter(word => word.length > 0).map(escapeRegExpChars);\n\n    if (words.length === 0) {\n      return [text];\n    }\n\n    const regexp = new RegExp(words.join(\"|\"), \"gi\");\n    const tokens = [];\n\n    while (true) {\n      const match = regexp.exec(text);\n\n      if (!match) {\n        break;\n      }\n\n      const length = match[0].length;\n      const before = text.slice(lastIndex, regexp.lastIndex - length);\n\n      if (before.length > 0) {\n        tokens.push(before);\n      }\n\n      lastIndex = regexp.lastIndex;\n      tokens.push(React.createElement(\"strong\", {\n        key: lastIndex,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, match[0]));\n    }\n\n    const rest = text.slice(lastIndex);\n\n    if (rest.length > 0) {\n      tokens.push(rest);\n    }\n\n    return tokens;\n  };\n\n  const escapeRegExpChars = text => {\n    return text.replace(/([.*+?^=!:${}()|\\[\\]\\/\\\\])/g, \"\\\\$1\");\n  };\n\n  const itemSelectProps = {\n    itemPredicate: filterItem,\n    itemRenderer: renderItem,\n    itemListRenderer: renderMenuList\n  };\n  return React.createElement(ThemeContext.Consumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, ({\n    isDark\n  }) => React.createElement(SelectSource, Object.assign({\n    type: dense ? \"dense\" : \"default\",\n    view: view,\n    color: color,\n    dense: dense,\n    itemPredicate: filterItem,\n    itemRenderer: renderItem,\n    itemListRenderer: renderMenuList,\n    onItemSelect: setItem,\n    items: items,\n    popoverProps: {\n      minimal: true,\n      onOpening: handlePopoverOpening\n    }\n  }, restProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }), React.createElement(Button, {\n    type: dense ? \"dense\" : \"default\",\n    view: view,\n    color: color,\n    dense: dense,\n    text: item.title,\n    disabled: disabled,\n    rightIcon: \"caret-down\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  })));\n}\nSelect.propTypes = {\n  /**\r\n   `The type of the component.\r\n   * Variants: `card` `action` `circle` `icon`\r\n   * Default value (if undefined): `default` `\r\n   */\n  type: PropTypes.oneOf([\"default\", \"card\", \"action\", \"circle\", \"icon\"]),\n\n  /**\r\n   ` The view of the component.\r\n   * Variants: `flat` `smooth` `outlined` `raised`\r\n   * Default value (if undefined): `filled` `\r\n   */\n  view: PropTypes.oneOf([\"filled\", \"flat\", \"smooth\", \"outlined\", \"raised\"]),\n\n  /**\r\n  ` The color of the component.\r\n   * Variants: `primary` `warning` `danger` `success` `primaryAlt` `warningAlt` `dangerAlt` `successAlt`\r\n   * Default value (if undefined): `default` `\r\n   */\n  color: PropTypes.oneOf([\"default\", \"primary\", \"warning\", \"danger\", \"success\", \"primary_alt\", \"warning_alt\", \"danger_alt\", \"success_alt\"]),\n\n  /**\r\n   * Click event handler.\r\n   */\n  onClick: PropTypes.func,\n\n  /**\r\n   * Whether this component should expand to fill its container.\r\n   */\n  fill: PropTypes.bool,\n\n  /**\r\n   * Name of a Blueprint UI icon (or an icon element) to render before the text.\r\n   */\n  icon: PropTypes.any,\n\n  /**\r\n   * Name of a Blueprint UI icon (or an icon element) to render after the text.\r\n   */\n  rightIcon: PropTypes.any,\n\n  /**\r\n   * If set to `true`, the button will display a centered loading spinner instead of its contents.\r\n   * The width of the button is not affected by the value of this prop.\r\n   */\n  loading: PropTypes.bool,\n\n  /**\r\n   * If `true`, the button will be disabled.\r\n   */\n  disabled: PropTypes.bool,\n\n  /**\r\n   * Dense size\r\n   */\n  dense: PropTypes.bool\n};","map":{"version":3,"sources":["/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/src/@candy-ui/core/Select/Select.jsx"],"names":["React","useRef","cx","PropTypes","Button","InputGroup","Menu","MenuItem","Select","SelectSource","Type","View","Color","ThemeContext","props","type","view","color","disabled","dense","items","restProps","useState","item","setItem","searchQuery","setQuery","renderItem","handleClick","modifiers","query","matchesPredicate","text","rank","title","active","year","toString","highlightText","inputEl","handleInputChanged","event","target","value","receiveInputRef","ref","handlePopoverOpening","focus","renderMenuList","itemsParentRef","renderedItems","map","filter","maxHeight","overflow","filterItem","length","toLowerCase","indexOf","lastIndex","words","split","word","escapeRegExpChars","regexp","RegExp","join","tokens","match","exec","before","slice","push","rest","replace","itemSelectProps","itemPredicate","itemRenderer","itemListRenderer","isDark","minimal","onOpening","propTypes","oneOf","onClick","func","fill","bool","icon","any","rightIcon","loading"],"mappings":"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","sourcesContent":["import React, { useRef } from \"react\";\r\nimport cx from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n/**Import core component (variable)*/\r\nimport Button from \"../../core/Button\";\r\nimport InputGroup from \"../../core/Inputs/SearchInput\";\r\nimport Menu from \"../../core/Menu\";\r\nimport MenuItem from \"../../core/Menu/MenuItem\";\r\nimport { Select as SelectSource } from \"@blueprintjs/select\";\r\n\r\nimport Type from \"./_type.module.css\";\r\nimport View from \"./_view.module.css\";\r\nimport Color from \"../../styles/color.module.css\";\r\nimport { ThemeContext } from \"../ThemeContext\";\r\n\r\nexport default function Select(props) {\r\n  const {\r\n    type,\r\n    view = \"filled\",\r\n    color = \"default\",\r\n    disabled = \"false\",\r\n    dense,\r\n    items,\r\n    ...restProps\r\n  } = props;\r\n\r\n  const [item, setItem] = React.useState(items[0]);\r\n  const [searchQuery, setQuery] = React.useState(\"\");\r\n\r\n  const renderItem  = (\r\n    item,\r\n    { handleClick, modifiers, query }\r\n  ) => {\r\n    if (!modifiers.matchesPredicate) {\r\n      return null;\r\n    }\r\n    const text = `${item.rank}. ${item.title}`;\r\n    return (\r\n      <MenuItem\r\n        type={dense ? \"dense\" : \"def\"}\r\n        view={view}\r\n        color={color}\r\n        dense={dense}\r\n        active={modifiers.active}\r\n        disabled={modifiers.disabled}\r\n        label={item.year.toString()}\r\n        key={item.rank}\r\n        onClick={handleClick}\r\n        text={highlightText(text, query)}\r\n      />\r\n    );\r\n  };\r\n\r\n  let inputEl = useRef(null);\r\n\r\n  const handleInputChanged = event => {\r\n    setQuery(event.target.value);\r\n  }\r\n\r\n  const receiveInputRef = (ref) => {\r\n    inputEl = ref;\r\n  }\r\n\r\n  const handlePopoverOpening = () => {\r\n    if (inputEl) {\r\n      inputEl.focus();\r\n    }\r\n  }\r\n  \r\n  const renderMenuList = ({ items, itemsParentRef, query, renderItem }) => {\r\n    const renderedItems = items.map(renderItem).filter(item => item != null);\r\n    return (\r\n        <Menu\r\n          type={dense ? \"dense\" : \"def\"}\r\n          view={view}\r\n          color={color}\r\n          dense={dense}\r\n          ulRef={itemsParentRef}\r\n          disabled={disabled}\r\n          style={{ maxHeight: \"395px\", overflow: \"auto\" }}\r\n        >\r\n          <InputGroup\r\n            type={type}\r\n            view={view}\r\n            color={color}\r\n            placeholder=\"Search for something...\"\r\n            fill\r\n            inputRef={receiveInputRef}\r\n            onSearch={filterItem}\r\n          />\r\n          { renderedItems.length < 1 && \r\n            <MenuItem\r\n              type={dense ? \"dense\" : \"def\"}\r\n              view={view}\r\n              color={color}\r\n              dense={dense}\r\n              disabled={true}\r\n              text={`No results matching \"${query}\"`}\r\n            />\r\n          }\r\n          {renderedItems}\r\n        </Menu>\r\n    );\r\n  };\r\n  \r\n  const filterItem = (query, item) => {\r\n    return (\r\n      `${item.rank}. ${item.title.toLowerCase()} ${item.year}`.indexOf(\r\n        searchQuery.toLowerCase()\r\n      ) >= 0\r\n    );\r\n  };\r\n  \r\n  const highlightText = (text, query) => {\r\n    let lastIndex = 0;\r\n    const words = query\r\n      .split(/\\s+/)\r\n      .filter((word) => word.length > 0)\r\n      .map(escapeRegExpChars);\r\n    if (words.length === 0) {\r\n      return [text];\r\n    }\r\n    const regexp = new RegExp(words.join(\"|\"), \"gi\");\r\n    const tokens = [];\r\n    while (true) {\r\n      const match = regexp.exec(text);\r\n      if (!match) {\r\n        break;\r\n      }\r\n      const length = match[0].length;\r\n      const before = text.slice(lastIndex, regexp.lastIndex - length);\r\n      if (before.length > 0) {\r\n        tokens.push(before);\r\n      }\r\n      lastIndex = regexp.lastIndex;\r\n      tokens.push(<strong key={lastIndex}>{match[0]}</strong>);\r\n    }\r\n    const rest = text.slice(lastIndex);\r\n    if (rest.length > 0) {\r\n      tokens.push(rest);\r\n    }\r\n    return tokens;\r\n  }\r\n  \r\n  const escapeRegExpChars = text => {\r\n    return text.replace(/([.*+?^=!:${}()|\\[\\]\\/\\\\])/g, \"\\\\$1\");\r\n  }\r\n  \r\n  const itemSelectProps = {\r\n    itemPredicate: filterItem,\r\n    itemRenderer: renderItem,\r\n    itemListRenderer: renderMenuList\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Consumer>\r\n      {({ isDark }) => (\r\n        <SelectSource\r\n          type={dense ? \"dense\" : \"default\"}\r\n          view={view}\r\n          color={color}\r\n          dense={dense}\r\n          itemPredicate={filterItem}\r\n          itemRenderer={renderItem}\r\n          itemListRenderer={renderMenuList}\r\n          onItemSelect={setItem}\r\n          items={items}\r\n          popoverProps={{\r\n            minimal: true,\r\n            onOpening: handlePopoverOpening\r\n          }}\r\n          {...restProps}\r\n        >\r\n          <Button\r\n            type={dense ? \"dense\" : \"default\"}\r\n            view={view}\r\n            color={color}\r\n            dense={dense}\r\n            text={item.title}\r\n            disabled={disabled}\r\n            rightIcon=\"caret-down\"\r\n          />\r\n        </SelectSource>\r\n      )}\r\n    </ThemeContext.Consumer>\r\n  );\r\n}\r\n\r\nSelect.propTypes = {\r\n  /**\r\n   `The type of the component.\r\n   * Variants: `card` `action` `circle` `icon`\r\n   * Default value (if undefined): `default` `\r\n   */\r\n  type: PropTypes.oneOf([\"default\", \"card\", \"action\", \"circle\", \"icon\"]),\r\n  /**\r\n   ` The view of the component.\r\n   * Variants: `flat` `smooth` `outlined` `raised`\r\n   * Default value (if undefined): `filled` `\r\n   */\r\n  view: PropTypes.oneOf([\"filled\", \"flat\", \"smooth\", \"outlined\", \"raised\"]),\r\n  /**\r\n  ` The color of the component.\r\n   * Variants: `primary` `warning` `danger` `success` `primaryAlt` `warningAlt` `dangerAlt` `successAlt`\r\n   * Default value (if undefined): `default` `\r\n   */\r\n  color: PropTypes.oneOf([\r\n    \"default\",\r\n    \"primary\",\r\n    \"warning\",\r\n    \"danger\",\r\n    \"success\",\r\n    \"primary_alt\",\r\n    \"warning_alt\",\r\n    \"danger_alt\",\r\n    \"success_alt\"\r\n  ]),\r\n  /**\r\n   * Click event handler.\r\n   */\r\n  onClick: PropTypes.func,\r\n  /**\r\n   * Whether this component should expand to fill its container.\r\n   */\r\n  fill: PropTypes.bool,\r\n  /**\r\n   * Name of a Blueprint UI icon (or an icon element) to render before the text.\r\n   */\r\n  icon: PropTypes.any,\r\n  /**\r\n   * Name of a Blueprint UI icon (or an icon element) to render after the text.\r\n   */\r\n  rightIcon: PropTypes.any,\r\n  /**\r\n   * If set to `true`, the button will display a centered loading spinner instead of its contents.\r\n   * The width of the button is not affected by the value of this prop.\r\n   */\r\n  loading: PropTypes.bool,\r\n  /**\r\n   * If `true`, the button will be disabled.\r\n   */\r\n  disabled: PropTypes.bool,\r\n  /**\r\n   * Dense size\r\n   */\r\n  dense: PropTypes.bool\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}