{"ast":null,"code":"var _jsxFileName = \"/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/src/@candy-ui/demo/Tabs/DemoTabs.jsx\";\nimport React from \"react\";\nimport { Icon, Tab } from \"@blueprintjs/core\";\nimport Tabs from \"../../core/Tabs\";\n\nconst DemoTabs = props => {\n  const type = props.type,\n        view = props.view,\n        color = props.color,\n        data = props.data,\n        isIcon = props.isIcon,\n        fill = props.fill,\n        vertical = props.vertical;\n  return React.createElement(Tabs, {\n    type: type,\n    view: view,\n    color: color,\n    id: \"DemoTabs\",\n    fill: fill,\n    vertical: vertical //onChange={(id, last) => alert(last)}\n    //selectedTabId={isTab}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, data.map(i => i.visible && React.createElement(Tab, {\n    key: i.id,\n    id: i.id,\n    title: React.createElement(React.Fragment, null, isIcon && React.createElement(Icon, {\n      icon: i.icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), i.title),\n    panel: i.panel,\n    disabled: i.disabled,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  })));\n};\n\nexport default DemoTabs;","map":{"version":3,"sources":["/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/src/@candy-ui/demo/Tabs/DemoTabs.jsx"],"names":["React","Icon","Tab","Tabs","DemoTabs","props","type","view","color","data","isIcon","fill","vertical","map","i","visible","id","icon","title","panel","disabled"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,IAAT,EAAeC,GAAf,QAA0B,mBAA1B;AACA,OAAOC,IAAP,MAAiB,iBAAjB;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AAAA,QAChBC,IADgB,GACoCD,KADpC,CAChBC,IADgB;AAAA,QACVC,IADU,GACoCF,KADpC,CACVE,IADU;AAAA,QACJC,KADI,GACoCH,KADpC,CACJG,KADI;AAAA,QACGC,IADH,GACoCJ,KADpC,CACGI,IADH;AAAA,QACSC,MADT,GACoCL,KADpC,CACSK,MADT;AAAA,QACiBC,IADjB,GACoCN,KADpC,CACiBM,IADjB;AAAA,QACuBC,QADvB,GACoCP,KADpC,CACuBO,QADvB;AAGxB,SACE,oBAAC,IAAD;AACE,IAAA,IAAI,EAAEN,IADR;AAEE,IAAA,IAAI,EAAEC,IAFR;AAGE,IAAA,KAAK,EAAEC,KAHT;AAIE,IAAA,EAAE,EAAC,UAJL;AAKE,IAAA,IAAI,EAAEG,IALR;AAME,IAAA,QAAQ,EAAEC,QANZ,CAOE;AACA;AARF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUGH,IAAI,CAACI,GAAL,CACCC,CAAC,IACCA,CAAC,CAACC,OAAF,IACE,oBAAC,GAAD;AACE,IAAA,GAAG,EAAED,CAAC,CAACE,EADT;AAEE,IAAA,EAAE,EAAEF,CAAC,CAACE,EAFR;AAGE,IAAA,KAAK,EACH,0CACGN,MAAM,IAAI,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAEI,CAAC,CAACG,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADb,EAEGH,CAAC,CAACI,KAFL,CAJJ;AASE,IAAA,KAAK,EAAEJ,CAAC,CAACK,KATX;AAUE,IAAA,QAAQ,EAAEL,CAAC,CAACM,QAVd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHL,CAVH,CADF;AA8BD,CAjCD;;AAmCA,eAAehB,QAAf","sourcesContent":["import React from \"react\";\r\n\r\nimport { Icon, Tab } from \"@blueprintjs/core\";\r\nimport Tabs from \"../../core/Tabs\";\r\n\r\nconst DemoTabs = props => {\r\n  const { type, view, color, data, isIcon, fill, vertical } = props;\r\n\r\n  return (\r\n    <Tabs\r\n      type={type}\r\n      view={view}\r\n      color={color}\r\n      id=\"DemoTabs\"\r\n      fill={fill}\r\n      vertical={vertical}\r\n      //onChange={(id, last) => alert(last)}\r\n      //selectedTabId={isTab}\r\n    >\r\n      {data.map(\r\n        i =>\r\n          i.visible && (\r\n            <Tab\r\n              key={i.id}\r\n              id={i.id}\r\n              title={\r\n                <>\r\n                  {isIcon && <Icon icon={i.icon} />}\r\n                  {i.title}\r\n                </>\r\n              }\r\n              panel={i.panel}\r\n              disabled={i.disabled}\r\n            />\r\n          )\r\n      )}\r\n    </Tabs>\r\n  );\r\n};\r\n\r\nexport default DemoTabs;\r\n"]},"metadata":{},"sourceType":"module"}