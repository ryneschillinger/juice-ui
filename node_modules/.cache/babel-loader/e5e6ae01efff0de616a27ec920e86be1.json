{"ast":null,"code":"var _jsxFileName = \"/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/src/@candy-ui/demo/Breadcrumbs/api.jsx\";\nimport React from \"react\";\nimport { Overview } from \"../OverviewComponent\";\nimport { OverviewTemplate } from \"../OverviewText\";\nexport const API = props => {\n  const name = props.name,\n        color = props.color,\n        from = props.from;\n  /**Overview */\n\n  const OverviewText = React.createElement(OverviewTemplate, {\n    name: name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  });\n  /**API */\n\n  const APIData = [{\n    prop: \"color\",\n    type: React.createElement(React.Fragment, null, \"string = \", React.createElement(\"i\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"default\")),\n    desc: React.createElement(React.Fragment, null, \"This prop set the color of the component. Possible states:\", React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"default | primary | warning | danger | success | primary_alt | warning_alt | danger_alt | success_alt\"), \". The default state is \", React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"default\"), \".\")\n  }, {\n    prop: \"className\",\n    type: \"string\",\n    desc: \"A space-delimited list of class names to pass along to a child element.\"\n  }, {\n    prop: \"collapseFrom\",\n    type: React.createElement(React.Fragment, null, \"string = \", React.createElement(\"i\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"start\")),\n    desc: React.createElement(React.Fragment, null, \"Which direction the breadcrumbs should collapse from: start or end. Possible states: \", React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"start | end\"))\n  }, {\n    prop: \"items\",\n    type: React.createElement(React.Fragment, null, \"array\"),\n    desc: React.createElement(React.Fragment, null, \"All breadcrumbs to display. Breadcrumbs that do not fit in the container will be rendered in an overflow menu instead.\")\n  }];\n  /** Code source */\n\n  const Code = \"<span class=\\\"cmnt\\\">/*** HTML COMPONENT ***/</span>\\n&lt;<span class=\\\"el\\\">Breadcrumbs</span>\\n  <span class=\\\"attr\\\">color</span>=\\\"<span class=\\\"val\\\">\".concat(color, \"</span>\\\"\\n  <span class=\\\"attr\\\">collapseFrom</span>=\\\"<span class=\\\"val\\\">\").concat(from, \"</span>\\\"\\n  <span class=\\\"attr\\\">items</span>={<span class=\\\"js\\\">CrumbsItems</span>}\\n/&gt;\\n\\n<span class=\\\"cmnt\\\">/*** JS DATA ***/</span>\\nconst CrumbsItems = [\\n  { href: \\\"#\\\", icon: \\\"folder-close\\\", text: \\\"Home\\\", intent: \\\"warning\\\" },\\n  { href: \\\"#\\\", icon: \\\"folder-close\\\", text: \\\"Program Files\\\" },\\n  { href: \\\"#\\\", icon: \\\"folder-close\\\", text: \\\"Common Files\\\" },\\n  { href: \\\"#\\\", icon: \\\"folder-close\\\", text: \\\"Services\\\" },\\n  { href: \\\"#\\\", icon: \\\"folder-close\\\", text: \\\"Payout\\\" },\\n  { icon: \\\"document\\\", text: \\\"invoice.txt\\\", current: true }\\n];\\n\");\n  return React.createElement(Overview, {\n    overview: OverviewText,\n    apidata: APIData,\n    code: Code,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  });\n};","map":{"version":3,"sources":["/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/src/@candy-ui/demo/Breadcrumbs/api.jsx"],"names":["React","Overview","OverviewTemplate","API","props","name","color","from","OverviewText","APIData","prop","type","desc","Code"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,sBAAzB;AACA,SAASC,gBAAT,QAAiC,iBAAjC;AAEA,OAAO,MAAMC,GAAG,GAAGC,KAAK,IAAI;AAAA,QAClBC,IADkB,GACID,KADJ,CAClBC,IADkB;AAAA,QACZC,KADY,GACIF,KADJ,CACZE,KADY;AAAA,QACLC,IADK,GACIH,KADJ,CACLG,IADK;AAG1B;;AACA,QAAMC,YAAY,GAAG,oBAAC,gBAAD;AAAkB,IAAA,IAAI,EAAEH,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAArB;AAEA;;AACA,QAAMI,OAAO,GAAG,CACd;AACEC,IAAAA,IAAI,EAAE,OADR;AAEEC,IAAAA,IAAI,EACF,uDACW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADX,CAHJ;AAOEC,IAAAA,IAAI,EACF,wGAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+GAFF,6BAMyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBANzB;AARJ,GADc,EAmBd;AACEF,IAAAA,IAAI,EAAE,WADR;AAEEC,IAAAA,IAAI,EAAE,QAFR;AAGEC,IAAAA,IAAI,EACF;AAJJ,GAnBc,EAyBd;AACEF,IAAAA,IAAI,EAAE,cADR;AAEEC,IAAAA,IAAI,EACF,uDACW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADX,CAHJ;AAOEC,IAAAA,IAAI,EACF,mIAEmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFnB;AARJ,GAzBc,EAuCd;AACEF,IAAAA,IAAI,EAAE,OADR;AAEEC,IAAAA,IAAI,EAAE,kDAFR;AAGEC,IAAAA,IAAI,EACF;AAJJ,GAvCc,CAAhB;AAmDA;;AACA,QAAMC,IAAI,wKAE2CP,KAF3C,yFAGkDC,IAHlD,wkBAAV;AAkBA,SAAO,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAEC,YAApB;AAAkC,IAAA,OAAO,EAAEC,OAA3C;AAAoD,IAAA,IAAI,EAAEI,IAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CA9EM","sourcesContent":["import React from \"react\";\r\nimport { Overview } from \"../OverviewComponent\";\r\nimport { OverviewTemplate } from \"../OverviewText\";\r\n\r\nexport const API = props => {\r\n  const { name, color, from } = props;\r\n\r\n  /**Overview */\r\n  const OverviewText = <OverviewTemplate name={name} />;\r\n\r\n  /**API */\r\n  const APIData = [\r\n    {\r\n      prop: \"color\",\r\n      type: (\r\n        <>\r\n          string = <i>default</i>\r\n        </>\r\n      ),\r\n      desc: (\r\n        <>\r\n          This prop set the color of the component. Possible states:\r\n          <b>\r\n            default | primary | warning | danger | success | primary_alt |\r\n            warning_alt | danger_alt | success_alt\r\n          </b>\r\n          . The default state is <b>default</b>.\r\n        </>\r\n      )\r\n    },\r\n    {\r\n      prop: \"className\",\r\n      type: \"string\",\r\n      desc:\r\n        \"A space-delimited list of class names to pass along to a child element.\"\r\n    },\r\n    {\r\n      prop: \"collapseFrom\",\r\n      type: (\r\n        <>\r\n          string = <i>start</i>\r\n        </>\r\n      ),\r\n      desc: (\r\n        <>\r\n          Which direction the breadcrumbs should collapse from: start or end.\r\n          Possible states: <b>start | end</b>\r\n        </>\r\n      )\r\n    },\r\n    {\r\n      prop: \"items\",\r\n      type: <>array</>,\r\n      desc: (\r\n        <>\r\n          All breadcrumbs to display. Breadcrumbs that do not fit in the\r\n          container will be rendered in an overflow menu instead.\r\n        </>\r\n      )\r\n    }\r\n  ];\r\n\r\n  /** Code source */\r\n  const Code = `<span class=\"cmnt\">/*** HTML COMPONENT ***/</span>\r\n&lt;<span class=\"el\">Breadcrumbs</span>\r\n  <span class=\"attr\">color</span>=\"<span class=\"val\">${color}</span>\"\r\n  <span class=\"attr\">collapseFrom</span>=\"<span class=\"val\">${from}</span>\"\r\n  <span class=\"attr\">items</span>={<span class=\"js\">CrumbsItems</span>}\r\n/&gt;\r\n\r\n<span class=\"cmnt\">/*** JS DATA ***/</span>\r\nconst CrumbsItems = [\r\n  { href: \"#\", icon: \"folder-close\", text: \"Home\", intent: \"warning\" },\r\n  { href: \"#\", icon: \"folder-close\", text: \"Program Files\" },\r\n  { href: \"#\", icon: \"folder-close\", text: \"Common Files\" },\r\n  { href: \"#\", icon: \"folder-close\", text: \"Services\" },\r\n  { href: \"#\", icon: \"folder-close\", text: \"Payout\" },\r\n  { icon: \"document\", text: \"invoice.txt\", current: true }\r\n];\r\n`;\r\n\r\n  return <Overview overview={OverviewText} apidata={APIData} code={Code} />;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}