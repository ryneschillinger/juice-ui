{"ast":null,"code":"var _jsxFileName = \"/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/src/@setproduct-ui/demo/Chips/api.jsx\";\nimport React from \"react\";\nimport { Overview } from \"../OverviewComponent\";\nimport { OverviewTemplate } from \"../OverviewText\";\nexport const API = props => {\n  const name = props.name,\n        type = props.type,\n        color = props.color,\n        isAva = props.isAva,\n        dis = props.dis,\n        isSelect = props.isSelect,\n        isIcon = props.isIcon,\n        isRIcon = props.isRIcon,\n        isRemovable = props.isRemovable,\n        isNumber = props.isNumber,\n        isRound = props.isRound;\n  /**Overview */\n\n  const OverviewText = React.createElement(OverviewTemplate, {\n    name: name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  });\n  /**API */\n\n  const APIData = [{\n    prop: \"type\",\n    type: React.createElement(React.Fragment, null, \"string = \", React.createElement(\"i\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"def\")),\n    desc: React.createElement(React.Fragment, null, \"This prop set the shape of the component. Possible states:\", React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \" def | dense \"), \". The default state is \", React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"def\"), \".\")\n  }, {\n    prop: \"view\",\n    type: React.createElement(React.Fragment, null, \"string = \", React.createElement(\"i\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"smooth\")),\n    desc: React.createElement(React.Fragment, null, \"This prop set the view of the component. Possible states:\", React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \" smooth | outlined \"), \". The default state is \", React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"smooth\"), \".\")\n  }, {\n    prop: \"color\",\n    type: React.createElement(React.Fragment, null, \"string = \", React.createElement(\"i\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"default\")),\n    desc: React.createElement(React.Fragment, null, \"This prop set the color of the component. Possible states:\", React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"default | primary | warning | danger | success | primary_alt | warning_alt | danger_alt | success_alt\"), \". The default state is \", React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"default\"), \".\")\n  }, {\n    prop: \"className\",\n    type: React.createElement(React.Fragment, null, \"string\"),\n    desc: \"A space-delimited list of class names to pass along to a child element.\"\n  }, {\n    prop: \"tag\",\n    type: React.createElement(React.Fragment, null, \"string\"),\n    desc: React.createElement(React.Fragment, null, \"Text label for the control.\")\n  }, {\n    prop: \"round\",\n    type: React.createElement(React.Fragment, null, \"boolean = true\"),\n    desc: React.createElement(React.Fragment, null, \"Whether this tag should have rounded ends.\")\n  }, {\n    prop: \"removable\",\n    type: React.createElement(React.Fragment, null, \"boolean\"),\n    desc: React.createElement(React.Fragment, null, \"Show remove button.\")\n  }, {\n    prop: \"onRemove\",\n    type: React.createElement(React.Fragment, null, \"func\"),\n    desc: React.createElement(React.Fragment, null, \"Event handler for remove button.\")\n  }, {\n    prop: \"withTick\",\n    type: React.createElement(React.Fragment, null, \"boolean\"),\n    desc: React.createElement(React.Fragment, null, \"Render Tick animation.\")\n  }, {\n    prop: \"withAvatar\",\n    type: React.createElement(React.Fragment, null, \"string\"),\n    desc: React.createElement(React.Fragment, null, \"Render avatar image before the text.\")\n  }, {\n    prop: \"withNumber\",\n    type: React.createElement(React.Fragment, null, \"string\"),\n    desc: React.createElement(React.Fragment, null, \"Render number before the text.\")\n  }, {\n    prop: \"icon\",\n    type: React.createElement(React.Fragment, null, \"string | element\"),\n    desc: React.createElement(React.Fragment, null, \"Name of a Blueprint UI icon (or an icon element) to render before the text. For example, \", React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"\\\"tick\\\"\"), \" or\", React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"<Icon icon=\\\"tick\\\" iconSize={24} />\"))\n  }, {\n    prop: \"rightIcon\",\n    type: React.createElement(React.Fragment, null, \"string | element\"),\n    desc: React.createElement(React.Fragment, null, \"Name of a Blueprint UI icon (or an icon element) to render before the text.\")\n  }, {\n    prop: \"disabled\",\n    type: React.createElement(React.Fragment, null, \"boolean = \", React.createElement(\"i\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"false\")),\n    desc: React.createElement(React.Fragment, null, \"If set to true, the component will be disabled. The default state is\", React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"false\"))\n  }];\n  /** Code source */\n\n  const Code = \"&lt;<span class=\\\"val\\\">Chips</span>\\n      <i>type</i> = '\".concat(type, \"' \\n      <i>color</i> = '\").concat(color, \"' \\n      <i>tag</i> = \").concat(isAva ? \"'Mr. Bigman'\" : \"'Locate'\", \"\\n      <i>withTick</i> = \").concat(isSelect ? \"{true}\" : \"{false}\", \"\\n      <i>icon</i> = \").concat(isIcon && \"'locate'\", \"\\n      <i>rightIcon</i> = \").concat(isRIcon ? \"'import'\" : \"{null}\", \"\\n      <i>removable</i> = \").concat(isRemovable ? \"{true}\" : \"{false}\", \"\\n      <i>onRemove</i> = \").concat(isRemovable ? \"{() => removeFunction()}\" : \"{null}\", \"\\n      <i>disabled</i> = \").concat(dis ? \"{true}\" : \"{false}\", \" \\n      <i>round</i> = \").concat(isAva ? \"{true}\" : isRound ? \"{true}\" : \"{false}\", \" \\n      <i>withNumber</i> = \").concat(isNumber ? \"123\" : \"{null}\", \" \\n      <i>withAvatar</i> = \").concat(isAva ? \"{Avatar_file}\" : \"{null}\", \" \\n />\\n \");\n  return React.createElement(Overview, {\n    overview: OverviewText,\n    apidata: APIData,\n    code: Code,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  });\n};","map":{"version":3,"sources":["/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/src/@setproduct-ui/demo/Chips/api.jsx"],"names":["React","Overview","OverviewTemplate","API","props","name","type","color","isAva","dis","isSelect","isIcon","isRIcon","isRemovable","isNumber","isRound","OverviewText","APIData","prop","desc","Code"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Overview } from \"../OverviewComponent\";\r\nimport { OverviewTemplate } from \"../OverviewText\";\r\n\r\nexport const API = props => {\r\n  const {\r\n    name,\r\n    type,\r\n    color,\r\n    isAva,\r\n    dis,\r\n    isSelect,\r\n    isIcon,\r\n    isRIcon,\r\n    isRemovable,\r\n    isNumber,\r\n    isRound\r\n  } = props;\r\n\r\n  /**Overview */\r\n  const OverviewText = <OverviewTemplate name={name} />;\r\n\r\n  /**API */\r\n  const APIData = [\r\n    {\r\n      prop: \"type\",\r\n      type: (\r\n        <>\r\n          string = <i>def</i>\r\n        </>\r\n      ),\r\n      desc: (\r\n        <>\r\n          This prop set the shape of the component. Possible states:\r\n          <b> def | dense </b>. The default state is <b>def</b>.\r\n        </>\r\n      )\r\n    },\r\n    {\r\n      prop: \"view\",\r\n      type: (\r\n        <>\r\n          string = <i>smooth</i>\r\n        </>\r\n      ),\r\n      desc: (\r\n        <>\r\n          This prop set the view of the component. Possible states:\r\n          <b> smooth | outlined </b>. The default state is <b>smooth</b>.\r\n        </>\r\n      )\r\n    },\r\n    {\r\n      prop: \"color\",\r\n      type: (\r\n        <>\r\n          string = <i>default</i>\r\n        </>\r\n      ),\r\n      desc: (\r\n        <>\r\n          This prop set the color of the component. Possible states:\r\n          <b>\r\n            default | primary | warning | danger | success | primary_alt |\r\n            warning_alt | danger_alt | success_alt\r\n          </b>\r\n          . The default state is <b>default</b>.\r\n        </>\r\n      )\r\n    },\r\n    {\r\n      prop: \"className\",\r\n      type: <>string</>,\r\n      desc:\r\n        \"A space-delimited list of class names to pass along to a child element.\"\r\n    },\r\n    {\r\n      prop: \"tag\",\r\n      type: <>string</>,\r\n      desc: <>Text label for the control.</>\r\n    },\r\n    {\r\n      prop: \"round\",\r\n      type: <>boolean = true</>,\r\n      desc: <>Whether this tag should have rounded ends.</>\r\n    },\r\n    {\r\n      prop: \"removable\",\r\n      type: <>boolean</>,\r\n      desc: <>Show remove button.</>\r\n    },\r\n    {\r\n      prop: \"onRemove\",\r\n      type: <>func</>,\r\n      desc: <>Event handler for remove button.</>\r\n    },\r\n    {\r\n      prop: \"withTick\",\r\n      type: <>boolean</>,\r\n      desc: <>Render Tick animation.</>\r\n    },\r\n    {\r\n      prop: \"withAvatar\",\r\n      type: <>string</>,\r\n      desc: <>Render avatar image before the text.</>\r\n    },\r\n    {\r\n      prop: \"withNumber\",\r\n      type: <>string</>,\r\n      desc: <>Render number before the text.</>\r\n    },\r\n    {\r\n      prop: \"icon\",\r\n      type: <>string | element</>,\r\n      desc: (\r\n        <>\r\n          Name of a Blueprint UI icon (or an icon element) to render before the\r\n          text. For example, <b>\"tick\"</b> or\r\n          <b>{`<Icon icon=\"tick\" iconSize={24} />`}</b>\r\n        </>\r\n      )\r\n    },\r\n    {\r\n      prop: \"rightIcon\",\r\n      type: <>string | element</>,\r\n      desc: (\r\n        <>\r\n          Name of a Blueprint UI icon (or an icon element) to render before the\r\n          text.\r\n        </>\r\n      )\r\n    },\r\n    {\r\n      prop: \"disabled\",\r\n      type: (\r\n        <>\r\n          boolean = <i>false</i>\r\n        </>\r\n      ),\r\n      desc: (\r\n        <>\r\n          If set to true, the component will be disabled. The default state is\r\n          <b>false</b>\r\n        </>\r\n      )\r\n    }\r\n  ];\r\n\r\n  /** Code source */\r\n  const Code = `&lt;<span class=\"val\">Chips</span>\r\n      <i>type</i> = '${type}' \r\n      <i>color</i> = '${color}' \r\n      <i>tag</i> = ${isAva ? \"'Mr. Bigman'\" : \"'Locate'\"}\r\n      <i>withTick</i> = ${isSelect ? \"{true}\" : \"{false}\"}\r\n      <i>icon</i> = ${isIcon && \"'locate'\"}\r\n      <i>rightIcon</i> = ${isRIcon ? \"'import'\" : \"{null}\"}\r\n      <i>removable</i> = ${isRemovable ? \"{true}\" : \"{false}\"}\r\n      <i>onRemove</i> = ${isRemovable ? \"{() => removeFunction()}\" : \"{null}\"}\r\n      <i>disabled</i> = ${dis ? \"{true}\" : \"{false}\"} \r\n      <i>round</i> = ${isAva ? \"{true}\" : isRound ? \"{true}\" : \"{false}\"} \r\n      <i>withNumber</i> = ${isNumber ? \"123\" : \"{null}\"} \r\n      <i>withAvatar</i> = ${isAva ? \"{Avatar_file}\" : \"{null}\"} \r\n />\r\n `;\r\n\r\n  return <Overview overview={OverviewText} apidata={APIData} code={Code} />;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}