{"ast":null,"code":"var _jsxFileName = \"/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/src/@setproduct-ui/demo/DateTime/DateRangePicker/api.jsx\";\nimport React from \"react\";\nimport { Overview } from \"../../OverviewComponent\";\nimport { OverviewTemplate } from \"../../OverviewText\";\nexport const API = props => {\n  const name = props.name,\n        type = props.type,\n        view = props.view,\n        color = props.color,\n        icon = props.icon,\n        rightIcon = props.rightIcon,\n        fill = props.fill,\n        dis = props.dis,\n        dense = props.dense,\n        showShortcuts = props.showShortcuts,\n        allowSingleDayRange = props.allowSingleDayRange;\n  /**Overview */\n\n  const OverviewText = React.createElement(OverviewTemplate, {\n    name: name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  });\n  /**API */\n\n  const APIData = [{\n    prop: \"type\",\n    type: React.createElement(React.Fragment, null, \"string = \", React.createElement(\"i\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"default\")),\n    desc: React.createElement(React.Fragment, null, \"This prop set shape of the component. Possible states:\", \" \", React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \" default | card | action | circle | icon\"), \". Default state is\", \" \", React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"default\"), \".\")\n  }, {\n    prop: \"view\",\n    type: React.createElement(React.Fragment, null, \"tring = \", React.createElement(\"i\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"filled\")),\n    desc: React.createElement(React.Fragment, null, \" \", \"This prop set view of the component. Possible states:\", \" \", React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \" filled | flat | smooth | outlined | raised \"), \". Default state is\", \" \", React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"filled\"), \".\")\n  }, {\n    prop: \"color\",\n    type: React.createElement(React.Fragment, null, \"string = \", React.createElement(\"i\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"default\")),\n    desc: React.createElement(React.Fragment, null, \" \", \"This prop set color of the component. Possible states:\", \" \", React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \" \", \"default | primary | warning | danger | success | primary_alt | warning_alt | danger_alt | success_alt\", \" \"), \". Default state is \", React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"default\"), \".\")\n  }, {\n    prop: \"className\",\n    type: \"string\",\n    desc: \"A space-delimited list of class names to pass along to a child element.\"\n  }, {\n    prop: \"text\",\n    type: \"string\",\n    desc: React.createElement(React.Fragment, null, \"Action text. Havn't default state.\")\n  }, {\n    prop: \"dense\",\n    type: \"boolean\",\n    desc: React.createElement(React.Fragment, null, \"Whether this button should use minimal styles.\")\n  }, {\n    prop: \"fill\",\n    type: React.createElement(React.Fragment, null, \"boolean = \", React.createElement(\"i\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"false\")),\n    desc: React.createElement(React.Fragment, null, \"Whether this button should expand to fill its container. Default state is \", React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"false\"), \".\")\n  }, {\n    prop: \"icon\",\n    type: \"string \",\n    desc: React.createElement(React.Fragment, null, \"Name of a Blueprint UI icon to render before the text. For example,\", \" \", React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"\\\"tick\\\"\"))\n  }, {\n    prop: \"rightIcon\",\n    type: \"string | element\",\n    desc: React.createElement(React.Fragment, null, \"Name of a Blueprint UI icon (or an icon element) to render before the text.\")\n  }, {\n    prop: \"disabled\",\n    type: React.createElement(React.Fragment, null, \"boolean = \", React.createElement(\"i\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"false\")),\n    desc: React.createElement(React.Fragment, null, \"If set to true, the button will be disabled. Default state is\", \" \", React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"false\"))\n  }, {\n    prop: \"onClick\",\n    type: \"func\",\n    desc: React.createElement(React.Fragment, null, \"Click event handler.\")\n  }, {\n    prop: \"elementRef\",\n    type: \"any\",\n    desc: React.createElement(React.Fragment, null, \"A ref handler that receives the native HTML element backing this component.\")\n  }];\n  /** Code source */\n\n  const Code = \"  \\n  < DateRangePicker\\n      <i>type</i> = '\".concat(type, \"' \\n      <i>view</i> = '\").concat(view, \"' \\n      <i>color</i> = '\").concat(color, \"' \\n      <i>dense</i> = {\").concat(dense ? \"true\" : \"false\", \"}\\n      \").concat(type !== \"circle\" && type !== \"icon\" ? \"<i>text</i> = 'Show code'\" : \"\", \"\\n      <i>icon</i> = \").concat(type === \"circle\" || type === \"icon\" || icon === true ? \"'plus'\" : \"{false}\", \"\\n      <i>rightIcon</i> = \").concat(type !== \"circle\" && type !== \"card\" && type !== \"icon\" && rightIcon === true ? \"'history'\" : \"{false}\", \"\\n      <i>disabled</i> = \").concat(dis ? \"{true}\" : \"{false}\", \"\\n      <i>fill</i> = \").concat(fill ? \"{true}\" : \"{false}\", \"\\n      <i>showShortcuts</i> = {\").concat(showShortcuts, \"}\\n      <i>allowSingleDayRange</i> = {\").concat(allowSingleDayRange, \"}\\n  />\\n \");\n  return React.createElement(Overview, {\n    overview: OverviewText,\n    apidata: APIData,\n    code: Code,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  });\n};","map":{"version":3,"sources":["/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/src/@setproduct-ui/demo/DateTime/DateRangePicker/api.jsx"],"names":["React","Overview","OverviewTemplate","API","props","name","type","view","color","icon","rightIcon","fill","dis","dense","showShortcuts","allowSingleDayRange","OverviewText","APIData","prop","desc","Code"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,yBAAzB;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AAEA,OAAO,MAAMC,GAAG,GAAGC,KAAK,IAAI;AAAA,QAExBC,IAFwB,GAatBD,KAbsB,CAExBC,IAFwB;AAAA,QAGxBC,IAHwB,GAatBF,KAbsB,CAGxBE,IAHwB;AAAA,QAIxBC,IAJwB,GAatBH,KAbsB,CAIxBG,IAJwB;AAAA,QAKxBC,KALwB,GAatBJ,KAbsB,CAKxBI,KALwB;AAAA,QAMxBC,IANwB,GAatBL,KAbsB,CAMxBK,IANwB;AAAA,QAOxBC,SAPwB,GAatBN,KAbsB,CAOxBM,SAPwB;AAAA,QAQxBC,IARwB,GAatBP,KAbsB,CAQxBO,IARwB;AAAA,QASxBC,GATwB,GAatBR,KAbsB,CASxBQ,GATwB;AAAA,QAUxBC,KAVwB,GAatBT,KAbsB,CAUxBS,KAVwB;AAAA,QAWxBC,aAXwB,GAatBV,KAbsB,CAWxBU,aAXwB;AAAA,QAYxBC,mBAZwB,GAatBX,KAbsB,CAYxBW,mBAZwB;AAe1B;;AACA,QAAMC,YAAY,GAAG,oBAAC,gBAAD;AAAkB,IAAA,IAAI,EAAEX,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAArB;AAEA;;AACA,QAAMY,OAAO,GAAG,CACd;AACEC,IAAAA,IAAI,EAAE,MADR;AAEEZ,IAAAA,IAAI,EACF,uDACW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADX,CAHJ;AAOEa,IAAAA,IAAI,EACF,oGACyD,GADzD,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDAFF,wBAEoE,GAFpE,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHF;AARJ,GADc,EAgBd;AACED,IAAAA,IAAI,EAAE,MADR;AAEEZ,IAAAA,IAAI,EACF,sDACU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADV,CAHJ;AAOEa,IAAAA,IAAI,EACF,0CACG,GADH,2DAEwD,GAFxD,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDAHF,wBAGwE,GAHxE,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AARJ,GAhBc,EAgCd;AACED,IAAAA,IAAI,EAAE,OADR;AAEEZ,IAAAA,IAAI,EACF,uDACW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADX,CAHJ;AAOEa,IAAAA,IAAI,EACF,0CACG,GADH,4DAEyD,GAFzD,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,GADH,2GAGyC,GAHzC,CAHF,yBAQqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBARrB;AARJ,GAhCc,EAoDd;AACED,IAAAA,IAAI,EAAE,WADR;AAEEZ,IAAAA,IAAI,EAAE,QAFR;AAGEa,IAAAA,IAAI,EACF;AAJJ,GApDc,EA0Dd;AACED,IAAAA,IAAI,EAAE,MADR;AAEEZ,IAAAA,IAAI,EAAE,QAFR;AAGEa,IAAAA,IAAI,EAAE;AAHR,GA1Dc,EA+Dd;AACED,IAAAA,IAAI,EAAE,OADR;AAEEZ,IAAAA,IAAI,EAAE,SAFR;AAGEa,IAAAA,IAAI,EAAE;AAHR,GA/Dc,EAoEd;AACED,IAAAA,IAAI,EAAE,MADR;AAEEZ,IAAAA,IAAI,EACF,wDACY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADZ,CAHJ;AAOEa,IAAAA,IAAI,EACF,wHAEK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFL;AARJ,GApEc,EAkFd;AACED,IAAAA,IAAI,EAAE,MADR;AAEEZ,IAAAA,IAAI,EAAE,SAFR;AAGEa,IAAAA,IAAI,EACF,iHACsE,GADtE,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAJJ,GAlFc,EA4Fd;AACED,IAAAA,IAAI,EAAE,WADR;AAEEZ,IAAAA,IAAI,EAAE,kBAFR;AAGEa,IAAAA,IAAI,EACF;AAJJ,GA5Fc,EAsGd;AACED,IAAAA,IAAI,EAAE,UADR;AAEEZ,IAAAA,IAAI,EACF,wDACY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADZ,CAHJ;AAOEa,IAAAA,IAAI,EACF,2GACgE,GADhE,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF;AARJ,GAtGc,EAoHd;AACED,IAAAA,IAAI,EAAE,SADR;AAEEZ,IAAAA,IAAI,EAAE,MAFR;AAGEa,IAAAA,IAAI,EAAE;AAHR,GApHc,EAyHd;AACED,IAAAA,IAAI,EAAE,YADR;AAEEZ,IAAAA,IAAI,EAAE,KAFR;AAGEa,IAAAA,IAAI,EACF;AAJJ,GAzHc,CAAhB;AAqIA;;AACA,QAAMC,IAAI,2DAEWd,IAFX,sCAGWC,IAHX,uCAIYC,KAJZ,uCAKYK,KAAK,GAAG,MAAH,GAAY,OAL7B,sBAMJP,IAAI,KAAK,QAAT,IAAqBA,IAAI,KAAK,MAA9B,GAAuC,2BAAvC,GAAqE,EANjE,mCAQJA,IAAI,KAAK,QAAT,IAAqBA,IAAI,KAAK,MAA9B,IAAwCG,IAAI,KAAK,IAAjD,GACI,QADJ,GAEI,SAVA,wCAaJH,IAAI,KAAK,QAAT,IACAA,IAAI,KAAK,MADT,IAEAA,IAAI,KAAK,MAFT,IAGAI,SAAS,KAAK,IAHd,GAII,WAJJ,GAKI,SAlBA,uCAoBcE,GAAG,GAAG,QAAH,GAAc,SApB/B,mCAqBUD,IAAI,GAAG,QAAH,GAAc,SArB5B,6CAsBoBG,aAtBpB,oDAuB0BC,mBAvB1B,eAAV;AA2BA,SAAO,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAEC,YAApB;AAAkC,IAAA,OAAO,EAAEC,OAA3C;AAAoD,IAAA,IAAI,EAAEG,IAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CArLM","sourcesContent":["import React from \"react\";\r\nimport { Overview } from \"../../OverviewComponent\";\r\nimport { OverviewTemplate } from \"../../OverviewText\";\r\n\r\nexport const API = props => {\r\n  const {\r\n    name,\r\n    type,\r\n    view,\r\n    color,\r\n    icon,\r\n    rightIcon,\r\n    fill,\r\n    dis,\r\n    dense,\r\n    showShortcuts,\r\n    allowSingleDayRange\r\n  } = props;\r\n\r\n  /**Overview */\r\n  const OverviewText = <OverviewTemplate name={name} />;\r\n\r\n  /**API */\r\n  const APIData = [\r\n    {\r\n      prop: \"type\",\r\n      type: (\r\n        <>\r\n          string = <i>default</i>\r\n        </>\r\n      ),\r\n      desc: (\r\n        <>\r\n          This prop set shape of the component. Possible states:{\" \"}\r\n          <b> default | card | action | circle | icon</b>. Default state is{\" \"}\r\n          <b>default</b>.\r\n        </>\r\n      )\r\n    },\r\n    {\r\n      prop: \"view\",\r\n      type: (\r\n        <>\r\n          tring = <i>filled</i>\r\n        </>\r\n      ),\r\n      desc: (\r\n        <>\r\n          {\" \"}\r\n          This prop set view of the component. Possible states:{\" \"}\r\n          <b> filled | flat | smooth | outlined | raised </b>. Default state is{\" \"}\r\n          <b>filled</b>.\r\n        </>\r\n      )\r\n    },\r\n    {\r\n      prop: \"color\",\r\n      type: (\r\n        <>\r\n          string = <i>default</i>\r\n        </>\r\n      ),\r\n      desc: (\r\n        <>\r\n          {\" \"}\r\n          This prop set color of the component. Possible states:{\" \"}\r\n          <b>\r\n            {\" \"}\r\n            default | primary | warning | danger | success | primary_alt |\r\n            warning_alt | danger_alt | success_alt{\" \"}\r\n          </b>\r\n          . Default state is <b>default</b>.\r\n        </>\r\n      )\r\n    },\r\n    {\r\n      prop: \"className\",\r\n      type: \"string\",\r\n      desc:\r\n        \"A space-delimited list of class names to pass along to a child element.\"\r\n    },\r\n    {\r\n      prop: \"text\",\r\n      type: \"string\",\r\n      desc: <>Action text. Havn't default state.</>\r\n    },\r\n    {\r\n      prop: \"dense\",\r\n      type: \"boolean\",\r\n      desc: <>Whether this button should use minimal styles.</>\r\n    },\r\n    {\r\n      prop: \"fill\",\r\n      type: (\r\n        <>\r\n          boolean = <i>false</i>\r\n        </>\r\n      ),\r\n      desc: (\r\n        <>\r\n          Whether this button should expand to fill its container. Default state\r\n          is <b>false</b>.\r\n        </>\r\n      )\r\n    },\r\n    {\r\n      prop: \"icon\",\r\n      type: \"string \",\r\n      desc: (\r\n        <>\r\n          Name of a Blueprint UI icon to render before the text. For example,{\" \"}\r\n          <b>\"tick\"</b>\r\n        </>\r\n      )\r\n    },\r\n    {\r\n      prop: \"rightIcon\",\r\n      type: \"string | element\",\r\n      desc: (\r\n        <>\r\n          Name of a Blueprint UI icon (or an icon element) to render before the\r\n          text.\r\n        </>\r\n      )\r\n    },\r\n    {\r\n      prop: \"disabled\",\r\n      type: (\r\n        <>\r\n          boolean = <i>false</i>\r\n        </>\r\n      ),\r\n      desc: (\r\n        <>\r\n          If set to true, the button will be disabled. Default state is{\" \"}\r\n          <b>false</b>\r\n        </>\r\n      )\r\n    },\r\n    {\r\n      prop: \"onClick\",\r\n      type: \"func\",\r\n      desc: <>Click event handler.</>\r\n    },\r\n    {\r\n      prop: \"elementRef\",\r\n      type: \"any\",\r\n      desc: (\r\n        <>\r\n          A ref handler that receives the native HTML element backing this\r\n          component.\r\n        </>\r\n      )\r\n    }\r\n  ];\r\n\r\n  /** Code source */\r\n  const Code = `  \r\n  < DateRangePicker\r\n      <i>type</i> = '${type}' \r\n      <i>view</i> = '${view}' \r\n      <i>color</i> = '${color}' \r\n      <i>dense</i> = {${dense ? \"true\" : \"false\"}}\r\n      ${type !== \"circle\" && type !== \"icon\" ? \"<i>text</i> = 'Show code'\" : \"\"}\r\n      <i>icon</i> = ${\r\n        type === \"circle\" || type === \"icon\" || icon === true\r\n          ? \"'plus'\"\r\n          : \"{false}\"\r\n      }\r\n      <i>rightIcon</i> = ${\r\n        type !== \"circle\" &&\r\n        type !== \"card\" &&\r\n        type !== \"icon\" &&\r\n        rightIcon === true\r\n          ? \"'history'\"\r\n          : \"{false}\"\r\n      }\r\n      <i>disabled</i> = ${dis ? \"{true}\" : \"{false}\"}\r\n      <i>fill</i> = ${fill ? \"{true}\" : \"{false}\"}\r\n      <i>showShortcuts</i> = {${showShortcuts}}\r\n      <i>allowSingleDayRange</i> = {${allowSingleDayRange}}\r\n  />\r\n `;\r\n\r\n  return <Overview overview={OverviewText} apidata={APIData} code={Code} />;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}