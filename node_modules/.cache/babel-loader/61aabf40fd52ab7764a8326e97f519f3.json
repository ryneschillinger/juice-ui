{"ast":null,"code":"import _objectWithoutProperties from \"/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/src/@candy-ui/core/Badge/Badge.jsx\";\nimport React from \"react\";\nimport cx from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport Type from \"./badge.module.css\";\nimport View from \"./view.module.css\";\nimport Color from \"../../styles/color.module.css\";\nconst Badge = React.forwardRef(function Badge(props, ref) {\n  const _props$Component = props.Component,\n        Component = _props$Component === void 0 ? \"span\" : _props$Component,\n        _props$value = props.value,\n        value = _props$value === void 0 ? \"\" : _props$value,\n        _props$view = props.view,\n        view = _props$view === void 0 ? \"filled\" : _props$view,\n        _props$color = props.color,\n        color = _props$color === void 0 ? \"primary\" : _props$color,\n        _props$dense = props.dense,\n        dense = _props$dense === void 0 ? false : _props$dense,\n        _props$dot = props.dot,\n        dot = _props$dot === void 0 ? false : _props$dot,\n        _props$hide = props.hide,\n        hide = _props$hide === void 0 ? false : _props$hide,\n        _props$left = props.left,\n        left = _props$left === void 0 ? false : _props$left,\n        _props$bottom = props.bottom,\n        bottom = _props$bottom === void 0 ? false : _props$bottom,\n        children = props.children,\n        className = props.className,\n        rest = _objectWithoutProperties(props, [\"Component\", \"value\", \"view\", \"color\", \"dense\", \"dot\", \"hide\", \"left\", \"bottom\", \"children\", \"className\"]);\n\n  const badgeClasses = cx(dot ? Type[\"dot\"] : dense ? Type[\"dense\"] : Type[\"default\"], left ? Type[\"left\"] : Type[\"right\"], bottom ? Type[\"bottom\"] : Type[\"top\"], hide ? Type[\"hide\"] : Type[\"show\"], View[view], Color[color]);\n  return React.createElement(Component, Object.assign({}, rest, {\n    className: cx(Type[\"container\"], className),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), children, React.createElement(\"span\", {\n    ref: ref,\n    className: badgeClasses,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, !dot && value));\n});\nBadge.propTypes = {\n  Component: PropTypes.string,\n  value: PropTypes.string,\n\n  /**\r\n   ` The view of the component.\r\n   * Variants: `flat` `smooth` `outlined` `raised`\r\n   * Default value (if undefined): `filled` `\r\n   */\n  view: PropTypes.oneOf([\"filled\", \"smooth\", \"outlined\"]),\n\n  /**\r\n  ` The color of the component.\r\n   * Variants: `primary` `warning` `danger` `success` `primaryAlt` `warningAlt` `dangerAlt` `successAlt`\r\n   * Default value (if undefined): `default` `\r\n   */\n  color: PropTypes.oneOf([\"default\", \"primary\", \"warning\", \"danger\", \"success\", \"primary_alt\", \"warning_alt\", \"danger_alt\", \"success_alt\"]),\n\n  /**\r\n   * Dense size\r\n   */\n  dense: PropTypes.bool,\n\n  /**\r\n   * Dot\r\n   */\n  dot: PropTypes.bool,\n\n  /**\r\n   * Hide badge\r\n   */\n  hide: PropTypes.bool,\n  left: PropTypes.bool,\n  botoom: PropTypes.bool\n};\nexport default Badge;","map":{"version":3,"sources":["/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/src/@candy-ui/core/Badge/Badge.jsx"],"names":["React","cx","PropTypes","Type","View","Color","Badge","forwardRef","props","ref","Component","value","view","color","dense","dot","hide","left","bottom","children","className","rest","badgeClasses","propTypes","string","oneOf","bool","botoom"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,KAAP,MAAkB,+BAAlB;AAEA,MAAMC,KAAK,GAAGN,KAAK,CAACO,UAAN,CAAiB,SAASD,KAAT,CAAeE,KAAf,EAAsBC,GAAtB,EAA2B;AAAA,2BAcpDD,KAdoD,CAEtDE,SAFsD;AAAA,QAEtDA,SAFsD,iCAE1C,MAF0C;AAAA,uBAcpDF,KAdoD,CAGtDG,KAHsD;AAAA,QAGtDA,KAHsD,6BAG9C,EAH8C;AAAA,sBAcpDH,KAdoD,CAItDI,IAJsD;AAAA,QAItDA,IAJsD,4BAI/C,QAJ+C;AAAA,uBAcpDJ,KAdoD,CAKtDK,KALsD;AAAA,QAKtDA,KALsD,6BAK9C,SAL8C;AAAA,uBAcpDL,KAdoD,CAMtDM,KANsD;AAAA,QAMtDA,KANsD,6BAM9C,KAN8C;AAAA,qBAcpDN,KAdoD,CAOtDO,GAPsD;AAAA,QAOtDA,GAPsD,2BAOhD,KAPgD;AAAA,sBAcpDP,KAdoD,CAQtDQ,IARsD;AAAA,QAQtDA,IARsD,4BAQ/C,KAR+C;AAAA,sBAcpDR,KAdoD,CAStDS,IATsD;AAAA,QAStDA,IATsD,4BAS/C,KAT+C;AAAA,wBAcpDT,KAdoD,CAUtDU,MAVsD;AAAA,QAUtDA,MAVsD,8BAU7C,KAV6C;AAAA,QAWtDC,QAXsD,GAcpDX,KAdoD,CAWtDW,QAXsD;AAAA,QAYtDC,SAZsD,GAcpDZ,KAdoD,CAYtDY,SAZsD;AAAA,QAanDC,IAbmD,4BAcpDb,KAdoD;;AAgBxD,QAAMc,YAAY,GAAGrB,EAAE,CACrBc,GAAG,GAAGZ,IAAI,CAAC,KAAD,CAAP,GAAiBW,KAAK,GAAGX,IAAI,CAAC,OAAD,CAAP,GAAmBA,IAAI,CAAC,SAAD,CAD3B,EAErBc,IAAI,GAAGd,IAAI,CAAC,MAAD,CAAP,GAAkBA,IAAI,CAAC,OAAD,CAFL,EAGrBe,MAAM,GAAGf,IAAI,CAAC,QAAD,CAAP,GAAoBA,IAAI,CAAC,KAAD,CAHT,EAIrBa,IAAI,GAAGb,IAAI,CAAC,MAAD,CAAP,GAAkBA,IAAI,CAAC,MAAD,CAJL,EAKrBC,IAAI,CAACQ,IAAD,CALiB,EAMrBP,KAAK,CAACQ,KAAD,CANgB,CAAvB;AASA,SACE,oBAAC,SAAD,oBAAeQ,IAAf;AAAqB,IAAA,SAAS,EAAEpB,EAAE,CAACE,IAAI,CAAC,WAAD,CAAL,EAAoBiB,SAApB,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGD,QADH,EAEE;AAAM,IAAA,GAAG,EAAEV,GAAX;AAAgB,IAAA,SAAS,EAAEa,YAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACP,GAAD,IAAQJ,KADX,CAFF,CADF;AAQD,CAjCa,CAAd;AAmCAL,KAAK,CAACiB,SAAN,GAAkB;AAChBb,EAAAA,SAAS,EAAER,SAAS,CAACsB,MADL;AAEhBb,EAAAA,KAAK,EAAET,SAAS,CAACsB,MAFD;;AAGhB;;;;;AAKAZ,EAAAA,IAAI,EAAEV,SAAS,CAACuB,KAAV,CAAgB,CAAC,QAAD,EAAW,QAAX,EAAqB,UAArB,CAAhB,CARU;;AAShB;;;;;AAKAZ,EAAAA,KAAK,EAAEX,SAAS,CAACuB,KAAV,CAAgB,CACrB,SADqB,EAErB,SAFqB,EAGrB,SAHqB,EAIrB,QAJqB,EAKrB,SALqB,EAMrB,aANqB,EAOrB,aAPqB,EAQrB,YARqB,EASrB,aATqB,CAAhB,CAdS;;AAyBhB;;;AAGAX,EAAAA,KAAK,EAAEZ,SAAS,CAACwB,IA5BD;;AA6BhB;;;AAGAX,EAAAA,GAAG,EAAEb,SAAS,CAACwB,IAhCC;;AAiChB;;;AAGAV,EAAAA,IAAI,EAAEd,SAAS,CAACwB,IApCA;AAqChBT,EAAAA,IAAI,EAAEf,SAAS,CAACwB,IArCA;AAsChBC,EAAAA,MAAM,EAAEzB,SAAS,CAACwB;AAtCF,CAAlB;AAyCA,eAAepB,KAAf","sourcesContent":["import React from \"react\";\r\nimport cx from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Type from \"./badge.module.css\";\r\nimport View from \"./view.module.css\";\r\nimport Color from \"../../styles/color.module.css\";\r\n\r\nconst Badge = React.forwardRef(function Badge(props, ref) {\r\n  const {\r\n    Component = \"span\",\r\n    value = \"\",\r\n    view = \"filled\",\r\n    color = \"primary\",\r\n    dense = false,\r\n    dot = false,\r\n    hide = false,\r\n    left = false,\r\n    bottom = false,\r\n    children,\r\n    className,\r\n    ...rest\r\n  } = props;\r\n\r\n  const badgeClasses = cx(\r\n    dot ? Type[\"dot\"] : dense ? Type[\"dense\"] : Type[\"default\"],\r\n    left ? Type[\"left\"] : Type[\"right\"],\r\n    bottom ? Type[\"bottom\"] : Type[\"top\"],\r\n    hide ? Type[\"hide\"] : Type[\"show\"],\r\n    View[view],\r\n    Color[color]\r\n  );\r\n\r\n  return (\r\n    <Component {...rest} className={cx(Type[\"container\"], className)}>\r\n      {children}\r\n      <span ref={ref} className={badgeClasses}>\r\n        {!dot && value}\r\n      </span>\r\n    </Component>\r\n  );\r\n});\r\n\r\nBadge.propTypes = {\r\n  Component: PropTypes.string,\r\n  value: PropTypes.string,\r\n  /**\r\n   ` The view of the component.\r\n   * Variants: `flat` `smooth` `outlined` `raised`\r\n   * Default value (if undefined): `filled` `\r\n   */\r\n  view: PropTypes.oneOf([\"filled\", \"smooth\", \"outlined\"]),\r\n  /**\r\n  ` The color of the component.\r\n   * Variants: `primary` `warning` `danger` `success` `primaryAlt` `warningAlt` `dangerAlt` `successAlt`\r\n   * Default value (if undefined): `default` `\r\n   */\r\n  color: PropTypes.oneOf([\r\n    \"default\",\r\n    \"primary\",\r\n    \"warning\",\r\n    \"danger\",\r\n    \"success\",\r\n    \"primary_alt\",\r\n    \"warning_alt\",\r\n    \"danger_alt\",\r\n    \"success_alt\"\r\n  ]),\r\n  /**\r\n   * Dense size\r\n   */\r\n  dense: PropTypes.bool,\r\n  /**\r\n   * Dot\r\n   */\r\n  dot: PropTypes.bool,\r\n  /**\r\n   * Hide badge\r\n   */\r\n  hide: PropTypes.bool,\r\n  left: PropTypes.bool,\r\n  botoom: PropTypes.bool\r\n};\r\n\r\nexport default Badge;\r\n"]},"metadata":{},"sourceType":"module"}