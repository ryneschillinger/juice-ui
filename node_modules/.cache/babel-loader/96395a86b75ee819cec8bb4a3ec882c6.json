{"ast":null,"code":"var _jsxFileName = \"/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/src/@setproduct-ui/demo/Callout/DemoComponent.jsx\";\nimport React from \"react\";\n/**Import core component (variable)*/\n\nimport Callout from \"../../core/Callout\";\nexport const DEMO = props => {\n  const type = props.type,\n        view = props.view,\n        color = props.color,\n        isTitle = props.isTitle,\n        isIcon = props.isIcon;\n  return React.createElement(Callout, {\n    dense: type === \"dense\" ? true : false,\n    view: view,\n    color: color,\n    title: isTitle ? \"Visually important content\" : null,\n    icon: isIcon && \"info-sign\",\n    style: {\n      maxWidth: \"480px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"The component is a simple wrapper around the CSS API that provides props for modifiers and optional title element. Any additional HTML props will be spread to the rendered \", \"<div>\", \" element.\");\n};","map":{"version":3,"sources":["/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/src/@setproduct-ui/demo/Callout/DemoComponent.jsx"],"names":["React","Callout","DEMO","props","type","view","color","isTitle","isIcon","maxWidth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA;;AACA,OAAOC,OAAP,MAAoB,oBAApB;AAEA,OAAO,MAAMC,IAAI,GAAGC,KAAK,IAAI;AAAA,QACnBC,IADmB,GACoBD,KADpB,CACnBC,IADmB;AAAA,QACbC,IADa,GACoBF,KADpB,CACbE,IADa;AAAA,QACPC,KADO,GACoBH,KADpB,CACPG,KADO;AAAA,QACAC,OADA,GACoBJ,KADpB,CACAI,OADA;AAAA,QACSC,MADT,GACoBL,KADpB,CACSK,MADT;AAE3B,SACE,oBAAC,OAAD;AACE,IAAA,KAAK,EAAEJ,IAAI,KAAK,OAAT,GAAmB,IAAnB,GAA0B,KADnC;AAEE,IAAA,IAAI,EAAEC,IAFR;AAGE,IAAA,KAAK,EAAEC,KAHT;AAIE,IAAA,KAAK,EAAEC,OAAO,GAAG,4BAAH,GAAkC,IAJlD;AAKE,IAAA,IAAI,EAAEC,MAAM,IAAI,WALlB;AAME,IAAA,KAAK,EAAE;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0MADF;AAcD,CAhBM","sourcesContent":["import React from \"react\";\r\n\r\n/**Import core component (variable)*/\r\nimport Callout from \"../../core/Callout\";\r\n\r\nexport const DEMO = props => {\r\n  const { type, view, color, isTitle, isIcon } = props;\r\n  return (\r\n    <Callout\r\n      dense={type === \"dense\" ? true : false}\r\n      view={view}\r\n      color={color}\r\n      title={isTitle ? \"Visually important content\" : null}\r\n      icon={isIcon && \"info-sign\"}\r\n      style={{ maxWidth: \"480px\" }}\r\n    >\r\n      The component is a simple wrapper around the CSS API that provides props\r\n      for modifiers and optional title element. Any additional HTML props will\r\n      be spread to the rendered {`<div>`} element.\r\n    </Callout>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}