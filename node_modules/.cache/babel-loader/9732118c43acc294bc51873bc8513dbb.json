{"ast":null,"code":"import _objectWithoutProperties from \"/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/src/@candy-ui/core/Switch/Switch.jsx\";\nimport React from \"react\";\nimport cx from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { Switch as SwitchSource } from \"@blueprintjs/core\";\nimport Type from \"./_type.module.css\";\nimport View from \"./_view.module.css\";\nimport Color from \"../../styles/color.module.css\";\nimport { ThemeContext } from \"../ThemeContext\";\nexport default function Switch(props) {\n  const _props$type = props.type,\n        type = _props$type === void 0 ? \"def\" : _props$type,\n        _props$view = props.view,\n        view = _props$view === void 0 ? \"flat\" : _props$view,\n        _props$color = props.color,\n        color = _props$color === void 0 ? \"default\" : _props$color,\n        checked = props.checked,\n        inline = props.inline,\n        helperText = props.helperText,\n        disabled = props.disabled,\n        margin = props.margin,\n        label = props.label,\n        rtl = props.rtl,\n        leftPosition = props.leftPosition,\n        fill = props.fill,\n        className = props.className,\n        iStyle = props.iStyle,\n        rest = _objectWithoutProperties(props, [\"type\", \"view\", \"color\", \"checked\", \"inline\", \"helperText\", \"disabled\", \"margin\", \"label\", \"rtl\", \"leftPosition\", \"fill\", \"className\", \"iStyle\"]);\n\n  return React.createElement(ThemeContext.Consumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, ({\n    dark\n  }) => React.createElement(\"div\", {\n    className: cx(Type[\"container\"], inline && Type[\"inline\"], helperText && Type[\"helperText\"], fill && Type[\"fill\"], View[\"container\"], checked && View[\"checked\"], Type[type], iStyle && Type[\"i-style\"], View[view], Color[color], helperText && Type[\"with_helper\"], leftPosition && Type[\"leftPosition\"], disabled && View[\"disabled\"]),\n    style: margin && {\n      margin: margin\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(SwitchSource, Object.assign({}, rest, {\n    className: cx(Color[color], rtl && Type[\"rtl\"], className),\n    defaultChecked: checked,\n    large: type === \"def\" ? true : false,\n    disabled: disabled,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: cx(helperText && Type[\"helperBox\"], Type[\"text\"]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, label, helperText && React.createElement(\"div\", {\n    className: cx(Type[\"helperText\"], View[\"helperText\"]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, helperText)))));\n}\nSwitch.propTypes = {\n  /**\r\n   `The type of the component.\r\n   * Variants: `dense`\r\n   * Default value (if undefined): `def` `\r\n   */\n  type: PropTypes.oneOf([\"def\", \"dense\"]),\n\n  /**\r\n   ` The view of the component.\r\n   * Variants: `flat` `smooth` `outlined` \r\n   * Default value (if undefined): `flat` `\r\n   */\n  view: PropTypes.oneOf([\"flat\", \"smooth\", \"outlined\"]),\n\n  /**\r\n  ` The color of the component.\r\n   * Variants: `primary` `warning` `danger` `success` `primaryAlt` `warningAlt` `dangerAlt` `successAlt`\r\n   * Default value (if undefined): `default` `\r\n   */\n  color: PropTypes.oneOf([\"default\", \"primary\", \"warning\", \"danger\", \"success\", \"primary_alt\", \"warning_alt\", \"danger_alt\", \"success_alt\"]),\n\n  /**\r\n   *Whether the control is checked.\r\n   */\n  checked: PropTypes.bool,\n\n  /**\r\n   * Text label for the control.\r\n   */\n  label: PropTypes.string,\n\n  /**\r\n   * Whether the control is non-interactive.\r\n   */\n  disabled: PropTypes.bool,\n\n  /**\r\n   * Second line Helper Text\r\n   */\n  helperText: PropTypes.string,\n\n  /**\r\n   * RTL text style\r\n   */\n  rtl: PropTypes.bool,\n\n  /**\r\n   * Whether this component should expand to fill its container.\r\n   */\n  fill: PropTypes.bool,\n\n  /**\r\n   * Set left text position\r\n   */\n  leftPosition: PropTypes.bool,\n\n  /**\r\n   * Event handler invoked when input value is changed.\r\n   */\n  onChange: PropTypes.func\n};","map":{"version":3,"sources":["/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/src/@candy-ui/core/Switch/Switch.jsx"],"names":["React","cx","PropTypes","Switch","SwitchSource","Type","View","Color","ThemeContext","props","type","view","color","checked","inline","helperText","disabled","margin","label","rtl","leftPosition","fill","className","iStyle","rest","dark","propTypes","oneOf","bool","string","onChange","func"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport cx from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { Switch as SwitchSource } from \"@blueprintjs/core\";\r\n\r\nimport Type from \"./_type.module.css\";\r\nimport View from \"./_view.module.css\";\r\nimport Color from \"../../styles/color.module.css\";\r\nimport { ThemeContext } from \"../ThemeContext\";\r\n\r\nexport default function Switch(props) {\r\n  const {\r\n    type = \"def\",\r\n    view = \"flat\",\r\n    color = \"default\",\r\n    checked,\r\n    inline,\r\n    helperText,\r\n    disabled,\r\n    margin,\r\n    label,\r\n    rtl,\r\n    leftPosition,\r\n    fill,\r\n    className,\r\n    iStyle,\r\n    ...rest\r\n  } = props;\r\n  return (\r\n    <ThemeContext.Consumer>\r\n      {({ dark }) => (\r\n        <div\r\n          className={cx(\r\n            Type[\"container\"],\r\n            inline && Type[\"inline\"],\r\n            helperText && Type[\"helperText\"],\r\n            fill && Type[\"fill\"],\r\n            View[\"container\"],\r\n            checked && View[\"checked\"],\r\n            Type[type],\r\n            iStyle && Type[\"i-style\"],\r\n            View[view],\r\n            Color[color],\r\n            helperText && Type[\"with_helper\"],\r\n            leftPosition && Type[\"leftPosition\"],\r\n            disabled && View[\"disabled\"]\r\n          )}\r\n          style={margin && { margin: margin }}\r\n        >\r\n          <SwitchSource\r\n            {...rest}\r\n            className={cx(Color[color], rtl && Type[\"rtl\"], className)}\r\n            defaultChecked={checked}\r\n            large={type === \"def\" ? true : false}\r\n            disabled={disabled}\r\n          >\r\n            <div className={cx(helperText && Type[\"helperBox\"], Type[\"text\"])}>\r\n              {label}\r\n              {helperText && (\r\n                <div className={cx(Type[\"helperText\"], View[\"helperText\"])}>\r\n                  {helperText}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </SwitchSource>\r\n        </div>\r\n      )}\r\n    </ThemeContext.Consumer>\r\n  );\r\n}\r\n\r\nSwitch.propTypes = {\r\n  /**\r\n   `The type of the component.\r\n   * Variants: `dense`\r\n   * Default value (if undefined): `def` `\r\n   */\r\n  type: PropTypes.oneOf([\"def\", \"dense\"]),\r\n  /**\r\n   ` The view of the component.\r\n   * Variants: `flat` `smooth` `outlined` \r\n   * Default value (if undefined): `flat` `\r\n   */\r\n  view: PropTypes.oneOf([\"flat\", \"smooth\", \"outlined\"]),\r\n  /**\r\n  ` The color of the component.\r\n   * Variants: `primary` `warning` `danger` `success` `primaryAlt` `warningAlt` `dangerAlt` `successAlt`\r\n   * Default value (if undefined): `default` `\r\n   */\r\n  color: PropTypes.oneOf([\r\n    \"default\",\r\n    \"primary\",\r\n    \"warning\",\r\n    \"danger\",\r\n    \"success\",\r\n    \"primary_alt\",\r\n    \"warning_alt\",\r\n    \"danger_alt\",\r\n    \"success_alt\"\r\n  ]),\r\n  /**\r\n   *Whether the control is checked.\r\n   */\r\n  checked: PropTypes.bool,\r\n  /**\r\n   * Text label for the control.\r\n   */\r\n  label: PropTypes.string,\r\n  /**\r\n   * Whether the control is non-interactive.\r\n   */\r\n  disabled: PropTypes.bool,\r\n  /**\r\n   * Second line Helper Text\r\n   */\r\n  helperText: PropTypes.string,\r\n  /**\r\n   * RTL text style\r\n   */\r\n  rtl: PropTypes.bool,\r\n  /**\r\n   * Whether this component should expand to fill its container.\r\n   */\r\n  fill: PropTypes.bool,\r\n  /**\r\n   * Set left text position\r\n   */\r\n  leftPosition: PropTypes.bool,\r\n  /**\r\n   * Event handler invoked when input value is changed.\r\n   */\r\n  onChange: PropTypes.func\r\n};\r\n"]},"metadata":{},"sourceType":"module"}