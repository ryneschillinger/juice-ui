{"ast":null,"code":"var _jsxFileName = \"/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/src/@candy-ui/demo/DemoAppBar.jsx\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { withRouter } from \"react-router\";\nimport Logo from \"../assets/candy-ui-logo.svg\";\nimport Button from \"../core/Button\";\nimport { CustomButton } from \"./components/CustomButton\";\nimport Navbar from \"../core/Navbar\";\nimport SearchInput from \"../core/Inputs/SearchInput\";\nimport NavbarGroup from \"../core/Navbar/Group.jsx\";\nimport NavbarHeading from \"../core/Navbar/Heading.jsx\";\nimport DemoAppStyle from \"./styles/style.module.css\";\nimport * as ROUTES from \"./constants/Routes.jsx\";\nimport { ThemeContext } from \"../core/ThemeContext\";\nimport { SidebarStateContext } from \"./context/SidebarContext\";\n\nconst AppBar = props => {\n  const device = props.device,\n        location = props.location;\n  let showFabButton = location.pathname === \"/docs/colors\" ? false : location.pathname === \"/docs/installation\" ? false : location.pathname === \"/docs/introduction\" ? false : location.pathname === \"/docs/implementation\" ? false : location.pathname === \"/docs/principles\" ? false : location.pathname === \"/\" ? false : true;\n  return React.createElement(ThemeContext.Consumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, ({\n    isDark,\n    setDark\n  }) => React.createElement(SidebarStateContext.Consumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, ({\n    leftSidebarState,\n    rightSidebarState,\n    setSidebarState\n  }) => React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, showFabButton && React.createElement(\"div\", {\n    className: DemoAppStyle.props_button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"circle\",\n    view: \"filled\",\n    icon: \"cog\",\n    color: \"primary\",\n    onClick: () => setSidebarState({\n      left: leftSidebarState,\n      right: !rightSidebarState\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  })), React.createElement(Navbar, {\n    type: \"desktop\",\n    view: \"smooth\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"// Menu Button\", React.createElement(NavbarGroup, {\n    align: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(NavbarHeading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  })), \"// Primary Nav Buttons\", React.createElement(NavbarGroup, {\n    align: \"center\",\n    style: {\n      marginLeft: \"1.5rem\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/dashboard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"default\",\n    view: \"smooth\",\n    color: \"primary\",\n    text: \"Dashboard\",\n    active: location.pathname.match(\"dashboard\") && true,\n    dense: type === \"desktop\" ? false : true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  })), React.createElement(Link, {\n    to: \"/messages\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"default\",\n    view: \"smooth\",\n    color: \"primary\",\n    text: \"Messages\",\n    active: location.pathname.match(\"messages\") && true,\n    dense: type === \"desktop\" ? false : true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  })), React.createElement(Link, {\n    to: \"/notifications\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"default\",\n    view: \"smooth\",\n    color: \"primary\",\n    text: \"Notifications\",\n    active: location.pathname.match(\"notifications\") && true,\n    dense: type === \"desktop\" ? false : true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }))), \"// Action Buttons\", React.createElement(NavbarGroup, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/sign-in\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"default\",\n    view: \"smooth\",\n    color: \"primary\",\n    text: \"Sign In\",\n    style: {\n      marginLeft: \"1.5rem\"\n    },\n    active: location.pathname.match(\"sign-in\") && true,\n    dense: type === \"desktop\" ? false : true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  })), React.createElement(Link, {\n    to: \"/register\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"default\",\n    view: \"filled\",\n    color: \"primary\",\n    text: \"Register\",\n    style: {\n      marginLeft: \"1rem\"\n    },\n    active: location.pathname.match(\"register\") && true,\n    dense: type === \"desktop\" ? false : true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  })))))));\n};\n\nexport default withRouter(AppBar);","map":{"version":3,"sources":["/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/src/@candy-ui/demo/DemoAppBar.jsx"],"names":["React","Link","withRouter","Button","CustomButton","Navbar","SearchInput","NavbarGroup","NavbarHeading","DemoAppStyle","ROUTES","ThemeContext","SidebarStateContext","AppBar","props","device","location","showFabButton","pathname","isDark","setDark","leftSidebarState","rightSidebarState","setSidebarState","props_button","left","right","marginLeft","match","type"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nimport Logo from \"../assets/candy-ui-logo.svg\";\r\n\r\nimport Button from \"../core/Button\";\r\nimport { CustomButton } from \"./components/CustomButton\";\r\nimport Navbar from \"../core/Navbar\";\r\nimport SearchInput from \"../core/Inputs/SearchInput\";\r\nimport NavbarGroup from \"../core/Navbar/Group.jsx\";\r\nimport NavbarHeading from \"../core/Navbar/Heading.jsx\";\r\n\r\nimport DemoAppStyle from \"./styles/style.module.css\";\r\nimport * as ROUTES from \"./constants/Routes.jsx\";\r\n\r\nimport { ThemeContext } from \"../core/ThemeContext\";\r\nimport { SidebarStateContext } from \"./context/SidebarContext\";\r\n\r\nconst AppBar = props => {\r\n  const { device, location } = props;\r\n\r\n  let showFabButton =\r\n    location.pathname === \"/docs/colors\"\r\n      ? false\r\n      : location.pathname === \"/docs/installation\"\r\n      ? false\r\n      : location.pathname === \"/docs/introduction\"\r\n      ? false\r\n      : location.pathname === \"/docs/implementation\"\r\n      ? false\r\n      : location.pathname === \"/docs/principles\"\r\n      ? false\r\n      : location.pathname === \"/\"\r\n      ? false\r\n      : true;\r\n\r\n  return (\r\n    <ThemeContext.Consumer>\r\n      {({ isDark, setDark }) => (\r\n        <SidebarStateContext.Consumer>\r\n          {({ leftSidebarState, rightSidebarState, setSidebarState }) => (\r\n            <React.Fragment>\r\n              {showFabButton && (\r\n                <div className={DemoAppStyle.props_button}>\r\n                  <Button\r\n                    type=\"circle\"\r\n                    view=\"filled\"\r\n                    icon={\"cog\"}\r\n                    color=\"primary\"\r\n                    onClick={() =>\r\n                      setSidebarState({\r\n                        left: leftSidebarState,\r\n                        right: !rightSidebarState\r\n                      })\r\n                    }\r\n                  />\r\n                </div>\r\n              )}\r\n\r\n              \r\n<Navbar type=\"desktop\" view=\"smooth\" color=\"primary\">\r\n\r\n// Menu Button\r\n<NavbarGroup align=\"left\">\r\n  <NavbarHeading>\r\n    \r\n  </NavbarHeading>\r\n</NavbarGroup>\r\n\r\n// Primary Nav Buttons\r\n<NavbarGroup align=\"center\" style={{ marginLeft: \"1.5rem\" }}>\r\n  <Link to=\"/dashboard\">\r\n    <Button\r\n      type=\"default\"\r\n      view=\"smooth\"\r\n      color=\"primary\"\r\n      text=\"Dashboard\"\r\n      active={location.pathname.match(\"dashboard\") && true}\r\n      dense={type === \"desktop\" ? false : true}\r\n    />\r\n  </Link>\r\n  <Link to=\"/messages\">\r\n    <Button\r\n      type=\"default\"\r\n      view=\"smooth\"\r\n      color=\"primary\"\r\n      text=\"Messages\"\r\n      active={location.pathname.match(\"messages\") && true}\r\n      dense={type === \"desktop\" ? false : true}\r\n    />\r\n  </Link>\r\n  <Link to=\"/notifications\">\r\n    <Button\r\n      type=\"default\"\r\n      view=\"smooth\"\r\n      color=\"primary\"\r\n      text=\"Notifications\"\r\n      active={location.pathname.match(\"notifications\") && true}\r\n      dense={type === \"desktop\" ? false : true}\r\n    />\r\n  </Link>\r\n</NavbarGroup>\r\n\r\n// Action Buttons\r\n<NavbarGroup align=\"right\">\r\n  <Link to=\"/sign-in\">\r\n    <Button\r\n      type=\"default\"\r\n      view=\"smooth\"\r\n      color=\"primary\"\r\n      text=\"Sign In\"\r\n      style={{ marginLeft: \"1.5rem\" }}\r\n      active={location.pathname.match(\"sign-in\") && true}\r\n      dense={type === \"desktop\" ? false : true}\r\n    />\r\n  </Link>\r\n  <Link to=\"/register\">\r\n    <Button\r\n      type=\"default\"\r\n      view=\"filled\"\r\n      color=\"primary\"\r\n      text=\"Register\"\r\n      style={{ marginLeft: \"1rem\" }}\r\n      active={location.pathname.match(\"register\") && true}\r\n      dense={type === \"desktop\" ? false : true}\r\n    />\r\n  </Link>\r\n</NavbarGroup>\r\n</Navbar>\r\n\r\n            </React.Fragment>\r\n          )}\r\n        </SidebarStateContext.Consumer>\r\n      )}\r\n    </ThemeContext.Consumer>\r\n  );\r\n};\r\n\r\nexport default withRouter(AppBar);\r\n"]},"metadata":{},"sourceType":"module"}