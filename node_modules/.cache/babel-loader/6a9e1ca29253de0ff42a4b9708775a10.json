{"ast":null,"code":"var _jsxFileName = \"/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/src/@candy-ui/demo/Select/DemoComponent.jsx\";\nimport React from \"react\";\n/**Import core component (variable)*/\n\nimport Select from \"../../core/Select\";\nimport MenuItem from \"../../core/Menu/MenuItem\";\nimport { ItemPredicate, ItemRenderer } from \"@blueprintjs/select\";\nimport ExampleMenu from \"./Menu\";\nexport const DEMO = ({\n  view,\n  color,\n  dense\n}) => {\n  const Films = [{\n    title: \"The Shawshank Redemption\",\n    year: 1994\n  }, {\n    title: \"The Godfather\",\n    year: 1972\n  }, {\n    title: \"The Godfather: Part II\",\n    year: 1974\n  }];\n\n  const filterFilm = (query, film) => {\n    return \"\".concat(film.rank, \". \").concat(film.title.toLowerCase(), \" \").concat(film.year).indexOf(query.toLowerCase()) >= 0;\n  };\n\n  const renderFilm = (film, {\n    handleClick,\n    modifiers,\n    query\n  }) => {\n    if (!modifiers.matchesPredicate) {\n      return null;\n    }\n\n    const text = \"\".concat(film.rank, \". \").concat(film.title);\n    return React.createElement(MenuItem, {\n      active: modifiers.active,\n      disabled: modifiers.disabled,\n      label: film.year.toString(),\n      key: film.rank,\n      onClick: handleClick,\n      text: highlightText(text, query),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    });\n  };\n\n  return React.createElement(Select, {\n    view: view,\n    color: color,\n    items: Films,\n    itemPredicate: filterFilm,\n    itemRenderer: renderFilm,\n    noResults: React.createElement(MenuItem, {\n      disabled: true,\n      text: \"No results.\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  });\n};","map":{"version":3,"sources":["/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/src/@candy-ui/demo/Select/DemoComponent.jsx"],"names":["React","Select","MenuItem","ItemPredicate","ItemRenderer","ExampleMenu","DEMO","view","color","dense","Films","title","year","filterFilm","query","film","rank","toLowerCase","indexOf","renderFilm","handleClick","modifiers","matchesPredicate","text","active","disabled","toString","highlightText"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA;;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,SAASC,aAAT,EAAwBC,YAAxB,QAA4C,qBAA5C;AACA,OAAOC,WAAP,MAAwB,QAAxB;AAEA,OAAO,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA;AAAf,CAAD,KAA4B;AAC9C,QAAMC,KAAK,GAAG,CACZ;AAAEC,IAAAA,KAAK,EAAE,0BAAT;AAAqCC,IAAAA,IAAI,EAAE;AAA3C,GADY,EAEZ;AAAED,IAAAA,KAAK,EAAE,eAAT;AAA0BC,IAAAA,IAAI,EAAE;AAAhC,GAFY,EAGZ;AAAED,IAAAA,KAAK,EAAE,wBAAT;AAAmCC,IAAAA,IAAI,EAAE;AAAzC,GAHY,CAAd;;AAKA,QAAMC,UAAU,GAAG,CAACC,KAAD,EAAQC,IAAR,KAAiB;AAClC,WACE,UAAGA,IAAI,CAACC,IAAR,eAAiBD,IAAI,CAACJ,KAAL,CAAWM,WAAX,EAAjB,cAA6CF,IAAI,CAACH,IAAlD,EAAyDM,OAAzD,CACEJ,KAAK,CAACG,WAAN,EADF,KAEK,CAHP;AAKD,GAND;;AAOA,QAAME,UAAU,GAAI,CAClBJ,IADkB,EAElB;AAAEK,IAAAA,WAAF;AAAeC,IAAAA,SAAf;AAA0BP,IAAAA;AAA1B,GAFkB,KAGf;AACH,QAAI,CAACO,SAAS,CAACC,gBAAf,EAAiC;AAC/B,aAAO,IAAP;AACD;;AACD,UAAMC,IAAI,aAAMR,IAAI,CAACC,IAAX,eAAoBD,IAAI,CAACJ,KAAzB,CAAV;AACA,WACE,oBAAC,QAAD;AACE,MAAA,MAAM,EAAEU,SAAS,CAACG,MADpB;AAEE,MAAA,QAAQ,EAAEH,SAAS,CAACI,QAFtB;AAGE,MAAA,KAAK,EAAEV,IAAI,CAACH,IAAL,CAAUc,QAAV,EAHT;AAIE,MAAA,GAAG,EAAEX,IAAI,CAACC,IAJZ;AAKE,MAAA,OAAO,EAAEI,WALX;AAME,MAAA,IAAI,EAAEO,aAAa,CAACJ,IAAD,EAAOT,KAAP,CANrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAUD,GAlBD;;AAmBA,SACE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAEP,IADR;AAEE,IAAA,KAAK,EAAEC,KAFT;AAGE,IAAA,KAAK,EAAEE,KAHT;AAIE,IAAA,aAAa,EAAEG,UAJjB;AAKE,IAAA,YAAY,EAAEM,UALhB;AAME,IAAA,SAAS,EAAE,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAE,IAApB;AAA0B,MAAA,IAAI,EAAC,aAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAUD,CA1CM","sourcesContent":["import React from \"react\";\r\n\r\n/**Import core component (variable)*/\r\nimport Select from \"../../core/Select\";\r\nimport MenuItem from \"../../core/Menu/MenuItem\";\r\nimport { ItemPredicate, ItemRenderer } from \"@blueprintjs/select\";\r\nimport ExampleMenu from \"./Menu\";\r\n\r\nexport const DEMO = ({ view, color, dense }) => {\r\n  const Films = [\r\n    { title: \"The Shawshank Redemption\", year: 1994 },\r\n    { title: \"The Godfather\", year: 1972 },\r\n    { title: \"The Godfather: Part II\", year: 1974 },\r\n  ];\r\n  const filterFilm = (query, film) => {\r\n    return (\r\n      `${film.rank}. ${film.title.toLowerCase()} ${film.year}`.indexOf(\r\n        query.toLowerCase()\r\n      ) >= 0\r\n    );\r\n  };\r\n  const renderFilm  = (\r\n    film,\r\n    { handleClick, modifiers, query }\r\n  ) => {\r\n    if (!modifiers.matchesPredicate) {\r\n      return null;\r\n    }\r\n    const text = `${film.rank}. ${film.title}`;\r\n    return (\r\n      <MenuItem\r\n        active={modifiers.active}\r\n        disabled={modifiers.disabled}\r\n        label={film.year.toString()}\r\n        key={film.rank}\r\n        onClick={handleClick}\r\n        text={highlightText(text, query)}\r\n      />\r\n    );\r\n  };\r\n  return (\r\n    <Select\r\n      view={view}\r\n      color={color}\r\n      items={Films}\r\n      itemPredicate={filterFilm}\r\n      itemRenderer={renderFilm}\r\n      noResults={<MenuItem disabled={true} text=\"No results.\" />}\r\n    />\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}