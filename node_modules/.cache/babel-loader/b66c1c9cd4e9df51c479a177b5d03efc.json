{"ast":null,"code":"/*\n * Copyright 2019 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __extends } from \"tslib\";\nimport * as React from \"react\";\nimport { isNodeEnv } from \"./utils\";\n/**\n * An abstract component that Blueprint components can extend\n * in order to add some common functionality like runtime props validation.\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\n\nvar AbstractPureComponent2 =\n/** @class */\nfunction (_super) {\n  __extends(AbstractPureComponent2, _super);\n\n  function AbstractPureComponent2(props, context) {\n    var _this = _super.call(this, props, context) || this; // Not bothering to remove entries when their timeouts finish because clearing invalid ID is a no-op\n\n\n    _this.timeoutIds = [];\n    _this.requestIds = [];\n    /**\n     * Clear all known timeouts.\n     */\n\n    _this.clearTimeouts = function () {\n      if (_this.timeoutIds.length > 0) {\n        for (var _i = 0, _a = _this.timeoutIds; _i < _a.length; _i++) {\n          var timeoutId = _a[_i];\n          window.clearTimeout(timeoutId);\n        }\n\n        _this.timeoutIds = [];\n      }\n    };\n    /**\n     * Clear all known animation frame requests.\n     */\n\n\n    _this.cancelAnimationFrames = function () {\n      if (_this.requestIds.length > 0) {\n        for (var _i = 0, _a = _this.requestIds; _i < _a.length; _i++) {\n          var requestId = _a[_i];\n          window.cancelAnimationFrame(requestId);\n        }\n\n        _this.requestIds = [];\n      }\n    };\n\n    if (!isNodeEnv(\"production\")) {\n      _this.validateProps(_this.props);\n    }\n\n    return _this;\n  }\n\n  AbstractPureComponent2.prototype.componentDidUpdate = function (_prevProps, _prevState, _snapshot) {\n    if (!isNodeEnv(\"production\")) {\n      this.validateProps(this.props);\n    }\n  };\n\n  AbstractPureComponent2.prototype.componentWillUnmount = function () {\n    this.clearTimeouts();\n    this.cancelAnimationFrames();\n  };\n  /**\n   * Request an animation frame and remember its ID.\n   * All pending requests will be canceled when component unmounts.\n   *\n   * @returns a \"cancel\" function that will cancel the request when invoked.\n   */\n\n\n  AbstractPureComponent2.prototype.requestAnimationFrame = function (callback) {\n    var handle = window.requestAnimationFrame(callback);\n    this.requestIds.push(handle);\n    return function () {\n      return window.cancelAnimationFrame(handle);\n    };\n  };\n  /**\n   * Set a timeout and remember its ID.\n   * All pending timeouts will be cleared when component unmounts.\n   *\n   * @returns a \"cancel\" function that will clear timeout when invoked.\n   */\n\n\n  AbstractPureComponent2.prototype.setTimeout = function (callback, timeout) {\n    var handle = window.setTimeout(callback, timeout);\n    this.timeoutIds.push(handle);\n    return function () {\n      return window.clearTimeout(handle);\n    };\n  };\n  /**\n   * Ensures that the props specified for a component are valid.\n   * Implementations should check that props are valid and usually throw an Error if they are not.\n   * Implementations should not duplicate checks that the type system already guarantees.\n   *\n   * This method should be used instead of React's\n   * [propTypes](https://facebook.github.io/react/docs/reusable-components.html#prop-validation) feature.\n   * Like propTypes, these runtime checks run only in development mode.\n   */\n\n\n  AbstractPureComponent2.prototype.validateProps = function (_props) {// implement in subclass\n  };\n\n  return AbstractPureComponent2;\n}(React.PureComponent);\n\nexport { AbstractPureComponent2 };","map":null,"metadata":{},"sourceType":"module"}