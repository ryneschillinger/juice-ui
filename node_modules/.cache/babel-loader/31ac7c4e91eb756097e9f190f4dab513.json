{"ast":null,"code":"import _slicedToArray from \"/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/src/@candy-ui/demo/Badge/ComponentTemplate.jsx\";\nimport React from \"react\";\n/* Import component props */\n\nimport PropsGroup from \"./PropsGroup.jsx\";\nimport SelectColorGroup from \"../SelectColorGroup.jsx\";\nimport SelectViewGroup from \"../SelectViewGroup.jsx\";\nimport DemoAppStyle from \"../styles/style.module.css\";\nimport Typography from \"../../core/Typography\";\nimport { SidebarContainer } from \"../components/SidebarContainer\";\nimport { CustomScrollbar } from \"../components/CustomScrollbar\";\n/**Import demo component body*/\n\nimport { DEMO } from \"./DemoComponent.jsx\";\n/**Import usage & API  of component*/\n\nimport { API } from \"./api.jsx\";\n/**SETTINGS OF THIS DEMO*/\n\n/*Set component data (variables)*/\n\nconst Props = {\n  name: \"Badge\",\n  desc: \"Notification badge conveys summary or status information specific to your app\",\n\n  /**default value*/\n  view: \"filled\",\n  color: \"danger\"\n};\n/**Available variants of TYPES & VIEWS (variables)*/\n\nconst views = [[\"Filled\", \"filled\"], [\"Smooth\", \"smooth\"], [\"Outlined\", \"outlined\"]];\n/**END OF SETTINGS*/\n\n/**Demo template*/\n\nconst Content = props => {\n  /*Set states of props*/\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        isDot = _React$useState2[0],\n        setDot = _React$useState2[1];\n\n  const _React$useState3 = React.useState(false),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        isHide = _React$useState4[0],\n        setHide = _React$useState4[1];\n\n  const _React$useState5 = React.useState(false),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        isDense = _React$useState6[0],\n        setDense = _React$useState6[1];\n\n  const _React$useState7 = React.useState(false),\n        _React$useState8 = _slicedToArray(_React$useState7, 2),\n        isLeft = _React$useState8[0],\n        setLeft = _React$useState8[1];\n\n  const _React$useState9 = React.useState(false),\n        _React$useState10 = _slicedToArray(_React$useState9, 2),\n        isBottom = _React$useState10[0],\n        setBottom = _React$useState10[1];\n\n  const _React$useState11 = React.useState(Props.view),\n        _React$useState12 = _slicedToArray(_React$useState11, 2),\n        view = _React$useState12[0],\n        setView = _React$useState12[1];\n\n  const _React$useState13 = React.useState(Props.color),\n        _React$useState14 = _slicedToArray(_React$useState13, 2),\n        color = _React$useState14[0],\n        setColor = _React$useState14[1];\n\n  React.useEffect(() => {\n    document.title = \"React Design System: component \".concat(Props.name);\n    document.getElementsByTagName(\"META\")[\"description\"].content = \"Demo \".concat(Props.name, \" component for React Setproduct Design System with possible props. \").concat(Props.desc);\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: DemoAppStyle[\"content-component\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    type: \"h4\",\n    className: \"demo-name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, Props.name), React.createElement(Typography, {\n    type: \"h6\",\n    colorStep: 60,\n    className: \"demo-desc\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, Props.desc), React.createElement(\"div\", {\n    className: \"demo-content-component\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(DEMO, {\n    view: view,\n    color: color,\n    isHide: isHide,\n    isDot: isDot,\n    dense: isDense,\n    left: isLeft,\n    bottom: isBottom,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"BodyBig demo-api\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(API, {\n    name: Props.name,\n    view: view,\n    color: color,\n    isHide: isHide,\n    isDot: isDot,\n    dense: isDense,\n    left: isLeft,\n    bottom: isBottom,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }))), React.createElement(SidebarContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: DemoAppStyle[\"right_sidebar\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(CustomScrollbar, {\n    autoHide: true,\n    autoHideTimeout: 2000,\n    hideTracksWhenNotNeeded: true,\n    renderThumbHorizontal: () => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      });\n    },\n    renderTrackHorizontal: () => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(PropsGroup, {\n    isDense: isDense,\n    setDense: setDense,\n    isHide: isHide,\n    setHide: setHide,\n    isDot: isDot,\n    setDot: setDot,\n    isLeft: isLeft,\n    setLeft: setLeft,\n    isBottom: isBottom,\n    setBottom: setBottom,\n    margin: \"2px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }), React.createElement(SelectViewGroup, {\n    view: view,\n    setView: setView,\n    views: views,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }), React.createElement(SelectColorGroup, {\n    color: color,\n    setColor: setColor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  })))));\n};\n\nexport default Content;","map":{"version":3,"sources":["/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/src/@candy-ui/demo/Badge/ComponentTemplate.jsx"],"names":["React","PropsGroup","SelectColorGroup","SelectViewGroup","DemoAppStyle","Typography","SidebarContainer","CustomScrollbar","DEMO","API","Props","name","desc","view","color","views","Content","props","useState","isDot","setDot","isHide","setHide","isDense","setDense","isLeft","setLeft","isBottom","setBottom","setView","setColor","useEffect","document","title","getElementsByTagName","content"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\n/* Import component props */\r\nimport PropsGroup from \"./PropsGroup.jsx\";\r\nimport SelectColorGroup from \"../SelectColorGroup.jsx\";\r\nimport SelectViewGroup from \"../SelectViewGroup.jsx\";\r\nimport DemoAppStyle from \"../styles/style.module.css\";\r\n\r\nimport Typography from \"../../core/Typography\";\r\nimport { SidebarContainer } from \"../components/SidebarContainer\";\r\nimport { CustomScrollbar } from \"../components/CustomScrollbar\";\r\n\r\n/**Import demo component body*/\r\nimport { DEMO } from \"./DemoComponent.jsx\";\r\n/**Import usage & API  of component*/\r\nimport { API } from \"./api.jsx\";\r\n\r\n/**SETTINGS OF THIS DEMO*/\r\n/*Set component data (variables)*/\r\nconst Props = {\r\n  name: \"Badge\",\r\n  desc:\r\n    \"Notification badge conveys summary or status information specific to your app\",\r\n  /**default value*/\r\n  view: \"filled\",\r\n  color: \"danger\"\r\n};\r\n/**Available variants of TYPES & VIEWS (variables)*/\r\nconst views = [\r\n  [\"Filled\", \"filled\"],\r\n  [\"Smooth\", \"smooth\"],\r\n  [\"Outlined\", \"outlined\"]\r\n];\r\n/**END OF SETTINGS*/\r\n\r\n/**Demo template*/\r\nconst Content = props => {\r\n  /*Set states of props*/\r\n  const [isDot, setDot] = React.useState(false);\r\n  const [isHide, setHide] = React.useState(false);\r\n  const [isDense, setDense] = React.useState(false);\r\n  const [isLeft, setLeft] = React.useState(false);\r\n  const [isBottom, setBottom] = React.useState(false);\r\n\r\n  const [view, setView] = React.useState(Props.view);\r\n  const [color, setColor] = React.useState(Props.color);\r\n\r\n  React.useEffect(() => {\r\n    document.title = `React Design System: component ${Props.name}`;\r\n    document.getElementsByTagName(\"META\")[\r\n      \"description\"\r\n    ].content = `Demo ${Props.name} component for React Setproduct Design System with possible props. ${Props.desc}`;\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <div className={DemoAppStyle[\"content-component\"]}>\r\n        {/*COMPONENT*/}\r\n        {/*NAME*/}\r\n        <Typography type=\"h4\" className=\"demo-name\">\r\n          {Props.name}\r\n        </Typography>\r\n        {/*Description */}\r\n        <Typography type=\"h6\" colorStep={60} className=\"demo-desc\">\r\n          {Props.desc}\r\n        </Typography>\r\n        {/*Content*/}\r\n        <div className=\"demo-content-component\">\r\n          <DEMO\r\n            view={view}\r\n            color={color}\r\n            isHide={isHide}\r\n            isDot={isDot}\r\n            dense={isDense}\r\n            left={isLeft}\r\n            bottom={isBottom}\r\n          />\r\n        </div>\r\n        <div className=\"BodyBig demo-api\">\r\n          <API\r\n            name={Props.name}\r\n            view={view}\r\n            color={color}\r\n            isHide={isHide}\r\n            isDot={isDot}\r\n            dense={isDense}\r\n            left={isLeft}\r\n            bottom={isBottom}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      {/* Props*/}\r\n      <SidebarContainer>\r\n        <div className={DemoAppStyle[\"right_sidebar\"]}>\r\n          <CustomScrollbar\r\n            autoHide\r\n            autoHideTimeout={2000}\r\n            hideTracksWhenNotNeeded\r\n            renderThumbHorizontal={() => {\r\n              return <div />;\r\n            }}\r\n            renderTrackHorizontal={() => <div />}\r\n          >\r\n            {/**Set this Props component */}\r\n            <PropsGroup\r\n              isDense={isDense}\r\n              setDense={setDense}\r\n              isHide={isHide}\r\n              setHide={setHide}\r\n              isDot={isDot}\r\n              setDot={setDot}\r\n              isLeft={isLeft}\r\n              setLeft={setLeft}\r\n              isBottom={isBottom}\r\n              setBottom={setBottom}\r\n              margin=\"2px\"\r\n            />\r\n            <SelectViewGroup view={view} setView={setView} views={views} />\r\n            <SelectColorGroup color={color} setColor={setColor} />\r\n          </CustomScrollbar>\r\n        </div>\r\n      </SidebarContainer>\r\n      {/***** */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Content;\r\n"]},"metadata":{},"sourceType":"module"}