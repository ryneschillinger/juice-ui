{"ast":null,"code":"var _jsxFileName = \"/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/src/@candy-ui/demo/patterns/Radio/demo.jsx\";\nimport React from \"react\"; //import cx from \"classnames\";\n\nimport { HashLink } from \"react-router-hash-link\";\nimport { Label } from \"@blueprintjs/core\";\nimport Typo from \"../../../core/Typography\";\nimport { SidebarContainer } from \"../../components/SidebarContainer\";\nimport { CustomScrollbar } from \"../../components/CustomScrollbar\";\nimport StyleGrid from \"../../styles/style.module.css\";\nimport { PatternListItem } from \"../PatternListItem\";\nimport { PatternLink } from \"../PatternLink\";\nimport styles from \"../style.module.css\";\nimport DemoAppStyle from \"../../styles/style.module.css\";\n\nconst DemoStart = props => {\n  React.useEffect(() => {\n    document.title = \"React Design System 2.0 | Getting Started\";\n    document.getElementsByTagName(\"META\")[\"description\"].content = \"Ready-to-use React JS componentsfor save your time. Installation guide.\";\n  });\n  return React.createElement(\"div\", {\n    className: DemoAppStyle[\"content-container\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: DemoAppStyle[\"content-component\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(Typo, {\n    type: \"h3\",\n    className: styles.h4_title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Radio Button\"), React.createElement(Typo, {\n    className: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"With a radio button, users make a choice among a set of mutually exclusive, related options. Users can choose one and only one option. Radio buttons are so called because they function like the channel presets on radios.\"), React.createElement(Typo, {\n    className: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"A group of radio buttons behaves like a single control. Only the selected choice is accessible using the Tab key, but users can cycle through the group using the arrow keys.\"), React.createElement(\"div\", {\n    id: \"rightControl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Typo, {\n    type: \"h5\",\n    colorStep: 80,\n    className: styles.sub_title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Is this the right control to use?\"), React.createElement(Typo, {\n    className: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"To decide, consider these questions:\", React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(PatternListItem, {\n    title: \"Is the control used to choose one option from a set of mutually exclusive choices?\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"If not, use another control. To choose multiple options, use\", React.createElement(PatternLink, {\n    url: \"/components/checkbox\",\n    text: \"checkboxes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), \"or a\", React.createElement(PatternLink, {\n    url: \"/components/select-multi\",\n    text: \"multi-select\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), \"instead.\"), React.createElement(PatternListItem, {\n    title: \"Is the number of options between two and seven?\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Since the screen space used is proportional to the number of options, keep the number of options in a group between two and seven. For eight or more options, use a\", React.createElement(PatternLink, {\n    url: \"/components/select-default\",\n    text: \"select list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), \".\")))), React.createElement(\"div\", {\n    id: \"guidelines\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(Typo, {\n    type: \"h4\",\n    colorStep: 80,\n    className: styles.sub_title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Guidelines\"), React.createElement(Typo, {\n    type: \"h6\",\n    colorStep: 60,\n    className: styles.sub_title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"General\"), React.createElement(Typo, {\n    className: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(PatternListItem, {\n    title: \"List the options in a logical order,\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"such as most likely to be selected to least, simplest operation to most complex, or least risk to most. Alphabetical ordering is not recommended because it is language dependent and therefore not localizable.\"), React.createElement(PatternListItem, {\n    title: \"If none of the options is a valid choice, add another option to reflect this choice,\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"such as None or Does not apply.\")))), React.createElement(\"div\", {\n    id: \"labels\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(Typo, {\n    type: \"h5\",\n    colorStep: 80,\n    className: styles.sub_title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"Labels\"), React.createElement(Typo, {\n    className: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"To decide, consider these questions:\", React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(PatternListItem, {\n    title: \"Is the control used to choose one option from a set of mutually exclusive choices?\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"If not, use another control. To choose multiple options, use\", React.createElement(PatternLink, {\n    url: \"/components/checkbox\",\n    text: \"checkboxes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }), \"or a\", React.createElement(PatternLink, {\n    url: \"/components/select-multi\",\n    text: \"multi-select\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }), \"instead.\"), React.createElement(PatternListItem, {\n    title: \"Is the number of options between two and seven?\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"Since the screen space used is proportional to the number of options, keep the number of options in a group between two and seven. For eight or more options, use a\", React.createElement(PatternLink, {\n    url: \"/components/select-default\",\n    text: \"select list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }), \".\")))), React.createElement(\"div\", {\n    id: \"documentation\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(Typo, {\n    type: \"h5\",\n    colorStep: 80,\n    className: styles.sub_title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, \"Documentation\"), React.createElement(Typo, {\n    className: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"To decide, consider these questions:\", React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(PatternListItem, {\n    title: \"Is the control used to choose one option from a set of mutually exclusive choices?\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, \"If not, use another control. To choose multiple options, use\", React.createElement(PatternLink, {\n    url: \"/components/checkbox\",\n    text: \"checkboxes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }), \"or a\", React.createElement(PatternLink, {\n    url: \"/components/select-multi\",\n    text: \"multi-select\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }), \"instead.\"), React.createElement(PatternListItem, {\n    title: \"Is the number of options between two and seven?\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, \"Since the screen space used is proportional to the number of options, keep the number of options in a group between two and seven. For eight or more options, use a\", React.createElement(PatternLink, {\n    url: \"/components/select-default\",\n    text: \"select list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }), \".\"))))), React.createElement(SidebarContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: DemoAppStyle[\"right_sidebar\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, React.createElement(CustomScrollbar, {\n    autoHide: true,\n    autoHideTimeout: 2000,\n    hideTracksWhenNotNeeded: true,\n    renderThumbHorizontal: () => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      });\n    },\n    renderTrackHorizontal: () => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: StyleGrid[\"demo-props\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, React.createElement(Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, \"In this section:\"), React.createElement(HashLink, {\n    to: \"#rightControl\",\n    className: styles.sidebarLink,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, \"Is this the right control to use?\"), React.createElement(HashLink, {\n    to: \"#guidelines\",\n    className: styles.sidebarLink,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, \"Guidelines\"), React.createElement(HashLink, {\n    to: \"#labels\",\n    className: styles.sidebarLink,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, \"Labels\"), React.createElement(HashLink, {\n    to: \"#documentation\",\n    className: styles.sidebarLink,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, \"Documentation\"))))));\n};\n\nexport default DemoStart;","map":{"version":3,"sources":["/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/src/@candy-ui/demo/patterns/Radio/demo.jsx"],"names":["React","HashLink","Label","Typo","SidebarContainer","CustomScrollbar","StyleGrid","PatternListItem","PatternLink","styles","DemoAppStyle","DemoStart","props","useEffect","document","title","getElementsByTagName","content","h4_title","text","sub_title","sidebarLink"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n//import cx from \"classnames\";\r\nimport { HashLink } from \"react-router-hash-link\";\r\nimport { Label } from \"@blueprintjs/core\";\r\nimport Typo from \"../../../core/Typography\";\r\nimport { SidebarContainer } from \"../../components/SidebarContainer\";\r\nimport { CustomScrollbar } from \"../../components/CustomScrollbar\";\r\nimport StyleGrid from \"../../styles/style.module.css\";\r\nimport { PatternListItem } from \"../PatternListItem\";\r\nimport { PatternLink } from \"../PatternLink\";\r\nimport styles from \"../style.module.css\";\r\nimport DemoAppStyle from \"../../styles/style.module.css\";\r\n\r\nconst DemoStart = props => {\r\n  React.useEffect(() => {\r\n    document.title = `React Design System 2.0 | Getting Started`;\r\n    document.getElementsByTagName(\"META\")[\r\n      \"description\"\r\n    ].content = `Ready-to-use React JS componentsfor save your time. Installation guide.`;\r\n  });\r\n\r\n  return (\r\n    <div className={DemoAppStyle[\"content-container\"]}>\r\n      <div className={DemoAppStyle[\"content-component\"]}>\r\n        <Typo type=\"h3\" className={styles.h4_title}>\r\n          Radio Button\r\n        </Typo>\r\n        <Typo className={styles.text}>\r\n          With a radio button, users make a choice among a set of mutually exclusive, related options. Users can choose one and only one option. Radio buttons are so called because they function like the channel presets on radios.\r\n        </Typo>\r\n        <Typo className={styles.text}>\r\n          A group of radio buttons behaves like a single control. Only the selected choice is accessible using the Tab key, but users can cycle through the group using the arrow keys.\r\n        </Typo>\r\n\r\n        {/* Is this the right control to use? */}\r\n        <div id=\"rightControl\">\r\n          <Typo type=\"h5\" colorStep={80} className={styles.sub_title}>\r\n            Is this the right control to use?\r\n          </Typo>\r\n          <Typo className={styles.text}>\r\n            To decide, consider these questions:\r\n            <ul>\r\n              <PatternListItem\r\n                title=\"Is the control used to choose one option from a set of mutually exclusive choices?\"\r\n              >\r\n                If not, use another control. To choose multiple options, use\r\n                <PatternLink\r\n                  url=\"/components/checkbox\"\r\n                  text=\"checkboxes\"\r\n                />\r\n                or a \r\n                <PatternLink\r\n                  url=\"/components/select-multi\"\r\n                  text=\"multi-select\"\r\n                />\r\n                instead.\r\n              </PatternListItem>\r\n              <PatternListItem title=\"Is the number of options between two and seven?\">\r\n                Since the screen space used is proportional to the number of options, keep the number of options in a group between two and seven. For eight or more options, use a\r\n                <PatternLink\r\n                  url=\"/components/select-default\"\r\n                  text=\"select list\"\r\n                />\r\n                .\r\n              </PatternListItem>\r\n            </ul>\r\n          </Typo>\r\n        </div>\r\n\r\n        {/* Guidelines */}\r\n        <div id=\"guidelines\">\r\n          <Typo type=\"h4\" colorStep={80} className={styles.sub_title}>\r\n            Guidelines\r\n          </Typo>\r\n          <Typo type=\"h6\" colorStep={60} className={styles.sub_title}>\r\n            General\r\n          </Typo>\r\n          <Typo className={styles.text}>\r\n            <ul>\r\n              <PatternListItem title=\"List the options in a logical order,\">\r\n                such as most likely to be selected to least, simplest operation to most complex, or least risk to most. Alphabetical ordering is not recommended because it is language dependent and therefore not localizable.\r\n              </PatternListItem>\r\n              <PatternListItem title=\"If none of the options is a valid choice, add another option to reflect this choice,\">\r\n                such as None or Does not apply.\r\n              </PatternListItem>\r\n            </ul>\r\n          </Typo>\r\n        </div>\r\n\r\n        {/* Labels */}\r\n        <div id=\"labels\">\r\n          <Typo type=\"h5\" colorStep={80} className={styles.sub_title}>\r\n            Labels\r\n          </Typo>\r\n          <Typo className={styles.text}>\r\n            To decide, consider these questions:\r\n            <ul>\r\n              <PatternListItem\r\n                title=\"Is the control used to choose one option from a set of mutually exclusive choices?\"\r\n              >\r\n                If not, use another control. To choose multiple options, use\r\n                <PatternLink\r\n                  url=\"/components/checkbox\"\r\n                  text=\"checkboxes\"\r\n                />\r\n                or a \r\n                <PatternLink\r\n                  url=\"/components/select-multi\"\r\n                  text=\"multi-select\"\r\n                />\r\n                instead.\r\n              </PatternListItem>\r\n              <PatternListItem\r\n                title=\"Is the number of options between two and seven?\"\r\n              >\r\n                Since the screen space used is proportional to the number of options, keep the number of options in a group between two and seven. For eight or more options, use a\r\n                <PatternLink\r\n                  url=\"/components/select-default\"\r\n                  text=\"select list\"\r\n                />\r\n                .\r\n              </PatternListItem>\r\n            </ul>\r\n          </Typo>\r\n        </div>\r\n\r\n        {/* Documentation */}\r\n        <div id=\"documentation\">\r\n          <Typo type=\"h5\" colorStep={80} className={styles.sub_title}>\r\n            Documentation\r\n          </Typo>\r\n          <Typo className={styles.text}>\r\n            To decide, consider these questions:\r\n            <ul>\r\n              <PatternListItem\r\n                title=\"Is the control used to choose one option from a set of mutually exclusive choices?\"\r\n              >\r\n                If not, use another control. To choose multiple options, use\r\n                <PatternLink\r\n                  url=\"/components/checkbox\"\r\n                  text=\"checkboxes\"\r\n                />\r\n                or a \r\n                <PatternLink\r\n                  url=\"/components/select-multi\"\r\n                  text=\"multi-select\"\r\n                />\r\n                instead.\r\n              </PatternListItem>\r\n              <PatternListItem\r\n                title=\"Is the number of options between two and seven?\"\r\n              >\r\n                Since the screen space used is proportional to the number of options, keep the number of options in a group between two and seven. For eight or more options, use a\r\n                <PatternLink\r\n                  url=\"/components/select-default\"\r\n                  text=\"select list\"\r\n                />\r\n                .\r\n              </PatternListItem>\r\n            </ul>\r\n          </Typo>\r\n        </div>\r\n\r\n      </div>\r\n\r\n      {/* Props*/}\r\n      <SidebarContainer>\r\n        <div className={DemoAppStyle[\"right_sidebar\"]}>\r\n          <CustomScrollbar\r\n            autoHide\r\n            autoHideTimeout={2000}\r\n            hideTracksWhenNotNeeded\r\n            renderThumbHorizontal={() => {\r\n              return <div />;\r\n            }}\r\n            renderTrackHorizontal={() => <div />}\r\n          >\r\n            <div className={StyleGrid[\"demo-props\"]}>\r\n              <Label>In this section:</Label>\r\n              <HashLink to=\"#rightControl\" className={styles.sidebarLink}>\r\n                Is this the right control to use?\r\n              </HashLink>\r\n              <HashLink to=\"#guidelines\" className={styles.sidebarLink}>\r\n                Guidelines\r\n              </HashLink>\r\n              <HashLink to=\"#labels\" className={styles.sidebarLink}>\r\n                Labels\r\n              </HashLink>\r\n              <HashLink to=\"#documentation\" className={styles.sidebarLink}>\r\n                Documentation\r\n              </HashLink>\r\n            </div>\r\n          </CustomScrollbar>\r\n        </div>\r\n      </SidebarContainer>\r\n      {/***** */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DemoStart;\r\n"]},"metadata":{},"sourceType":"module"}