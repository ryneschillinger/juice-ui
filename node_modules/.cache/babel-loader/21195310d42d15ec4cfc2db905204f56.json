{"ast":null,"code":"import _slicedToArray from \"/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/src/@candy-ui/demo/Slider/ComponentTemplate.jsx\";\nimport React from \"react\";\n/* Import component props */\n\nimport PropsGroup from \"./PropsGroup.jsx\"; //import SelectShapeGroup from \"../SelectShapeGroup.jsx\";\n\nimport SelectColorGroup from \"../SelectColorGroup.jsx\"; //import SelectViewGroup from \"../SelectViewGroup.jsx\";\n\nimport DemoAppStyle from \"../styles/style.module.css\";\nimport Typography from \"../../core/Typography\";\nimport { SidebarContainer } from \"../components/SidebarContainer\";\n/**Import demo component body*/\n\nimport { DEMO } from \"./DemoComponent.jsx\";\n/**Import usage & API  of component*/\n\nimport { API } from \"./api.jsx\";\n/**SETTINGS OF THIS DEMO*/\n\n/*Set component data (variables)*/\n\nconst Props = {\n  name: \"Slider\",\n  desc: \"A slider is a numeric input for choosing numbers between lower and upper bounds. It also has a labeled axis that supports custom formatting.\",\n\n  /**default value*/\n  type: \"def\",\n  view: \"filled\",\n  color: \"primary\"\n};\n/**Available variants of TYPES & VIEWS (variables)*/\n//const shapes = [[\"Default\", \"def\"]];\n//const views = [[\"Filled\", \"filled\"]];\n\n/**END OF SETTINGS*/\n\n/**Demo template*/\n\nconst Content = props => {\n  /*Set states of props*/\n  const _React$useState = React.useState(60),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        value = _React$useState2[0],\n        setValue = _React$useState2[1];\n\n  const _React$useState3 = React.useState(false),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        vertical = _React$useState4[0],\n        setVertical = _React$useState4[1]; //const [shape, setShape] = React.useState(Props.type);\n  //const [view, setView] = React.useState(Props.view);\n\n\n  const _React$useState5 = React.useState(Props.color),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        color = _React$useState6[0],\n        setColor = _React$useState6[1];\n\n  React.useEffect(() => {\n    document.title = \"React Design System: component \".concat(Props.name);\n    document.getElementsByTagName(\"META\")[\"description\"].content = \"Demo \".concat(Props.name, \" component for React Candy UI Design System with possible props. \").concat(Props.desc);\n  });\n  return React.createElement(\"div\", {\n    className: DemoAppStyle[\"content-container\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: DemoAppStyle[\"content-component\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    type: \"h3\",\n    className: \"demo-name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, Props.name), React.createElement(Typography, {\n    type: \"h6\",\n    colorStep: 60,\n    className: \"demo-desc\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, Props.desc), React.createElement(\"div\", {\n    className: \"demo-content-component\",\n    style: {\n      padding: \"1.5rem\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(DEMO, {\n    color: color,\n    value: value,\n    setValue: setValue,\n    vertical: vertical,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"BodyBig demo-api\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(API, {\n    name: Props.name,\n    color: color,\n    value: value,\n    setValue: setValue,\n    vertical: vertical,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }))), React.createElement(SidebarContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: DemoAppStyle[\"right_sidebar\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: DemoAppStyle[\"demo-props\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(PropsGroup, {\n    vertical: vertical,\n    setVertical: setVertical,\n    margin: \"4px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), React.createElement(SelectColorGroup, {\n    color: color,\n    setColor: setColor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  })))));\n};\n\nexport default Content;","map":{"version":3,"sources":["/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/src/@candy-ui/demo/Slider/ComponentTemplate.jsx"],"names":["React","PropsGroup","SelectColorGroup","DemoAppStyle","Typography","SidebarContainer","DEMO","API","Props","name","desc","type","view","color","Content","props","useState","value","setValue","vertical","setVertical","setColor","useEffect","document","title","getElementsByTagName","content","padding"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\n/* Import component props */\r\nimport PropsGroup from \"./PropsGroup.jsx\";\r\n//import SelectShapeGroup from \"../SelectShapeGroup.jsx\";\r\nimport SelectColorGroup from \"../SelectColorGroup.jsx\";\r\n//import SelectViewGroup from \"../SelectViewGroup.jsx\";\r\nimport DemoAppStyle from \"../styles/style.module.css\";\r\n\r\nimport Typography from \"../../core/Typography\";\r\nimport { SidebarContainer } from \"../components/SidebarContainer\";\r\n\r\n/**Import demo component body*/\r\nimport { DEMO } from \"./DemoComponent.jsx\";\r\n/**Import usage & API  of component*/\r\nimport { API } from \"./api.jsx\";\r\n\r\n/**SETTINGS OF THIS DEMO*/\r\n/*Set component data (variables)*/\r\nconst Props = {\r\n  name: \"Slider\",\r\n  desc:\r\n    \"A slider is a numeric input for choosing numbers between lower and upper bounds. It also has a labeled axis that supports custom formatting.\",\r\n  /**default value*/\r\n  type: \"def\",\r\n  view: \"filled\",\r\n  color: \"primary\"\r\n};\r\n/**Available variants of TYPES & VIEWS (variables)*/\r\n//const shapes = [[\"Default\", \"def\"]];\r\n//const views = [[\"Filled\", \"filled\"]];\r\n/**END OF SETTINGS*/\r\n\r\n/**Demo template*/\r\nconst Content = props => {\r\n  /*Set states of props*/\r\n  const [value, setValue] = React.useState(60);\r\n  const [vertical, setVertical] = React.useState(false);\r\n\r\n  //const [shape, setShape] = React.useState(Props.type);\r\n  //const [view, setView] = React.useState(Props.view);\r\n  const [color, setColor] = React.useState(Props.color);\r\n\r\n  React.useEffect(() => {\r\n    document.title = `React Design System: component ${Props.name}`;\r\n    document.getElementsByTagName(\"META\")[\"description\"].content = `Demo ${\r\n      Props.name\r\n    } component for React Candy UI Design System with possible props. ${\r\n      Props.desc\r\n    }`;\r\n  });\r\n\r\n  return (\r\n    <div className={DemoAppStyle[\"content-container\"]}>\r\n      <div className={DemoAppStyle[\"content-component\"]}>\r\n        {/*COMPONENT*/}\r\n        {/*NAME*/}\r\n        <Typography type=\"h3\" className=\"demo-name\">\r\n          {Props.name}\r\n        </Typography>\r\n        {/*Description */}\r\n        <Typography type=\"h6\" colorStep={60} className=\"demo-desc\">\r\n          {Props.desc}\r\n        </Typography>\r\n        {/*Content*/}\r\n        <div className=\"demo-content-component\" style={{ padding: \"1.5rem\" }}>\r\n          <DEMO\r\n            color={color}\r\n            value={value}\r\n            setValue={setValue}\r\n            vertical={vertical}\r\n          />\r\n        </div>\r\n        <div className=\"BodyBig demo-api\">\r\n          <API\r\n            name={Props.name}\r\n            color={color}\r\n            value={value}\r\n            setValue={setValue}\r\n            vertical={vertical}\r\n          />\r\n        </div>\r\n      </div>\r\n      {/* Props*/}\r\n      <SidebarContainer>\r\n        <div className={DemoAppStyle[\"right_sidebar\"]}>\r\n          {/**Set this Props component */}\r\n          <div className={DemoAppStyle[\"demo-props\"]}>\r\n            <PropsGroup\r\n              vertical={vertical}\r\n              setVertical={setVertical}\r\n              margin=\"4px\"\r\n            />\r\n            {/*}    <SelectShapeGroup\r\n              shape={shape}\r\n              setShape={setShape}\r\n              shapes={shapes}\r\n            />\r\n  <SelectViewGroup view={view} setView={setView} views={views} />*/}\r\n            <SelectColorGroup color={color} setColor={setColor} />\r\n          </div>\r\n        </div>\r\n      </SidebarContainer>\r\n      {/***** */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Content;\r\n"]},"metadata":{},"sourceType":"module"}