{"ast":null,"code":"var _jsxFileName = \"/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/src/@candy-ui/demo/Tabs/DemoData.jsx\";\nimport React from \"react\";\nimport { Classes, H3 } from \"@blueprintjs/core\";\nexport const TabsData = [{\n  id: 1,\n  icon: \"globe-network\",\n  title: \"React\",\n  panel: React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(H3, {\n    style: {\n      textAlign: \"left\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"React\"), React.createElement(\"p\", {\n    className: Classes.RUNNING_TEXT,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"Lots of people use React as the V in MVC. Since React makes no assumptions about the rest of your technology stack, it's easy to try it out on a small feature in an existing project.\")),\n  visible: true\n}, {\n  id: 2,\n  icon: \"shield\",\n  title: \"Angular\",\n  panel: React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(H3, {\n    style: {\n      textAlign: \"left\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Angular\"), React.createElement(\"p\", {\n    className: Classes.RUNNING_TEXT,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"HTML is great for declaring static documents, but it falters when we try to use it for declaring dynamic views in web-applications. AngularJS lets you extend HTML vocabulary for your application. The resulting environment is extraordinarily expressive, readable, and quick to develop.\")),\n  visible: true\n}, {\n  id: 3,\n  icon: \"flame\",\n  title: \"Ember\",\n  panel: React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(H3, {\n    style: {\n      textAlign: \"left\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Ember\"), React.createElement(\"p\", {\n    className: Classes.RUNNING_TEXT,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Ember.js is an open-source JavaScript application framework, based on the model-view-controller (MVC) pattern. It allows developers to create scalable single-page web applications by incorporating common idioms and best practices into the framework. What is your favorite JS framework?\")),\n  visible: true\n}, {\n  id: 4,\n  icon: \"cube\",\n  title: \"Vue\",\n  panel: null,\n  visible: true,\n  disabled: true\n}];","map":{"version":3,"sources":["/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/src/@candy-ui/demo/Tabs/DemoData.jsx"],"names":["React","Classes","H3","TabsData","id","icon","title","panel","textAlign","RUNNING_TEXT","visible","disabled"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,OAAT,EAAkBC,EAAlB,QAA4B,mBAA5B;AAEA,OAAO,MAAMC,QAAQ,GAAG,CACtB;AACEC,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE,eAFR;AAGEC,EAAAA,KAAK,EAAE,OAHT;AAIEC,EAAAA,KAAK,EACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,EAAD;AAAI,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAG,IAAA,SAAS,EAAEP,OAAO,CAACQ,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8LAFF,CALJ;AAcEC,EAAAA,OAAO,EAAE;AAdX,CADsB,EAiBtB;AACEN,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE,QAFR;AAGEC,EAAAA,KAAK,EAAE,SAHT;AAIEC,EAAAA,KAAK,EACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,EAAD;AAAI,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAG,IAAA,SAAS,EAAEP,OAAO,CAACQ,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oSAFF,CALJ;AAgBEC,EAAAA,OAAO,EAAE;AAhBX,CAjBsB,EAmCtB;AACEN,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE,OAFR;AAGEC,EAAAA,KAAK,EAAE,OAHT;AAIEC,EAAAA,KAAK,EACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,EAAD;AAAI,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAG,IAAA,SAAS,EAAEP,OAAO,CAACQ,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qSAFF,CALJ;AAeEC,EAAAA,OAAO,EAAE;AAfX,CAnCsB,EAoDtB;AACEN,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE,MAFR;AAGEC,EAAAA,KAAK,EAAE,KAHT;AAIEC,EAAAA,KAAK,EAAE,IAJT;AAKEG,EAAAA,OAAO,EAAE,IALX;AAMEC,EAAAA,QAAQ,EAAE;AANZ,CApDsB,CAAjB","sourcesContent":["import React from \"react\";\r\n\r\nimport { Classes, H3 } from \"@blueprintjs/core\";\r\n\r\nexport const TabsData = [\r\n  {\r\n    id: 1,\r\n    icon: \"globe-network\",\r\n    title: \"React\",\r\n    panel: (\r\n      <div>\r\n        <H3 style={{ textAlign: \"left\" }}>React</H3>\r\n        <p className={Classes.RUNNING_TEXT}>\r\n          Lots of people use React as the V in MVC. Since React makes no\r\n          assumptions about the rest of your technology stack, it's easy to try\r\n          it out on a small feature in an existing project.\r\n        </p>\r\n      </div>\r\n    ),\r\n    visible: true\r\n  },\r\n  {\r\n    id: 2,\r\n    icon: \"shield\",\r\n    title: \"Angular\",\r\n    panel: (\r\n      <div>\r\n        <H3 style={{ textAlign: \"left\" }}>Angular</H3>\r\n        <p className={Classes.RUNNING_TEXT}>\r\n          HTML is great for declaring static documents, but it falters when we\r\n          try to use it for declaring dynamic views in web-applications.\r\n          AngularJS lets you extend HTML vocabulary for your application. The\r\n          resulting environment is extraordinarily expressive, readable, and\r\n          quick to develop.\r\n        </p>\r\n      </div>\r\n    ),\r\n    visible: true\r\n  },\r\n  {\r\n    id: 3,\r\n    icon: \"flame\",\r\n    title: \"Ember\",\r\n    panel: (\r\n      <div>\r\n        <H3 style={{ textAlign: \"left\" }}>Ember</H3>\r\n        <p className={Classes.RUNNING_TEXT}>\r\n          Ember.js is an open-source JavaScript application framework, based on the\r\n          model-view-controller (MVC) pattern. It allows developers to create\r\n          scalable single-page web applications by incorporating common idioms and\r\n          best practices into the framework. What is your favorite JS framework?\r\n        </p>\r\n      </div>\r\n    ),\r\n    visible: true\r\n  },\r\n  {\r\n    id: 4,\r\n    icon: \"cube\",\r\n    title: \"Vue\",\r\n    panel: null,\r\n    visible: true,\r\n    disabled: true\r\n  }\r\n];\r\n"]},"metadata":{},"sourceType":"module"}