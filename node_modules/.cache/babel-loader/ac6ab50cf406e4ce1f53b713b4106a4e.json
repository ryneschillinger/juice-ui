{"ast":null,"code":"import _defineProperty from \"/Users/ryneschillinger1/dev_projects/ux-kitchen/ui-kitchen-ingredients/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"/Users/ryneschillinger1/dev_projects/ux-kitchen/ui-kitchen-ingredients/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/ryneschillinger1/dev_projects/ux-kitchen/ui-kitchen-ingredients/src/@setproduct-ui/demo/components/CustomScrollbar.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport { Scrollbars } from \"react-custom-scrollbars\";\nimport { useDevice } from \"./customHooks\";\nexport const CustomScrollbar = (_ref) => {\n  let children = _ref.children,\n      left = _ref.left,\n      props = _objectWithoutProperties(_ref, [\"children\", \"left\"]);\n\n  let device = useDevice();\n\n  renderView = (_ref2) => {\n    let style = _ref2.style,\n        props = _objectWithoutProperties(_ref2, [\"style\"]);\n\n    const top = this.state.top;\n    const viewStyle = {\n      padding: 15,\n      backgroundColor: \"rgb(\".concat(Math.round(255 - top * 255), \", \").concat(Math.round(top * 255), \", \").concat(Math.round(255), \")\"),\n      color: \"rgb(\".concat(Math.round(255 - top * 255), \", \").concat(Math.round(255 - top * 255), \", \").concat(Math.round(255 - top * 255), \")\")\n    };\n    return React.createElement(\"div\", Object.assign({\n      className: \"box\",\n      style: _objectSpread({}, style, {}, viewStyle)\n    }, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }));\n  };\n\n  renderThumb = (_ref3) => {\n    let style = _ref3.style,\n        props = _objectWithoutProperties(_ref3, [\"style\"]);\n\n    const top = this.state.top;\n    const thumbStyle = {\n      backgroundColor: \"rgb(\".concat(Math.round(255 - top * 255), \", \").concat(Math.round(255 - top * 255), \", \").concat(Math.round(255 - top * 255), \")\")\n    };\n    return React.createElement(\"div\", Object.assign({\n      style: _objectSpread({}, style, {}, thumbStyle)\n    }, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }));\n  };\n\n  return device === \"mobile\" || device !== \"desktop\" && left ? React.createElement(React.Fragment, null, children) : React.createElement(Scrollbars, Object.assign({\n    renderView: this.renderView,\n    renderThumbHorizontal: this.renderThumb,\n    renderThumbVertical: this.renderThumb\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), children);\n};","map":{"version":3,"sources":["/Users/ryneschillinger1/dev_projects/ux-kitchen/ui-kitchen-ingredients/src/@setproduct-ui/demo/components/CustomScrollbar.jsx"],"names":["React","Scrollbars","useDevice","CustomScrollbar","children","left","props","device","renderView","style","top","state","viewStyle","padding","backgroundColor","Math","round","color","renderThumb","thumbStyle"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,SAASC,SAAT,QAA0B,eAA1B;AAEA,OAAO,MAAMC,eAAe,GAAG,UAAkC;AAAA,MAA/BC,QAA+B,QAA/BA,QAA+B;AAAA,MAArBC,IAAqB,QAArBA,IAAqB;AAAA,MAAZC,KAAY;;AAC/D,MAAIC,MAAM,GAAGL,SAAS,EAAtB;;AAEAM,EAAAA,UAAU,GAAG,WAAyB;AAAA,QAAtBC,KAAsB,SAAtBA,KAAsB;AAAA,QAAZH,KAAY;;AAAA,UAC5BI,GAD4B,GACpB,KAAKC,KADe,CAC5BD,GAD4B;AAEpC,UAAME,SAAS,GAAG;AACdC,MAAAA,OAAO,EAAE,EADK;AAEdC,MAAAA,eAAe,gBAASC,IAAI,CAACC,KAAL,CAAW,MAAON,GAAG,GAAG,GAAxB,CAAT,eAA2CK,IAAI,CAACC,KAAL,CAAWN,GAAG,GAAG,GAAjB,CAA3C,eAAqEK,IAAI,CAACC,KAAL,CAAW,GAAX,CAArE,MAFD;AAGdC,MAAAA,KAAK,gBAASF,IAAI,CAACC,KAAL,CAAW,MAAON,GAAG,GAAG,GAAxB,CAAT,eAA2CK,IAAI,CAACC,KAAL,CAAW,MAAON,GAAG,GAAG,GAAxB,CAA3C,eAA6EK,IAAI,CAACC,KAAL,CAAW,MAAON,GAAG,GAAG,GAAxB,CAA7E;AAHS,KAAlB;AAKA,WACI;AACI,MAAA,SAAS,EAAC,KADd;AAEI,MAAA,KAAK,oBAAOD,KAAP,MAAiBG,SAAjB;AAFT,OAGQN,KAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ;AAMD,GAbD;;AAeAY,EAAAA,WAAW,GAAG,WAAyB;AAAA,QAAtBT,KAAsB,SAAtBA,KAAsB;AAAA,QAAZH,KAAY;;AAAA,UAC3BI,GAD2B,GACnB,KAAKC,KADc,CAC3BD,GAD2B;AAEnC,UAAMS,UAAU,GAAG;AACfL,MAAAA,eAAe,gBAASC,IAAI,CAACC,KAAL,CAAW,MAAON,GAAG,GAAG,GAAxB,CAAT,eAA2CK,IAAI,CAACC,KAAL,CAAW,MAAON,GAAG,GAAG,GAAxB,CAA3C,eAA6EK,IAAI,CAACC,KAAL,CAAW,MAAON,GAAG,GAAG,GAAxB,CAA7E;AADA,KAAnB;AAGA,WACI;AACI,MAAA,KAAK,oBAAOD,KAAP,MAAiBU,UAAjB;AADT,OAEQb,KAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ;AAKH,GAVD;;AAYA,SAAOC,MAAM,KAAK,QAAX,IAAwBA,MAAM,KAAK,SAAX,IAAwBF,IAAhD,GACL,0CAAGD,QAAH,CADK,GAGL,oBAAC,UAAD;AACE,IAAA,UAAU,EAAE,KAAKI,UADnB;AAEE,IAAA,qBAAqB,EAAE,KAAKU,WAF9B;AAGE,IAAA,mBAAmB,EAAE,KAAKA;AAH5B,KAIMZ,KAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMGF,QANH,CAHF;AAYD,CA1CM","sourcesContent":["import React from \"react\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport { useDevice } from \"./customHooks\";\r\n\r\nexport const CustomScrollbar = ({ children, left, ...props }) => {\r\n  let device = useDevice();\r\n\r\n  renderView = ({ style, ...props }) => {\r\n    const { top } = this.state;\r\n    const viewStyle = {\r\n        padding: 15,\r\n        backgroundColor: `rgb(${Math.round(255 - (top * 255))}, ${Math.round(top * 255)}, ${Math.round(255)})`,\r\n        color: `rgb(${Math.round(255 - (top * 255))}, ${Math.round(255 - (top * 255))}, ${Math.round(255 - (top * 255))})`\r\n    };\r\n    return (\r\n        <div\r\n            className=\"box\"\r\n            style={{ ...style, ...viewStyle }}\r\n            {...props}/>\r\n    );\r\n  }\r\n\r\n  renderThumb = ({ style, ...props }) => {\r\n      const { top } = this.state;\r\n      const thumbStyle = {\r\n          backgroundColor: `rgb(${Math.round(255 - (top * 255))}, ${Math.round(255 - (top * 255))}, ${Math.round(255 - (top * 255))})`\r\n      };\r\n      return (\r\n          <div\r\n              style={{ ...style, ...thumbStyle }}\r\n              {...props}/>\r\n      );\r\n  }\r\n\r\n  return device === \"mobile\" || (device !== \"desktop\" && left) ? (\r\n    <>{children}</>\r\n  ) : (\r\n    <Scrollbars\r\n      renderView={this.renderView}\r\n      renderThumbHorizontal={this.renderThumb}\r\n      renderThumbVertical={this.renderThumb}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </Scrollbars>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}