{"ast":null,"code":"import _slicedToArray from \"/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/src/@candy-ui/core/Table/Table/Table.jsx\";\nimport React from \"react\";\nimport cx from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { Icon } from \"@blueprintjs/core\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\n/*SETPRODUCT COMPONENTS*/\n\nimport Checkbox from \"../Checkbox\";\nimport Paper from \"../Paper\";\nimport Button from \"../../Button\";\nimport Shape from \"./table.module.css\";\nimport View from \"./_view.module.css\";\nimport Color from \"../../../styles/color.module.css\";\n\nfunction desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction stableSort(array, cmp) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n  return order === \"desc\" ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\n}\n\nfunction FuncTableHead(props) {\n  const onSelectAllClick = props.onSelectAllClick,\n        order = props.order,\n        orderBy = props.orderBy,\n        numSelected = props.numSelected,\n        rowCount = props.rowCount,\n        onRequestSort = props.onRequestSort,\n        name = props.name,\n        position = props.position,\n        view = props.view,\n        type = props.type,\n        color = props.color,\n        checkboxes = props.checkboxes;\n\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  let setShape;\n  type === \"dense\" ? setShape = \"dense_\" : setShape = \"\";\n  return React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, checkboxes && React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(Checkbox, {\n    indeterminate: numSelected > 0 && numSelected < rowCount,\n    checked: numSelected === rowCount,\n    onChange: onSelectAllClick,\n    color: color,\n    className: cx(numSelected === rowCount ? View[view + \"-head-checked\"] : View[view + \"-head-unchecked\"], View[\"checkbox\"]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  })), name.map((row_n, index) => position[index] === \"left\" ? React.createElement(TableCell, {\n    key: row_n.id,\n    sortDirection: orderBy === row_n.id ? order : false,\n    className: cx(orderBy === row_n.id && View[\"sorted_head\"], orderBy === row_n.id && View[setShape + view]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(TableSortLabel, {\n    active: orderBy === row_n.id,\n    direction: order,\n    onClick: createSortHandler(row_n.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, row_n.label)) : React.createElement(TableCell, {\n    key: row_n.id,\n    align: position[index],\n    sortDirection: orderBy === row_n.id ? order : false,\n    className: cx(orderBy === row_n.id && View[\"sorted_head\"], orderBy === row_n.id && View[setShape + view]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(TableSortLabel, {\n    active: orderBy === row_n.id,\n    direction: order,\n    onClick: createSortHandler(row_n.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, row_n.label)), this)));\n}\n\nexport default function SPTable(props) {\n  const name = props.name,\n        data = props.data,\n        position = props.position,\n        type = props.type,\n        view = props.view,\n        color = props.color,\n        pages = props.pages,\n        classes = props.classes,\n        defRows = props.defRows,\n        checkboxes = props.checkboxes,\n        rest = _objectWithoutProperties(props, [\"name\", \"data\", \"position\", \"type\", \"view\", \"color\", \"pages\", \"classes\", \"defRows\", \"checkboxes\"]);\n  /*PAGINATION FUNCTIONS*/\n\n\n  const _React$useState = React.useState(0),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        page = _React$useState2[0],\n        setPage = _React$useState2[1];\n\n  const _React$useState3 = React.useState(pages ? defRows : data.length),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        rowsPerPage = _React$useState4[0],\n        setRowsPerPage = _React$useState4[1];\n\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(event.target.value);\n  }\n  /*END PAGINATION*/\n\n  /*SORTING FUNCTIONS*/\n\n\n  const _React$useState5 = React.useState(\"asc\"),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        order = _React$useState6[0],\n        setOrder = _React$useState6[1];\n\n  const _React$useState7 = React.useState(\"\"),\n        _React$useState8 = _slicedToArray(_React$useState7, 2),\n        orderBy = _React$useState8[0],\n        setOrderBy = _React$useState8[1];\n\n  function handleRequestSort(event, property) {\n    const isDesc = orderBy === property && order === \"desc\";\n    setOrder(isDesc ? \"asc\" : \"desc\");\n    setOrderBy(property);\n  }\n  /*END SORTING*/\n\n  /*SELECTION FUNCTIONS*/\n\n\n  const _React$useState9 = React.useState([]),\n        _React$useState10 = _slicedToArray(_React$useState9, 2),\n        selected = _React$useState10[0],\n        setSelected = _React$useState10[1];\n\n  function handleSelectAllClick(event) {\n    if (selected.length === 0) {\n      const newSelecteds = data.map(n => n.id);\n      setSelected(newSelecteds);\n      return;\n    }\n\n    setSelected([]);\n  }\n\n  function handleClick(event, id) {\n    const selectedIndex = selected.indexOf(id);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, id);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n\n    setSelected(newSelected);\n  }\n\n  const isSelected = id => selected.indexOf(id) !== -1;\n  /*END SELECTION*/\n\n\n  let setShape;\n  type === \"dense\" ? setShape = \"dense_\" : setShape = \"\";\n  return React.createElement(Paper, {\n    type: type,\n    view: view,\n    color: color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, React.createElement(Table, {\n    className: cx(Shape[type], View[type], View[view], pages && View.pagination, Color[color]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }, React.createElement(FuncTableHead, {\n    name: name,\n    position: position,\n    order: order,\n    orderBy: orderBy,\n    onRequestSort: handleRequestSort,\n    shape: type,\n    view: view,\n    color: color,\n    checkboxes: checkboxes,\n    onSelectAllClick: handleSelectAllClick,\n    rowCount: data.length,\n    numSelected: selected.length,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  }, stableSort(data, getSorting(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\n    const isItemSelected = isSelected(row.id);\n    return React.createElement(TableRow, {\n      onClick: event => handleClick(event, row.id),\n      role: \"checkbox\",\n      \"aria-checked\": isItemSelected,\n      tabIndex: -1,\n      key: row.id,\n      selected: isItemSelected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, checkboxes && React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      checked: isItemSelected,\n      className: cx(isItemSelected ? View[view + \"-body-checked\"] : View[view + \"-body-unchecked\"], View[\"checkbox\"]),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    })), name.map((i_name, index) => position[index] === \"left\" ? React.createElement(TableCell, {\n      key: i_name.id,\n      className: cx(orderBy === i_name.id && View[\"sorted_body\"], orderBy === i_name.id && View[setShape + view]),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, row[i_name.id]) : React.createElement(TableCell, {\n      align: position[index],\n      key: i_name.id,\n      className: cx(orderBy === i_name.id && View[\"sorted_body\"], orderBy === i_name.id && View[setShape + view]),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, row[i_name.id])));\n  }))), pages && React.createElement(\"div\", {\n    style: {\n      display: \"inline\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301\n    },\n    __self: this\n  }, selected.length > 0 && React.createElement(\"div\", {\n    className: cx(Shape[type + \"-trash\"], View[type], View[view + \"-trash\"], Color[color]),\n    style: {\n      float: \"left\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"none\",\n    view: \"none\",\n    color: \"none\",\n    className: cx(Shape[type + \"-trash-btn\"], View[view + \"-trash-btn\"]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    icon: \"trash\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: Shape[\"info-text\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323\n    },\n    __self: this\n  }, selected.length, \" item selected\")), React.createElement(TablePagination, {\n    rowsPerPageOptions: rest.rowsPerPageOptions,\n    component: \"div\",\n    count: data.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    labelDisplayedRows: () => \"\" //\"Page \" + (page + 1)} <- current page\n    ,\n    backIconButtonProps: {\n      \"aria-label\": \"Previous Page\"\n    },\n    nextIconButtonProps: {\n      \"aria-label\": \"Next Page\"\n    },\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    labelRowsPerPage: rest.labelRowsPerPage,\n    className: cx(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328\n    },\n    __self: this\n  })));\n}\nSPTable.propTypes = {\n  /**\r\n   `The type of the component.\r\n   * Variants: `def` `dense` \r\n   * Default value (if undefined): `def` `\r\n   */\n  type: PropTypes.oneOf([\"def\", \"dense\"]),\n\n  /**\r\n   ` The view of the component.\r\n   * Variants: `filled` `flat` `smooth` `raised`\r\n   * Default value (if undefined): `filled` `\r\n   */\n  view: PropTypes.oneOf([\"filled\", \"flat\", \"smooth\", \"raised\"]),\n\n  /**\r\n  ` The color of the component.\r\n   * Variants: `primary` `warning` `danger` `success` `primaryAlt` `warningAlt` `dangerAlt` `successAlt`\r\n   * Default value (if undefined): `default` `\r\n   */\n  color: PropTypes.oneOf([\"default\", \"primary\", \"warning\", \"danger\", \"success\", \"primary_alt\", \"warning_alt\", \"danger_alt\", \"success_alt\"]),\n\n  /**\r\n   * Use or not pagination\r\n   */\n  pages: PropTypes.bool,\n\n  /**\r\n   * Use or not checkboxes\r\n   */\n  checkboxes: PropTypes.bool\n};","map":{"version":3,"sources":["/Users/ryneschillinger1/dev_projects/candy-ui/candy-ui/src/@candy-ui/core/Table/Table/Table.jsx"],"names":["React","cx","PropTypes","Icon","Table","TableBody","TableCell","TableHead","TableRow","TablePagination","TableSortLabel","Checkbox","Paper","Button","Shape","View","Color","desc","a","b","orderBy","stableSort","array","cmp","stabilizedThis","map","el","index","sort","order","getSorting","FuncTableHead","props","onSelectAllClick","numSelected","rowCount","onRequestSort","name","position","view","type","color","checkboxes","createSortHandler","property","event","setShape","row_n","id","label","SPTable","data","pages","classes","defRows","rest","useState","page","setPage","length","rowsPerPage","setRowsPerPage","handleChangePage","newPage","handleChangeRowsPerPage","target","value","setOrder","setOrderBy","handleRequestSort","isDesc","selected","setSelected","handleSelectAllClick","newSelecteds","n","handleClick","selectedIndex","indexOf","newSelected","concat","slice","isSelected","pagination","row","isItemSelected","i_name","display","float","rowsPerPageOptions","labelRowsPerPage","propTypes","oneOf","bool"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport cx from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { Icon } from \"@blueprintjs/core\";\r\n\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\n\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\n\r\n/*SETPRODUCT COMPONENTS*/\r\nimport Checkbox from \"../Checkbox\";\r\nimport Paper from \"../Paper\";\r\nimport Button from \"../../Button\";\r\n\r\nimport Shape from \"./table.module.css\";\r\nimport View from \"./_view.module.css\";\r\nimport Color from \"../../../styles/color.module.css\";\r\n\r\nfunction desc(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction stableSort(array, cmp) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = cmp(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nfunction getSorting(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => desc(a, b, orderBy)\r\n    : (a, b) => -desc(a, b, orderBy);\r\n}\r\n\r\nfunction FuncTableHead(props) {\r\n  const {\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort,\r\n    name,\r\n    position,\r\n    view,\r\n    type,\r\n    color,\r\n    checkboxes\r\n  } = props;\r\n\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  let setShape;\r\n  type === \"dense\" ? (setShape = \"dense_\") : (setShape = \"\");\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {/* if checkable*/}\r\n        {checkboxes && (\r\n          <TableCell>\r\n            <Checkbox\r\n              indeterminate={numSelected > 0 && numSelected < rowCount}\r\n              checked={numSelected === rowCount}\r\n              onChange={onSelectAllClick}\r\n              color={color}\r\n              className={cx(\r\n                numSelected === rowCount\r\n                  ? View[view + \"-head-checked\"]\r\n                  : View[view + \"-head-unchecked\"],\r\n                View[\"checkbox\"]\r\n              )}\r\n            />\r\n          </TableCell>\r\n        )}\r\n\r\n        {name.map(\r\n          (row_n, index) =>\r\n            position[index] === \"left\" ? (\r\n              <TableCell\r\n                key={row_n.id}\r\n                sortDirection={orderBy === row_n.id ? order : false}\r\n                className={cx(\r\n                  orderBy === row_n.id && View[\"sorted_head\"],\r\n                  orderBy === row_n.id && View[setShape + view]\r\n                )}\r\n              >\r\n                <TableSortLabel\r\n                  active={orderBy === row_n.id}\r\n                  direction={order}\r\n                  onClick={createSortHandler(row_n.id)}\r\n                >\r\n                  {row_n.label}\r\n                </TableSortLabel>\r\n              </TableCell>\r\n            ) : (\r\n              <TableCell\r\n                key={row_n.id}\r\n                align={position[index]}\r\n                sortDirection={orderBy === row_n.id ? order : false}\r\n                className={cx(\r\n                  orderBy === row_n.id && View[\"sorted_head\"],\r\n                  orderBy === row_n.id && View[setShape + view]\r\n                )}\r\n              >\r\n                <TableSortLabel\r\n                  active={orderBy === row_n.id}\r\n                  direction={order}\r\n                  onClick={createSortHandler(row_n.id)}\r\n                >\r\n                  {row_n.label}\r\n                </TableSortLabel>\r\n              </TableCell>\r\n            ),\r\n          this\r\n        )}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nexport default function SPTable(props) {\r\n  const {\r\n    name,\r\n    data,\r\n    position,\r\n    type,\r\n    view,\r\n    color,\r\n    pages,\r\n    classes,\r\n    defRows,\r\n    checkboxes,\r\n    ...rest\r\n  } = props;\r\n\r\n  /*PAGINATION FUNCTIONS*/\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(\r\n    pages ? defRows : data.length\r\n  );\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n  }\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(event.target.value);\r\n  }\r\n  /*END PAGINATION*/\r\n\r\n  /*SORTING FUNCTIONS*/\r\n  const [order, setOrder] = React.useState(\"asc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"\");\r\n  function handleRequestSort(event, property) {\r\n    const isDesc = orderBy === property && order === \"desc\";\r\n    setOrder(isDesc ? \"asc\" : \"desc\");\r\n    setOrderBy(property);\r\n  }\r\n  /*END SORTING*/\r\n\r\n  /*SELECTION FUNCTIONS*/\r\n  const [selected, setSelected] = React.useState([]);\r\n\r\n  function handleSelectAllClick(event) {\r\n    if (selected.length === 0) {\r\n      const newSelecteds = data.map(n => n.id);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n\r\n    setSelected([]);\r\n  }\r\n\r\n  function handleClick(event, id) {\r\n    const selectedIndex = selected.indexOf(id);\r\n    let newSelected = [];\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n    setSelected(newSelected);\r\n  }\r\n\r\n  const isSelected = id => selected.indexOf(id) !== -1;\r\n  /*END SELECTION*/\r\n\r\n  let setShape;\r\n  type === \"dense\" ? (setShape = \"dense_\") : (setShape = \"\");\r\n\r\n  return (\r\n    <Paper type={type} view={view} color={color}>\r\n      <Table\r\n        className={cx(\r\n          Shape[type],\r\n          View[type],\r\n          View[view],\r\n          pages && View.pagination,\r\n          Color[color]\r\n        )}\r\n      >\r\n        {/* HEAD */}\r\n        <FuncTableHead\r\n          name={name}\r\n          position={position}\r\n          order={order}\r\n          orderBy={orderBy}\r\n          onRequestSort={handleRequestSort}\r\n          shape={type}\r\n          view={view}\r\n          color={color}\r\n          checkboxes={checkboxes}\r\n          onSelectAllClick={handleSelectAllClick}\r\n          rowCount={data.length}\r\n          numSelected={selected.length}\r\n        />\r\n        {/*END HEAD*/}\r\n        <TableBody>\r\n          {stableSort(data, getSorting(order, orderBy))\r\n            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            .map((row, index) => {\r\n              const isItemSelected = isSelected(row.id);\r\n              return (\r\n                <TableRow\r\n                  onClick={event => handleClick(event, row.id)}\r\n                  role=\"checkbox\"\r\n                  aria-checked={isItemSelected}\r\n                  tabIndex={-1}\r\n                  key={row.id}\r\n                  selected={isItemSelected}\r\n                >\r\n                  {/* if checkable*/}\r\n                  {checkboxes && (\r\n                    <TableCell>\r\n                      <Checkbox\r\n                        checked={isItemSelected}\r\n                        className={cx(\r\n                          isItemSelected\r\n                            ? View[view + \"-body-checked\"]\r\n                            : View[view + \"-body-unchecked\"],\r\n                          View[\"checkbox\"]\r\n                        )}\r\n                      />\r\n                    </TableCell>\r\n                  )}\r\n                  {/*end checkbox */}\r\n                  {name.map((i_name, index) =>\r\n                    position[index] === \"left\" ? (\r\n                      <TableCell\r\n                        key={i_name.id}\r\n                        className={cx(\r\n                          orderBy === i_name.id && View[\"sorted_body\"],\r\n                          orderBy === i_name.id && View[setShape + view]\r\n                        )}\r\n                      >\r\n                        {row[i_name.id]}\r\n                      </TableCell>\r\n                    ) : (\r\n                      <TableCell\r\n                        align={position[index]}\r\n                        key={i_name.id}\r\n                        className={cx(\r\n                          orderBy === i_name.id && View[\"sorted_body\"],\r\n                          orderBy === i_name.id && View[setShape + view]\r\n                        )}\r\n                      >\r\n                        {row[i_name.id]}\r\n                      </TableCell>\r\n                    )\r\n                  )}\r\n                </TableRow>\r\n              );\r\n            })}\r\n        </TableBody>\r\n      </Table>\r\n      {/* if pagination true */}\r\n      {pages && (\r\n        <div style={{ display: \"inline\" }}>\r\n          {selected.length > 0 && (\r\n            <div\r\n              className={cx(\r\n                Shape[type + \"-trash\"],\r\n                View[type],\r\n                View[view + \"-trash\"],\r\n                Color[color]\r\n              )}\r\n              style={{ float: \"left\" }}\r\n            >\r\n              <Button\r\n                type=\"none\"\r\n                view=\"none\"\r\n                color=\"none\"\r\n                className={cx(\r\n                  Shape[type + \"-trash-btn\"],\r\n                  View[view + \"-trash-btn\"]\r\n                )}\r\n              >\r\n                <Icon icon=\"trash\" />\r\n              </Button>\r\n              <div className={Shape[\"info-text\"]}>\r\n                {selected.length} item selected\r\n              </div>\r\n            </div>\r\n          )}\r\n          <TablePagination\r\n            rowsPerPageOptions={rest.rowsPerPageOptions}\r\n            component=\"div\"\r\n            count={data.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            labelDisplayedRows={() => \"\"} //\"Page \" + (page + 1)} <- current page\r\n            backIconButtonProps={{\r\n              \"aria-label\": \"Previous Page\"\r\n            }}\r\n            nextIconButtonProps={{\r\n              \"aria-label\": \"Next Page\"\r\n            }}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            labelRowsPerPage={rest.labelRowsPerPage}\r\n            className={cx(\r\n              // Shape[type + \"-pag\"],\r\n              // View[type],\r\n              // // View[view + \"-pag\"],\r\n              // Color[color]\r\n            )}\r\n          />\r\n        </div>\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nSPTable.propTypes = {\r\n  /**\r\n   `The type of the component.\r\n   * Variants: `def` `dense` \r\n   * Default value (if undefined): `def` `\r\n   */\r\n  type: PropTypes.oneOf([\"def\", \"dense\"]),\r\n  /**\r\n   ` The view of the component.\r\n   * Variants: `filled` `flat` `smooth` `raised`\r\n   * Default value (if undefined): `filled` `\r\n   */\r\n  view: PropTypes.oneOf([\"filled\", \"flat\", \"smooth\", \"raised\"]),\r\n  /**\r\n  ` The color of the component.\r\n   * Variants: `primary` `warning` `danger` `success` `primaryAlt` `warningAlt` `dangerAlt` `successAlt`\r\n   * Default value (if undefined): `default` `\r\n   */\r\n  color: PropTypes.oneOf([\r\n    \"default\",\r\n    \"primary\",\r\n    \"warning\",\r\n    \"danger\",\r\n    \"success\",\r\n    \"primary_alt\",\r\n    \"warning_alt\",\r\n    \"danger_alt\",\r\n    \"success_alt\"\r\n  ]),\r\n  /**\r\n   * Use or not pagination\r\n   */\r\n  pages: PropTypes.bool,\r\n  /**\r\n   * Use or not checkboxes\r\n   */\r\n  checkboxes: PropTypes.bool\r\n};\r\n"]},"metadata":{},"sourceType":"module"}